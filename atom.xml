<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>0xCAFEBABE的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wuyuzhao666.github.io/"/>
  <updated>2019-07-10T08:33:25.450Z</updated>
  <id>http://wuyuzhao666.github.io/</id>
  
  <author>
    <name>Wu yuzhao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用tk.mybatis查询，某些字段返回0的问题</title>
    <link href="http://wuyuzhao666.github.io/2019/07/10/%E4%BD%BF%E7%94%A8tk-mybatis%E6%9F%A5%E8%AF%A2%EF%BC%8C%E6%9F%90%E4%BA%9B%E5%AD%97%E6%AE%B5%E8%BF%94%E5%9B%9E0%E7%9A%84%E9%97%AE%E9%A2%98/%E4%BD%BF%E7%94%A8tk-mybatis%E6%9F%A5%E8%AF%A2%EF%BC%8C%E6%9F%90%E4%BA%9B%E5%AD%97%E6%AE%B5%E8%BF%94%E5%9B%9E0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://wuyuzhao666.github.io/2019/07/10/使用tk-mybatis查询，某些字段返回0的问题/使用tk-mybatis查询，某些字段返回0的问题/</id>
    <published>2019-07-10T08:21:27.000Z</published>
    <updated>2019-07-10T08:33:25.450Z</updated>
    
    <content type="html"><![CDATA[<p>今天使用<code>mapper4</code>出现了个问题，记录一下。</p><p>查询代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">example = <span class="keyword">new</span> Example(VesselTrackData.class);</span><br><span class="line">           <span class="keyword">if</span> (dateType != <span class="number">0</span>)&#123;</span><br><span class="line">              date = determineDate(dateType);</span><br><span class="line">               System.out.println(<span class="string">"date:"</span> + date);</span><br><span class="line">              example.createCriteria().andGreaterThanOrEqualTo(<span class="string">"updateTime"</span> , date).andEqualTo(<span class="string">"shipId"</span> , id);</span><br><span class="line">           &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">              example.createCriteria().andEqualTo(<span class="string">"shipId"</span> , id).andBetween(<span class="string">"updateTime"</span> ,beginDate , endDate);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           List&lt;VesselTrackData&gt; vesselTrackData = vesselTrackDataMapper.selectByExample(example);</span><br></pre></td></tr></table></figure><p>本来想要查询某张表的所有字段，但是其中某些字段为0。</p><center><img src="http://res.cloudinary.com/cafebabe/mybatis-1"></center><p>打印<code>sql</code>：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">slow sql 25 millis. <span class="keyword">SELECT</span>  ship_id,publish_time,update_time  <span class="keyword">FROM</span> <span class="string">`vessel_track_data`</span>  <span class="keyword">WHERE</span> (       (  ship_id = ?</span><br><span class="line">            </span><br><span class="line">        </span><br><span class="line">          </span><br><span class="line">              <span class="keyword">and</span> update_time <span class="keyword">between</span> ? <span class="keyword">and</span> ? ) )[<span class="string">"1037032"</span>,<span class="string">"2019-02-27 00:00:00"</span>,<span class="string">"2019-07-10 00:00:00"</span>]</span><br></pre></td></tr></table></figure><p>发现只查询了其中几个<code>String</code>字段，后去查看实体类，发现非<code>String</code>字段为写成包装类型，我将<code>double</code>类型改为<code>Double</code>就<code>ok</code>了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天使用&lt;code&gt;mapper4&lt;/code&gt;出现了个问题，记录一下。&lt;/p&gt;
&lt;p&gt;查询代码：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line
      
    
    </summary>
    
      <category term="MyBatis" scheme="http://wuyuzhao666.github.io/categories/MyBatis/"/>
    
    
  </entry>
  
  <entry>
    <title>修改大数据表以及优化分页查询</title>
    <link href="http://wuyuzhao666.github.io/2019/07/01/%E4%BF%AE%E6%94%B9%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%A1%A8%E4%BB%A5%E5%8F%8A%E4%BC%98%E5%8C%96%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/%E4%BF%AE%E6%94%B9%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%A1%A8%E4%BB%A5%E5%8F%8A%E4%BC%98%E5%8C%96%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2/"/>
    <id>http://wuyuzhao666.github.io/2019/07/01/修改大数据表以及优化分页查询/修改大数据表以及优化分页查询/</id>
    <published>2019-07-01T01:42:35.000Z</published>
    <updated>2019-07-01T03:32:59.492Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h4><p>最近在对一张百万级行的数据表进行分页操作时，查询时间太长（建表，以及sql语句太过粗糙。。。），首次查询<strong>50000</strong>条以后的数据，查询时间达到了<strong>1min40</strong>秒，这个时间对用户来说是无法忍受的，所以需要进行优化下。在查询了一些资料后，决定给这张表建立索引，以及优化<code>sql</code>。</p><h4 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h4><p><a href="https://www.kancloud.cn/thinkphp/mysql-design-optimalize/39319" target="_blank" rel="noopener">mysql的最佳索引攻略</a></p><p>考虑到我的sql中最经常出现的是publish_time和keyword两个字段，所以我创建了个组合索引，并且对keyword使用前缀索引。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> my_table <span class="keyword">add</span> <span class="keyword">index</span> keyword_time (keyword(<span class="number">10</span>),publish_time);</span><br></pre></td></tr></table></figure><h4 id="大数据表的修改"><a href="#大数据表的修改" class="headerlink" title="大数据表的修改"></a>大数据表的修改</h4><p>给一张百万级行的数据表添加索引，最开始我的想法是：</p><ul><li>建立新表，给临时表建立索引。</li><li>将旧表数据插入到新表中。</li><li>删除旧表，修改新表名。</li></ul><p>这样的方法虽然可行，但也出现了一些问题，在进行；插入新表这个操作是需要大量时间的，这个时间段如果有新数据插入，就会导致两个表的数据差距，当然也可以选择在低峰期间进行，比如半夜，但这样未免过于复杂。这时可以使用一些Online-DDL工具帮助我们完成操作。</p><h5 id="使用pt-online-schema-change"><a href="#使用pt-online-schema-change" class="headerlink" title="使用pt-online-schema-change"></a>使用pt-online-schema-change</h5><p><a href="https://blog.csdn.net/weixin_38950807/article/details/94379305" target="_blank" rel="noopener">pt-online-schema-change的安装</a></p><p>pt-osc的操作原理也基本和我们上文所说一样：<br>创建一个新的空表new，然后从原始表格 tbosc 中拷贝数据到新的表格new，copy data结束后，使用new替换old，同时，删除旧表。<br>需要注意的是：</p><blockquote><p> <strong>表必须带有主键或者唯一索引！！</strong></p></blockquote><h6 id="详细过程如下"><a href="#详细过程如下" class="headerlink" title="详细过程如下"></a>详细过程如下</h6><ul><li>相关环境参数检查</li><li>检查该表格是否存在</li><li>show create table old</li><li>create table new</li><li>alter table new </li><li>创建删除触发器 pt_osc_dbddl_old_del <strong>(如果数据修改的时候，还没有拷贝过来，修改后再拷贝则是覆盖，正确；如果是已经拷贝过来，再修改，也是正确，这里同时会检查是否具有主键或者唯一索引，如果都没有，这一步会报错，提示The new table <code>old</code>.<code>new</code> does not have a PRIMARY KEY or a unique index which is required for the DELETE trigger.）</strong></li><li>创建更新触发器 pt_osc_dbddl_old_upd</li><li>创建插入触发器 pt_osc_dbddl_old_ins</li><li>按块拷贝数据到新表，拷贝过程对数据行持有S锁</li><li>analyze 新表</li><li>rename 表名</li><li>删除旧表，删除新表上的删除、更新、插入 触发器</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Master percona-toolkit-<span class="number">3.0</span>.<span class="number">13</span>]<span class="comment"># pt-online-schema-change --user=root --password=root --host=localhost --port=3306  --alter="add index time(publish_time,update_time)" D=数据库,t=数据表 --nocheck-replication-filters --nocheck-unique-key-change --max-lag=5  --check-interval=2 --alter-foreign-keys-method=auto --execute --print</span></span><br></pre></td></tr></table></figure><p>只需要修改<code>--alter=&quot;add index time(publish_time,update_time)&quot;</code>内容。</p><p>可以看出<code>pt-ost</code>这个工具帮我们把所有工作都完成了，并且给旧表创建了（删除，更新，插入触发器），确保了新旧表没有数据差异。</p><h4 id="sql的优化"><a href="#sql的优化" class="headerlink" title="sql的优化"></a>sql的优化</h4><p>原始sql：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> my_table <span class="keyword">where</span> keyword = xx publish_time &gt;= <span class="number">1500000000000</span> <span class="keyword">limit</span> <span class="number">50000</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure><p>这种写法，是将前50000条数据进行排序后，仅仅返回50001到50005条数据，其他的都抛弃到，查询和排序的代价极高。</p><p>优化sql：</p><p>在索引上完成排序分页的操作，然后通过主键关联回原表查询所需要的其他列的内容。这样就不用权标扫描。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">explain</span> <span class="keyword">select</span> </span><br><span class="line">a.id, </span><br><span class="line">a.keyword,</span><br><span class="line">a.publish_time,</span><br><span class="line">           <span class="keyword">from</span> my_table a <span class="keyword">inner</span> <span class="keyword">join</span></span><br><span class="line">                            (<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> my_table <span class="keyword">where</span> keyword = xxx <span class="keyword">and</span> publish_time &gt;= <span class="number">1500000000000</span> <span class="keyword">limit</span> <span class="number">50000</span>,<span class="number">5</span>)b</span><br><span class="line">                            <span class="keyword">on</span> a.id = b. <span class="keyword">id</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h4&gt;&lt;p&gt;最近在对一张百万级行的数据表进行分页操作时，查询时间太长（建表，以及sql语句太过粗糙。。。），首次查询&lt;strong&gt;50000&lt;/str
      
    
    </summary>
    
      <category term="数据库" scheme="http://wuyuzhao666.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MySql" scheme="http://wuyuzhao666.github.io/tags/MySql/"/>
    
  </entry>
  
  <entry>
    <title>pt-online-schema-change的安装</title>
    <link href="http://wuyuzhao666.github.io/2019/07/01/pt-online-schema-change%E7%9A%84%E5%AE%89%E8%A3%85/pt-online-schema-change%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>http://wuyuzhao666.github.io/2019/07/01/pt-online-schema-change的安装/pt-online-schema-change的安装/</id>
    <published>2019-07-01T01:04:01.000Z</published>
    <updated>2019-07-01T01:24:29.428Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 下载</span><br><span class="line">[root@localhost admin]# wget percona.com/get/percona-toolkit.tar.gz</span><br><span class="line"><span class="meta">#</span> 解压</span><br><span class="line">[root@localhost admin]# tar -zvxf percona-toolkit.tar.gz</span><br><span class="line">[root@localhost admin]# cd percona-toolkit-3.0.13/</span><br><span class="line"><span class="meta">#</span> 安装perl依赖</span><br><span class="line">[root@localhost percona-toolkit-3.0.13]#  yum install perl-ExtUtils-CBuilder perl-ExtUtils-MakeMaker</span><br><span class="line">[root@localhost percona-toolkit-3.0.13]# perl Makefile.PL</span><br><span class="line"><span class="meta">#</span> 编译安装</span><br><span class="line">[root@localhost percona-toolkit-3.0.13]# make</span><br><span class="line">[root@localhost percona-toolkit-3.0.13]# make install</span><br><span class="line"><span class="meta">#</span> 验证</span><br><span class="line">[root@localhost percona-toolkit-3.0.13]# pt-online-schema-change</span><br></pre></td></tr></table></figure><blockquote><p>若报错</p></blockquote><center><img src="http://res.cloudinary.com/cafebabe/image/upload/posc.jpg"></center><p><strong>缺少perl-Digest-MD5包，</strong> <strong>安装perl-Digest-MD5即可解决</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost percona-toolkit-3.0.13]# yum -y install perl-Digest-MD5</span><br></pre></td></tr></table></figure><p>其他情况，同理。</p><blockquote><p>出现如下结果，成功。</p></blockquote><center><img src="http://res.cloudinary.com/cafebabe/image/upload/posc2.jpg"></center>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="Linux" scheme="http://wuyuzhao666.github.io/categories/Linux/"/>
    
    
      <category term="工具" scheme="http://wuyuzhao666.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot@Component注解下的类无法@Autowired的问题</title>
    <link href="http://wuyuzhao666.github.io/2019/06/26/SpringBoot@Component%E6%B3%A8%E8%A7%A3%E4%B8%8B%E7%9A%84%E7%B1%BB%E6%97%A0%E6%B3%95@Autowired%E7%9A%84%E9%97%AE%E9%A2%98/SpringBoot@Component%E6%B3%A8%E8%A7%A3%E4%B8%8B%E7%9A%84%E7%B1%BB%E6%97%A0%E6%B3%95@Autowired%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://wuyuzhao666.github.io/2019/06/26/SpringBoot@Component注解下的类无法@Autowired的问题/SpringBoot@Component注解下的类无法@Autowired的问题/</id>
    <published>2019-06-26T00:30:03.000Z</published>
    <updated>2019-06-26T01:05:26.171Z</updated>
    
    <content type="html"><![CDATA[<h5 id="这个问题心累"><a href="#这个问题心累" class="headerlink" title="这个问题心累"></a>这个问题心累</h5><p>在把我的一个非Web程序迁移从<code>Spring</code>迁移到<code>SpringBoot</code>时，出现了在<code>@Component</code>注解下<code>@Autowired</code>的类为<code>null</code>的情况，也就是没注入成功，或者说是此类在<code>bean</code>加载之前就被调用了。</p><p>试了各种办法，修改扫描包，修改<code>@Component</code>注解等等，皆未成功，后来看到了一个方法，探究了一下。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComponentClass</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JedisClient jedisClient;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ComponentClass componentClass;</span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        componentClass = <span class="keyword">this</span>;</span><br><span class="line">        componentClass.jedisClient = <span class="keyword">this</span>.jedisClient;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>声明一个此类的静态变量，用以保存bean。</li><li>使用<code>@PostConstruct</code>注解，将需要注入的类添加到静态变量中。</li><li>接下来，使用这个静态变量来调用注入类就行了。</li></ul><p><code>@PostConstruct</code>这个注解的具体作用就是：</p><p>注解在方法上，表示此方法是在<code>Spring</code>实例化该<code>bean</code>之后马上执行此方法，之后才会去实例化其他<code>bean</code>。</p><p>这样在<code>Spring</code>实例化<code>ComponentClass</code>之后，马上执行此方法，初始化<code>ComponentClass</code>静态对象和成员变量<code>jedisClient</code>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;这个问题心累&quot;&gt;&lt;a href=&quot;#这个问题心累&quot; class=&quot;headerlink&quot; title=&quot;这个问题心累&quot;&gt;&lt;/a&gt;这个问题心累&lt;/h5&gt;&lt;p&gt;在把我的一个非Web程序迁移从&lt;code&gt;Spring&lt;/code&gt;迁移到&lt;code&gt;SpringBoot&lt;
      
    
    </summary>
    
      <category term="Spring Boot" scheme="http://wuyuzhao666.github.io/categories/Spring-Boot/"/>
    
    
      <category term="注入问题" scheme="http://wuyuzhao666.github.io/tags/%E6%B3%A8%E5%85%A5%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Amazon Linux下解决shadowsocks服务端EVP_CIPHER_CTX_cleanup() 函数报错</title>
    <link href="http://wuyuzhao666.github.io/2019/06/24/Amazon-Linux%E4%B8%8B%E8%A7%A3%E5%86%B3shadowsocks%E6%9C%8D%E5%8A%A1%E7%AB%AFEVP-CIPHER-CTX-cleanup-%E5%87%BD%E6%95%B0%E6%8A%A5%E9%94%99/Amazon-Linux%E4%B8%8B%E8%A7%A3%E5%86%B3shadowsocks%E6%9C%8D%E5%8A%A1%E7%AB%AFEVP-CIPHER-CTX-cleanup-%E5%87%BD%E6%95%B0%E6%8A%A5%E9%94%99/"/>
    <id>http://wuyuzhao666.github.io/2019/06/24/Amazon-Linux下解决shadowsocks服务端EVP-CIPHER-CTX-cleanup-函数报错/Amazon-Linux下解决shadowsocks服务端EVP-CIPHER-CTX-cleanup-函数报错/</id>
    <published>2019-06-24T07:30:08.000Z</published>
    <updated>2019-06-24T07:36:51.042Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Amazon-Linux下解决shadowsocks服务端EVP-CIPHER-CTX-cleanup-函数报错"><a href="#Amazon-Linux下解决shadowsocks服务端EVP-CIPHER-CTX-cleanup-函数报错" class="headerlink" title="Amazon Linux下解决shadowsocks服务端EVP_CIPHER_CTX_cleanup() 函数报错"></a>Amazon Linux下解决shadowsocks服务端EVP_CIPHER_CTX_cleanup() 函数报错</h4><p><code>Amazon Linux</code>的<code>openssl</code>版本高于1.1.0以上版本，导致<code>shadowsocks</code>服务出现<code>undefined symbol: EVP_CIPHER_CTX_cleanup</code> 错误而无法启动。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;/root/miniconda3/bin/ssserver&quot;, line 10, in &lt;module&gt;</span><br><span class="line">    sys.exit(main())</span><br><span class="line">  File &quot;/root/miniconda3/lib/python3.7/site-packages/shadowsocks/server.py&quot;, line 34, in main</span><br><span class="line">    config = shell.get_config(False)</span><br><span class="line">  File &quot;/root/miniconda3/lib/python3.7/site-packages/shadowsocks/shell.py&quot;, line 262, in get_config</span><br><span class="line">    check_config(config, is_local)</span><br><span class="line">  File &quot;/root/miniconda3/lib/python3.7/site-packages/shadowsocks/shell.py&quot;, line 124, in check_config</span><br><span class="line">    encrypt.try_cipher(config[&apos;password&apos;], config[&apos;method&apos;])</span><br><span class="line">  File &quot;/root/miniconda3/lib/python3.7/site-packages/shadowsocks/encrypt.py&quot;, line 44, in try_cipher</span><br><span class="line">    Encryptor(key, method)</span><br><span class="line">  File &quot;/root/miniconda3/lib/python3.7/site-packages/shadowsocks/encrypt.py&quot;, line 83, in __init__</span><br><span class="line">    random_string(self._method_info[1]))</span><br><span class="line">  File &quot;/root/miniconda3/lib/python3.7/site-packages/shadowsocks/encrypt.py&quot;, line 109, in get_cipher</span><br><span class="line">    return m[2](method, key, iv, op)</span><br><span class="line">  File &quot;/root/miniconda3/lib/python3.7/site-packages/shadowsocks/crypto/rc4_md5.py&quot;, line 33, in create_cipher</span><br><span class="line">    return openssl.OpenSSLCrypto(b&apos;rc4&apos;, rc4_key, b&apos;&apos;, op)</span><br><span class="line">  File &quot;/root/miniconda3/lib/python3.7/site-packages/shadowsocks/crypto/openssl.py&quot;, line 76, in __init__</span><br><span class="line">    load_openssl()</span><br><span class="line">  File &quot;/root/miniconda3/lib/python3.7/site-packages/shadowsocks/crypto/openssl.py&quot;, line 52, in load_openssl</span><br><span class="line">    libcrypto.EVP_CIPHER_CTX_cleanup.argtypes = (c_void_p,)</span><br><span class="line">  File &quot;/root/miniconda3/lib/python3.7/ctypes/__init__.py&quot;, line 369, in __getattr__</span><br><span class="line">    func = self.__getitem__(name)</span><br><span class="line">  File &quot;/root/miniconda3/lib/python3.7/ctypes/__init__.py&quot;, line 374, in __getitem__</span><br><span class="line">    func = self._FuncPtr((name_or_ordinal, self))</span><br><span class="line">AttributeError: /root/miniconda3/lib/python3.7/lib-dynload/../../libcrypto.so.1.1: undefined symbol: EVP_CIPHER_CTX_cleanup</span><br></pre></td></tr></table></figure><p>这是由于在openssl 1.1.0中废弃了 <code>EVP_CIPHER_CTX_cleanup()</code> 函数而引入了 <code>EVE_CIPHER_CTX_reset()</code> 函数所导致的：</p><blockquote><p><strong>EVP_CIPHER_CTX</strong> was made opaque in OpenSSL 1.1.0. As a result, EVP_CIPHER_CTX_reset() appeared and EVP_CIPHER_CTX_cleanup() disappeared. EVP_CIPHER_CTX_init() remains as an alias for EVP_CIPHER_CTX_reset().</p></blockquote><p>因此，可以通过将 <code>EVP_CIPHER_CTX_cleanup()</code> 函数替换为 <code>EVP_CIPHER_CTX_reset()</code> 函数来解决该问题。具体解决方法如下：</p><ul><li><p>根据错误信息定位到文件/root/miniconda3/lib/python3.7/site-packages/shadowsocks/crypto/openssl.py。</p></li><li><p>搜索 cleanup 并将其替换为 reset 。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root]vi /root/miniconda3/lib/python3.7/site-packages/shadowsocks/crypto/openssl.py</span><br><span class="line">[root]/cleanup</span><br></pre></td></tr></table></figure><p>​    不止一处，替换完。</p><ul><li>重新启动 shadowsocks, 该问题解决。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Amazon-Linux下解决shadowsocks服务端EVP-CIPHER-CTX-cleanup-函数报错&quot;&gt;&lt;a href=&quot;#Amazon-Linux下解决shadowsocks服务端EVP-CIPHER-CTX-cleanup-函数报错&quot; class=
      
    
    </summary>
    
      <category term="Linux" scheme="http://wuyuzhao666.github.io/categories/Linux/"/>
    
    
      <category term="shdowsocks" scheme="http://wuyuzhao666.github.io/tags/shdowsocks/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot+Thymeleaf配置外部静态资源访问</title>
    <link href="http://wuyuzhao666.github.io/2019/06/23/SpringBoot-Thymeleaf%E9%85%8D%E7%BD%AE%E5%A4%96%E9%83%A8%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E8%AE%BF%E9%97%AE/SpringBoot-Thymeleaf%E9%85%8D%E7%BD%AE%E5%A4%96%E9%83%A8%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E8%AE%BF%E9%97%AE/"/>
    <id>http://wuyuzhao666.github.io/2019/06/23/SpringBoot-Thymeleaf配置外部静态资源访问/SpringBoot-Thymeleaf配置外部静态资源访问/</id>
    <published>2019-06-23T02:40:29.000Z</published>
    <updated>2019-06-23T02:56:42.466Z</updated>
    
    <content type="html"><![CDATA[<p>#####配置外部资源访问（html、css、js）</p><p>我的thymeleaf配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># thymeleaf</span><br><span class="line"># html目录配置</span><br><span class="line">spring.thymeleaf.prefix=file:d:/tt/templates/</span><br><span class="line">spring.thymeleaf.suffix=.html</span><br><span class="line">spring.thymeleaf.cache=false</span><br><span class="line">spring.thymeleaf.servlet.content-type=text/html</span><br><span class="line">spring.thymeleaf.enabled=true</span><br><span class="line">spring.thymeleaf.encoding=UTF-8</span><br><span class="line"># 一代填 spring.thymeleaf.mode=HTML5</span><br><span class="line">spring.thymeleaf.mode=HTML</span><br></pre></td></tr></table></figure><p>css与js静态资源访问通过实现WebMvcConfigurer来配置：</p><p>如下配置文件的方式无法访问到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spring.mvc.static-path-pattern=/**</span><br><span class="line">#spring.resources.static-locations= classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:d:/tt/static/</span><br></pre></td></tr></table></figure><p>MVCConfig：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span> <span class="comment">//申明这是一个配置</span></span><br><span class="line"><span class="meta">@EnableWebMvc</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MySrpingMVCConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addResourceHandler(<span class="string">"/**"</span>).addResourceLocations(<span class="string">"file:d:/tt/static/"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>html文件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// 引入头</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>AdminLTE 2 | Dashboard<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"</span> <span class="attr">name</span>=<span class="string">"viewport"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Bootstrap 3.3.7 --&gt;</span></span><br><span class="line">// bower_components/bootstrap/dist/css/bootstrap.min.css位于static目录下</span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../static/bower_components/bootstrap/dist/css/bootstrap.min.css"</span> <span class="attr">th:href</span>=<span class="string">"@&#123;bower_components/bootstrap/dist/css/bootstrap.min.css&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样所有的前端页面就在项目之外了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#####配置外部资源访问（html、css、js）&lt;/p&gt;
&lt;p&gt;我的thymeleaf配置：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line
      
    
    </summary>
    
      <category term="Spring Boot" scheme="http://wuyuzhao666.github.io/categories/Spring-Boot/"/>
    
    
      <category term="thymeleaf" scheme="http://wuyuzhao666.github.io/tags/thymeleaf/"/>
    
  </entry>
  
  <entry>
    <title>Spring boot属性配置列表</title>
    <link href="http://wuyuzhao666.github.io/2019/06/17/Spring-boot%E5%B1%9E%E6%80%A7%E9%85%8D%E7%BD%AE%E5%88%97%E8%A1%A8/Spring-boot%E5%B1%9E%E6%80%A7%E9%85%8D%E7%BD%AE%E5%88%97%E8%A1%A8/"/>
    <id>http://wuyuzhao666.github.io/2019/06/17/Spring-boot属性配置列表/Spring-boot属性配置列表/</id>
    <published>2019-06-17T07:35:28.000Z</published>
    <updated>2019-06-17T07:43:24.318Z</updated>
    
    <content type="html"><![CDATA[<p>可以在application.properties/application.yml文件中指定各种属性，也可以在命令行开关中指定。</p><p>记录一下，方便查看，来源（<a href="https://docs.spring.io/spring-boot/docs/1.5.9.RELEASE/reference/htmlsingle/#boot-features-external-config-random-values" target="_blank" rel="noopener">spring.io</a>）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br></pre></td><td class="code"><pre><span class="line"># ===================================================================</span><br><span class="line"># COMMON SPRING BOOT PROPERTIES</span><br><span class="line">#</span><br><span class="line"># This sample file is provided as a guideline. Do NOT copy it in its</span><br><span class="line"># entirety to your own application.               ^^^</span><br><span class="line"># ===================================================================</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----------------------------------------</span><br><span class="line"># CORE PROPERTIES</span><br><span class="line"># ----------------------------------------</span><br><span class="line"></span><br><span class="line"># BANNER</span><br><span class="line">banner.charset=UTF-8 # Banner file encoding.</span><br><span class="line">banner.location=classpath:banner.txt # Banner file location.</span><br><span class="line">banner.image.location=classpath:banner.gif # Banner image file location (jpg/png can also be used).</span><br><span class="line">banner.image.width= # Width of the banner image in chars (default 76)</span><br><span class="line">banner.image.height= # Height of the banner image in chars (default based on image height)</span><br><span class="line">banner.image.margin= # Left hand image margin in chars (default 2)</span><br><span class="line">banner.image.invert= # If images should be inverted for dark terminal themes (default false)</span><br><span class="line"></span><br><span class="line"># LOGGING</span><br><span class="line">logging.config= # Location of the logging configuration file. For instance `classpath:logback.xml` for Logback</span><br><span class="line">logging.exception-conversion-word=%wEx # Conversion word used when logging exceptions.</span><br><span class="line">logging.file= # Log file name. For instance `myapp.log`</span><br><span class="line">logging.level.*= # Log levels severity mapping. For instance `logging.level.org.springframework=DEBUG`</span><br><span class="line">logging.path= # Location of the log file. For instance `/var/log`</span><br><span class="line">logging.pattern.console= # Appender pattern for output to the console. Only supported with the default logback setup.</span><br><span class="line">logging.pattern.file= # Appender pattern for output to the file. Only supported with the default logback setup.</span><br><span class="line">logging.pattern.level= # Appender pattern for log level (default %5p). Only supported with the default logback setup.</span><br><span class="line">logging.register-shutdown-hook=false # Register a shutdown hook for the logging system when it is initialized.</span><br><span class="line"></span><br><span class="line"># AOP</span><br><span class="line">spring.aop.auto=true # Add @EnableAspectJAutoProxy.</span><br><span class="line">spring.aop.proxy-target-class= # Whether subclass-based (CGLIB) proxies are to be created (true) as opposed to standard Java interface-based proxies (false). Defaults to &quot;true&quot; when using Spring Transaction Management, otherwise &quot;false&quot;.</span><br><span class="line"></span><br><span class="line"># IDENTITY (ContextIdApplicationContextInitializer)</span><br><span class="line">spring.application.index= # Application index.</span><br><span class="line">spring.application.name= # Application name.</span><br><span class="line"></span><br><span class="line"># ADMIN (SpringApplicationAdminJmxAutoConfiguration)</span><br><span class="line">spring.application.admin.enabled=false # Enable admin features for the application.</span><br><span class="line">spring.application.admin.jmx-name=org.springframework.boot:type=Admin,name=SpringApplication # JMX name of the application admin MBean.</span><br><span class="line"></span><br><span class="line"># AUTO-CONFIGURATION</span><br><span class="line">spring.autoconfigure.exclude= # Auto-configuration classes to exclude.</span><br><span class="line"></span><br><span class="line"># SPRING CORE</span><br><span class="line">spring.beaninfo.ignore=true # Skip search of BeanInfo classes.</span><br><span class="line"></span><br><span class="line"># SPRING CACHE (CacheProperties)</span><br><span class="line">spring.cache.cache-names= # Comma-separated list of cache names to create if supported by the underlying cache manager.</span><br><span class="line">spring.cache.caffeine.spec= # The spec to use to create caches. Check CaffeineSpec for more details on the spec format.</span><br><span class="line">spring.cache.couchbase.expiration=0 # Entry expiration in milliseconds. By default the entries never expire.</span><br><span class="line">spring.cache.ehcache.config= # The location of the configuration file to use to initialize EhCache.</span><br><span class="line">spring.cache.guava.spec= # The spec to use to create caches. Check CacheBuilderSpec for more details on the spec format.</span><br><span class="line">spring.cache.infinispan.config= # The location of the configuration file to use to initialize Infinispan.</span><br><span class="line">spring.cache.jcache.config= # The location of the configuration file to use to initialize the cache manager.</span><br><span class="line">spring.cache.jcache.provider= # Fully qualified name of the CachingProvider implementation to use to retrieve the JSR-107 compliant cache manager. Only needed if more than one JSR-107 implementation is available on the classpath.</span><br><span class="line">spring.cache.type= # Cache type, auto-detected according to the environment by default.</span><br><span class="line"></span><br><span class="line"># SPRING CONFIG - using environment property only (ConfigFileApplicationListener)</span><br><span class="line">spring.config.location= # Config file locations.</span><br><span class="line">spring.config.name=application # Config file name.</span><br><span class="line"></span><br><span class="line"># HAZELCAST (HazelcastProperties)</span><br><span class="line">spring.hazelcast.config= # The location of the configuration file to use to initialize Hazelcast.</span><br><span class="line"></span><br><span class="line"># PROJECT INFORMATION (ProjectInfoProperties)</span><br><span class="line">spring.info.build.location=classpath:META-INF/build-info.properties # Location of the generated build-info.properties file.</span><br><span class="line">spring.info.git.location=classpath:git.properties # Location of the generated git.properties file.</span><br><span class="line"></span><br><span class="line"># JMX</span><br><span class="line">spring.jmx.default-domain= # JMX domain name.</span><br><span class="line">spring.jmx.enabled=true # Expose management beans to the JMX domain.</span><br><span class="line">spring.jmx.server=mbeanServer # MBeanServer bean name.</span><br><span class="line"></span><br><span class="line"># Email (MailProperties)</span><br><span class="line">spring.mail.default-encoding=UTF-8 # Default MimeMessage encoding.</span><br><span class="line">spring.mail.host= # SMTP server host. For instance `smtp.example.com`</span><br><span class="line">spring.mail.jndi-name= # Session JNDI name. When set, takes precedence to others mail settings.</span><br><span class="line">spring.mail.password= # Login password of the SMTP server.</span><br><span class="line">spring.mail.port= # SMTP server port.</span><br><span class="line">spring.mail.properties.*= # Additional JavaMail session properties.</span><br><span class="line">spring.mail.protocol=smtp # Protocol used by the SMTP server.</span><br><span class="line">spring.mail.test-connection=false # Test that the mail server is available on startup.</span><br><span class="line">spring.mail.username= # Login user of the SMTP server.</span><br><span class="line"></span><br><span class="line"># APPLICATION SETTINGS (SpringApplication)</span><br><span class="line">spring.main.banner-mode=console # Mode used to display the banner when the application runs.</span><br><span class="line">spring.main.sources= # Sources (class name, package name or XML resource location) to include in the ApplicationContext.</span><br><span class="line">spring.main.web-environment= # Run the application in a web environment (auto-detected by default).</span><br><span class="line"></span><br><span class="line"># FILE ENCODING (FileEncodingApplicationListener)</span><br><span class="line">spring.mandatory-file-encoding= # Expected character encoding the application must use.</span><br><span class="line"></span><br><span class="line"># INTERNATIONALIZATION (MessageSourceAutoConfiguration)</span><br><span class="line">spring.messages.always-use-message-format=false # Set whether to always apply the MessageFormat rules, parsing even messages without arguments.</span><br><span class="line">spring.messages.basename=messages # Comma-separated list of basenames, each following the ResourceBundle convention.</span><br><span class="line">spring.messages.cache-seconds=-1 # Loaded resource bundle files cache expiration, in seconds. When set to -1, bundles are cached forever.</span><br><span class="line">spring.messages.encoding=UTF-8 # Message bundles encoding.</span><br><span class="line">spring.messages.fallback-to-system-locale=true # Set whether to fall back to the system Locale if no files for a specific Locale have been found.</span><br><span class="line"></span><br><span class="line"># OUTPUT</span><br><span class="line">spring.output.ansi.enabled=detect # Configure the ANSI output.</span><br><span class="line"></span><br><span class="line"># PID FILE (ApplicationPidFileWriter)</span><br><span class="line">spring.pid.fail-on-write-error= # Fail if ApplicationPidFileWriter is used but it cannot write the PID file.</span><br><span class="line">spring.pid.file= # Location of the PID file to write (if ApplicationPidFileWriter is used).</span><br><span class="line"></span><br><span class="line"># PROFILES</span><br><span class="line">spring.profiles.active= # Comma-separated list (or list if using YAML) of active profiles.</span><br><span class="line">spring.profiles.include= # Unconditionally activate the specified comma separated profiles (or list of profiles if using YAML).</span><br><span class="line"></span><br><span class="line"># SENDGRID (SendGridAutoConfiguration)</span><br><span class="line">spring.sendgrid.api-key= # SendGrid api key (alternative to username/password).</span><br><span class="line">spring.sendgrid.username= # SendGrid account username.</span><br><span class="line">spring.sendgrid.password= # SendGrid account password.</span><br><span class="line">spring.sendgrid.proxy.host= # SendGrid proxy host.</span><br><span class="line">spring.sendgrid.proxy.port= # SendGrid proxy port.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----------------------------------------</span><br><span class="line"># WEB PROPERTIES</span><br><span class="line"># ----------------------------------------</span><br><span class="line"></span><br><span class="line"># EMBEDDED SERVER CONFIGURATION (ServerProperties)</span><br><span class="line">server.address= # Network address to which the server should bind to.</span><br><span class="line">server.compression.enabled=false # If response compression is enabled.</span><br><span class="line">server.compression.excluded-user-agents= # List of user-agents to exclude from compression.</span><br><span class="line">server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript # Comma-separated list of MIME types that should be compressed.</span><br><span class="line">server.compression.min-response-size=2048 # Minimum response size that is required for compression to be performed.</span><br><span class="line">server.connection-timeout= # Time in milliseconds that connectors will wait for another HTTP request before closing the connection. When not set, the connector&apos;s container-specific default will be used. Use a value of -1 to indicate no (i.e. infinite) timeout.</span><br><span class="line">server.context-parameters.*= # Servlet context init parameters. For instance `server.context-parameters.a=alpha`</span><br><span class="line">server.context-path= # Context path of the application.</span><br><span class="line">server.display-name=application # Display name of the application.</span><br><span class="line">server.max-http-header-size=0 # Maximum size in bytes of the HTTP message header.</span><br><span class="line">server.error.include-stacktrace=never # When to include a &quot;stacktrace&quot; attribute.</span><br><span class="line">server.error.path=/error # Path of the error controller.</span><br><span class="line">server.error.whitelabel.enabled=true # Enable the default error page displayed in browsers in case of a server error.</span><br><span class="line">server.jetty.acceptors= # Number of acceptor threads to use.</span><br><span class="line">server.jetty.max-http-post-size=0 # Maximum size in bytes of the HTTP post or put content.</span><br><span class="line">server.jetty.selectors= # Number of selector threads to use.</span><br><span class="line">server.jsp-servlet.class-name=org.apache.jasper.servlet.JspServlet # The class name of the JSP servlet.</span><br><span class="line">server.jsp-servlet.init-parameters.*= # Init parameters used to configure the JSP servlet</span><br><span class="line">server.jsp-servlet.registered=true # Whether or not the JSP servlet is registered</span><br><span class="line">server.port=8080 # Server HTTP port.</span><br><span class="line">server.server-header= # Value to use for the Server response header (no header is sent if empty)</span><br><span class="line">server.servlet-path=/ # Path of the main dispatcher servlet.</span><br><span class="line">server.use-forward-headers= # If X-Forwarded-* headers should be applied to the HttpRequest.</span><br><span class="line">server.session.cookie.comment= # Comment for the session cookie.</span><br><span class="line">server.session.cookie.domain= # Domain for the session cookie.</span><br><span class="line">server.session.cookie.http-only= # &quot;HttpOnly&quot; flag for the session cookie.</span><br><span class="line">server.session.cookie.max-age= # Maximum age of the session cookie in seconds.</span><br><span class="line">server.session.cookie.name= # Session cookie name.</span><br><span class="line">server.session.cookie.path= # Path of the session cookie.</span><br><span class="line">server.session.cookie.secure= # &quot;Secure&quot; flag for the session cookie.</span><br><span class="line">server.session.persistent=false # Persist session data between restarts.</span><br><span class="line">server.session.store-dir= # Directory used to store session data.</span><br><span class="line">server.session.timeout= # Session timeout in seconds.</span><br><span class="line">server.session.tracking-modes= # Session tracking modes (one or more of the following: &quot;cookie&quot;, &quot;url&quot;, &quot;ssl&quot;).</span><br><span class="line">server.ssl.ciphers= # Supported SSL ciphers.</span><br><span class="line">server.ssl.client-auth= # Whether client authentication is wanted (&quot;want&quot;) or needed (&quot;need&quot;). Requires a trust store.</span><br><span class="line">server.ssl.enabled= # Enable SSL support.</span><br><span class="line">server.ssl.enabled-protocols= # Enabled SSL protocols.</span><br><span class="line">server.ssl.key-alias= # Alias that identifies the key in the key store.</span><br><span class="line">server.ssl.key-password= # Password used to access the key in the key store.</span><br><span class="line">server.ssl.key-store= # Path to the key store that holds the SSL certificate (typically a jks file).</span><br><span class="line">server.ssl.key-store-password= # Password used to access the key store.</span><br><span class="line">server.ssl.key-store-provider= # Provider for the key store.</span><br><span class="line">server.ssl.key-store-type= # Type of the key store.</span><br><span class="line">server.ssl.protocol=TLS # SSL protocol to use.</span><br><span class="line">server.ssl.trust-store= # Trust store that holds SSL certificates.</span><br><span class="line">server.ssl.trust-store-password= # Password used to access the trust store.</span><br><span class="line">server.ssl.trust-store-provider= # Provider for the trust store.</span><br><span class="line">server.ssl.trust-store-type= # Type of the trust store.</span><br><span class="line">server.tomcat.accept-count= # Maximum queue length for incoming connection requests when all possible request processing threads are in use.</span><br><span class="line">server.tomcat.accesslog.buffered=true # Buffer output such that it is only flushed periodically.</span><br><span class="line">server.tomcat.accesslog.directory=logs # Directory in which log files are created. Can be relative to the tomcat base dir or absolute.</span><br><span class="line">server.tomcat.accesslog.enabled=false # Enable access log.</span><br><span class="line">server.tomcat.accesslog.file-date-format=.yyyy-MM-dd # Date format to place in log file name.</span><br><span class="line">server.tomcat.accesslog.pattern=common # Format pattern for access logs.</span><br><span class="line">server.tomcat.accesslog.prefix=access_log # Log file name prefix.</span><br><span class="line">server.tomcat.accesslog.rename-on-rotate=false # Defer inclusion of the date stamp in the file name until rotate time.</span><br><span class="line">server.tomcat.accesslog.request-attributes-enabled=false # Set request attributes for IP address, Hostname, protocol and port used for the request.</span><br><span class="line">server.tomcat.accesslog.rotate=true # Enable access log rotation.</span><br><span class="line">server.tomcat.accesslog.suffix=.log # Log file name suffix.</span><br><span class="line">server.tomcat.additional-tld-skip-patterns= # Comma-separated list of additional patterns that match jars to ignore for TLD scanning.</span><br><span class="line">server.tomcat.background-processor-delay=30 # Delay in seconds between the invocation of backgroundProcess methods.</span><br><span class="line">server.tomcat.basedir= # Tomcat base directory. If not specified a temporary directory will be used.</span><br><span class="line">server.tomcat.internal-proxies=10\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</span><br><span class="line">        192\\.168\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</span><br><span class="line">        169\\.254\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</span><br><span class="line">        127\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</span><br><span class="line">        172\\.1[6-9]&#123;1&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</span><br><span class="line">        172\\.2[0-9]&#123;1&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</span><br><span class="line">        172\\.3[0-1]&#123;1&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125; # regular expression matching trusted IP addresses.</span><br><span class="line">server.tomcat.max-connections= # Maximum number of connections that the server will accept and process at any given time.</span><br><span class="line">server.tomcat.max-http-post-size=0 # Maximum size in bytes of the HTTP post content.</span><br><span class="line">server.tomcat.max-threads=0 # Maximum amount of worker threads.</span><br><span class="line">server.tomcat.min-spare-threads=0 # Minimum amount of worker threads.</span><br><span class="line">server.tomcat.port-header=X-Forwarded-Port # Name of the HTTP header used to override the original port value.</span><br><span class="line">server.tomcat.protocol-header= # Header that holds the incoming protocol, usually named &quot;X-Forwarded-Proto&quot;.</span><br><span class="line">server.tomcat.protocol-header-https-value=https # Value of the protocol header that indicates that the incoming request uses SSL.</span><br><span class="line">server.tomcat.redirect-context-root= # Whether requests to the context root should be redirected by appending a / to the path.</span><br><span class="line">server.tomcat.remote-ip-header= # Name of the http header from which the remote ip is extracted. For instance `X-FORWARDED-FOR`</span><br><span class="line">server.tomcat.uri-encoding=UTF-8 # Character encoding to use to decode the URI.</span><br><span class="line">server.undertow.accesslog.dir= # Undertow access log directory.</span><br><span class="line">server.undertow.accesslog.enabled=false # Enable access log.</span><br><span class="line">server.undertow.accesslog.pattern=common # Format pattern for access logs.</span><br><span class="line">server.undertow.accesslog.prefix=access_log. # Log file name prefix.</span><br><span class="line">server.undertow.accesslog.rotate=true # Enable access log rotation.</span><br><span class="line">server.undertow.accesslog.suffix=log # Log file name suffix.</span><br><span class="line">server.undertow.buffer-size= # Size of each buffer in bytes.</span><br><span class="line">server.undertow.direct-buffers= # Allocate buffers outside the Java heap.</span><br><span class="line">server.undertow.io-threads= # Number of I/O threads to create for the worker.</span><br><span class="line">server.undertow.max-http-post-size=0 # Maximum size in bytes of the HTTP post content.</span><br><span class="line">server.undertow.worker-threads= # Number of worker threads.</span><br><span class="line"></span><br><span class="line"># FREEMARKER (FreeMarkerAutoConfiguration)</span><br><span class="line">spring.freemarker.allow-request-override=false # Set whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.</span><br><span class="line">spring.freemarker.allow-session-override=false # Set whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.</span><br><span class="line">spring.freemarker.cache=false # Enable template caching.</span><br><span class="line">spring.freemarker.charset=UTF-8 # Template encoding.</span><br><span class="line">spring.freemarker.check-template-location=true # Check that the templates location exists.</span><br><span class="line">spring.freemarker.content-type=text/html # Content-Type value.</span><br><span class="line">spring.freemarker.enabled=true # Enable MVC view resolution for this technology.</span><br><span class="line">spring.freemarker.expose-request-attributes=false # Set whether all request attributes should be added to the model prior to merging with the template.</span><br><span class="line">spring.freemarker.expose-session-attributes=false # Set whether all HttpSession attributes should be added to the model prior to merging with the template.</span><br><span class="line">spring.freemarker.expose-spring-macro-helpers=true # Set whether to expose a RequestContext for use by Spring&apos;s macro library, under the name &quot;springMacroRequestContext&quot;.</span><br><span class="line">spring.freemarker.prefer-file-system-access=true # Prefer file system access for template loading. File system access enables hot detection of template changes.</span><br><span class="line">spring.freemarker.prefix= # Prefix that gets prepended to view names when building a URL.</span><br><span class="line">spring.freemarker.request-context-attribute= # Name of the RequestContext attribute for all views.</span><br><span class="line">spring.freemarker.settings.*= # Well-known FreeMarker keys which will be passed to FreeMarker&apos;s Configuration.</span><br><span class="line">spring.freemarker.suffix=.ftl # Suffix that gets appended to view names when building a URL.</span><br><span class="line">spring.freemarker.template-loader-path=classpath:/templates/ # Comma-separated list of template paths.</span><br><span class="line">spring.freemarker.view-names= # White list of view names that can be resolved.</span><br><span class="line"></span><br><span class="line"># GROOVY TEMPLATES (GroovyTemplateAutoConfiguration)</span><br><span class="line">spring.groovy.template.allow-request-override=false # Set whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.</span><br><span class="line">spring.groovy.template.allow-session-override=false # Set whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.</span><br><span class="line">spring.groovy.template.cache= # Enable template caching.</span><br><span class="line">spring.groovy.template.charset=UTF-8 # Template encoding.</span><br><span class="line">spring.groovy.template.check-template-location=true # Check that the templates location exists.</span><br><span class="line">spring.groovy.template.configuration.*= # See GroovyMarkupConfigurer</span><br><span class="line">spring.groovy.template.content-type=test/html # Content-Type value.</span><br><span class="line">spring.groovy.template.enabled=true # Enable MVC view resolution for this technology.</span><br><span class="line">spring.groovy.template.expose-request-attributes=false # Set whether all request attributes should be added to the model prior to merging with the template.</span><br><span class="line">spring.groovy.template.expose-session-attributes=false # Set whether all HttpSession attributes should be added to the model prior to merging with the template.</span><br><span class="line">spring.groovy.template.expose-spring-macro-helpers=true # Set whether to expose a RequestContext for use by Spring&apos;s macro library, under the name &quot;springMacroRequestContext&quot;.</span><br><span class="line">spring.groovy.template.prefix= # Prefix that gets prepended to view names when building a URL.</span><br><span class="line">spring.groovy.template.request-context-attribute= # Name of the RequestContext attribute for all views.</span><br><span class="line">spring.groovy.template.resource-loader-path=classpath:/templates/ # Template path.</span><br><span class="line">spring.groovy.template.suffix=.tpl # Suffix that gets appended to view names when building a URL.</span><br><span class="line">spring.groovy.template.view-names= # White list of view names that can be resolved.</span><br><span class="line"></span><br><span class="line"># SPRING HATEOAS (HateoasProperties)</span><br><span class="line">spring.hateoas.use-hal-as-default-json-media-type=true # Specify if application/hal+json responses should be sent to requests that accept application/json.</span><br><span class="line"></span><br><span class="line"># HTTP message conversion</span><br><span class="line">spring.http.converters.preferred-json-mapper=jackson # Preferred JSON mapper to use for HTTP message conversion. Set to &quot;gson&quot; to force the use of Gson when both it and Jackson are on the classpath.</span><br><span class="line"></span><br><span class="line"># HTTP encoding (HttpEncodingProperties)</span><br><span class="line">spring.http.encoding.charset=UTF-8 # Charset of HTTP requests and responses. Added to the &quot;Content-Type&quot; header if not set explicitly.</span><br><span class="line">spring.http.encoding.enabled=true # Enable http encoding support.</span><br><span class="line">spring.http.encoding.force= # Force the encoding to the configured charset on HTTP requests and responses.</span><br><span class="line">spring.http.encoding.force-request= # Force the encoding to the configured charset on HTTP requests. Defaults to true when &quot;force&quot; has not been specified.</span><br><span class="line">spring.http.encoding.force-response= # Force the encoding to the configured charset on HTTP responses.</span><br><span class="line">spring.http.encoding.mapping= # Locale to Encoding mapping.</span><br><span class="line"></span><br><span class="line"># MULTIPART (MultipartProperties)</span><br><span class="line">spring.http.multipart.enabled=true # Enable support of multi-part uploads.</span><br><span class="line">spring.http.multipart.file-size-threshold=0 # Threshold after which files will be written to disk. Values can use the suffixed &quot;MB&quot; or &quot;KB&quot; to indicate a Megabyte or Kilobyte size.</span><br><span class="line">spring.http.multipart.location= # Intermediate location of uploaded files.</span><br><span class="line">spring.http.multipart.max-file-size=1MB # Max file size. Values can use the suffixed &quot;MB&quot; or &quot;KB&quot; to indicate a Megabyte or Kilobyte size.</span><br><span class="line">spring.http.multipart.max-request-size=10MB # Max request size. Values can use the suffixed &quot;MB&quot; or &quot;KB&quot; to indicate a Megabyte or Kilobyte size.</span><br><span class="line">spring.http.multipart.resolve-lazily=false # Whether to resolve the multipart request lazily at the time of file or parameter access.</span><br><span class="line"></span><br><span class="line"># JACKSON (JacksonProperties)</span><br><span class="line">spring.jackson.date-format= # Date format string or a fully-qualified date format class name. For instance `yyyy-MM-dd HH:mm:ss`.</span><br><span class="line">spring.jackson.default-property-inclusion= # Controls the inclusion of properties during serialization.</span><br><span class="line">spring.jackson.deserialization.*= # Jackson on/off features that affect the way Java objects are deserialized.</span><br><span class="line">spring.jackson.generator.*= # Jackson on/off features for generators.</span><br><span class="line">spring.jackson.joda-date-time-format= # Joda date time format string. If not configured, &quot;date-format&quot; will be used as a fallback if it is configured with a format string.</span><br><span class="line">spring.jackson.locale= # Locale used for formatting.</span><br><span class="line">spring.jackson.mapper.*= # Jackson general purpose on/off features.</span><br><span class="line">spring.jackson.parser.*= # Jackson on/off features for parsers.</span><br><span class="line">spring.jackson.property-naming-strategy= # One of the constants on Jackson&apos;s PropertyNamingStrategy. Can also be a fully-qualified class name of a PropertyNamingStrategy subclass.</span><br><span class="line">spring.jackson.serialization.*= # Jackson on/off features that affect the way Java objects are serialized.</span><br><span class="line">spring.jackson.time-zone= # Time zone used when formatting dates. For instance `America/Los_Angeles`</span><br><span class="line"></span><br><span class="line"># JERSEY (JerseyProperties)</span><br><span class="line">spring.jersey.application-path= # Path that serves as the base URI for the application. Overrides the value of &quot;@ApplicationPath&quot; if specified.</span><br><span class="line">spring.jersey.filter.order=0 # Jersey filter chain order.</span><br><span class="line">spring.jersey.init.*= # Init parameters to pass to Jersey via the servlet or filter.</span><br><span class="line">spring.jersey.servlet.load-on-startup=-1 # Load on startup priority of the Jersey servlet.</span><br><span class="line">spring.jersey.type=servlet # Jersey integration type.</span><br><span class="line"></span><br><span class="line"># SPRING LDAP (LdapProperties)</span><br><span class="line">spring.ldap.urls= # LDAP URLs of the server.</span><br><span class="line">spring.ldap.base= # Base suffix from which all operations should originate.</span><br><span class="line">spring.ldap.username= # Login user of the server.</span><br><span class="line">spring.ldap.password= # Login password of the server.</span><br><span class="line">spring.ldap.base-environment.*= # LDAP specification settings.</span><br><span class="line"></span><br><span class="line"># EMBEDDED LDAP (EmbeddedLdapProperties)</span><br><span class="line">spring.ldap.embedded.base-dn= # The base DN</span><br><span class="line">spring.ldap.embedded.credential.username= # Embedded LDAP username.</span><br><span class="line">spring.ldap.embedded.credential.password= # Embedded LDAP password.</span><br><span class="line">spring.ldap.embedded.ldif=classpath:schema.ldif # Schema (LDIF) script resource reference.</span><br><span class="line">spring.ldap.embedded.port= # Embedded LDAP port.</span><br><span class="line">spring.ldap.embedded.validation.enabled=true # Enable LDAP schema validation.</span><br><span class="line">spring.ldap.embedded.validation.schema= # Path to the custom schema.</span><br><span class="line"></span><br><span class="line"># SPRING MOBILE DEVICE VIEWS (DeviceDelegatingViewResolverAutoConfiguration)</span><br><span class="line">spring.mobile.devicedelegatingviewresolver.enable-fallback=false # Enable support for fallback resolution.</span><br><span class="line">spring.mobile.devicedelegatingviewresolver.enabled=false # Enable device view resolver.</span><br><span class="line">spring.mobile.devicedelegatingviewresolver.mobile-prefix=mobile/ # Prefix that gets prepended to view names for mobile devices.</span><br><span class="line">spring.mobile.devicedelegatingviewresolver.mobile-suffix= # Suffix that gets appended to view names for mobile devices.</span><br><span class="line">spring.mobile.devicedelegatingviewresolver.normal-prefix= # Prefix that gets prepended to view names for normal devices.</span><br><span class="line">spring.mobile.devicedelegatingviewresolver.normal-suffix= # Suffix that gets appended to view names for normal devices.</span><br><span class="line">spring.mobile.devicedelegatingviewresolver.tablet-prefix=tablet/ # Prefix that gets prepended to view names for tablet devices.</span><br><span class="line">spring.mobile.devicedelegatingviewresolver.tablet-suffix= # Suffix that gets appended to view names for tablet devices.</span><br><span class="line"></span><br><span class="line"># SPRING MOBILE SITE PREFERENCE (SitePreferenceAutoConfiguration)</span><br><span class="line">spring.mobile.sitepreference.enabled=true # Enable SitePreferenceHandler.</span><br><span class="line"></span><br><span class="line"># MUSTACHE TEMPLATES (MustacheAutoConfiguration)</span><br><span class="line">spring.mustache.allow-request-override= # Set whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.</span><br><span class="line">spring.mustache.allow-session-override= # Set whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.</span><br><span class="line">spring.mustache.cache= # Enable template caching.</span><br><span class="line">spring.mustache.charset= # Template encoding.</span><br><span class="line">spring.mustache.check-template-location= # Check that the templates location exists.</span><br><span class="line">spring.mustache.content-type= # Content-Type value.</span><br><span class="line">spring.mustache.enabled= # Enable MVC view resolution for this technology.</span><br><span class="line">spring.mustache.expose-request-attributes= # Set whether all request attributes should be added to the model prior to merging with the template.</span><br><span class="line">spring.mustache.expose-session-attributes= # Set whether all HttpSession attributes should be added to the model prior to merging with the template.</span><br><span class="line">spring.mustache.expose-spring-macro-helpers= # Set whether to expose a RequestContext for use by Spring&apos;s macro library, under the name &quot;springMacroRequestContext&quot;.</span><br><span class="line">spring.mustache.prefix=classpath:/templates/ # Prefix to apply to template names.</span><br><span class="line">spring.mustache.request-context-attribute= # Name of the RequestContext attribute for all views.</span><br><span class="line">spring.mustache.suffix=.html # Suffix to apply to template names.</span><br><span class="line">spring.mustache.view-names= # White list of view names that can be resolved.</span><br><span class="line"></span><br><span class="line"># SPRING MVC (WebMvcProperties)</span><br><span class="line">spring.mvc.async.request-timeout= # Amount of time (in milliseconds) before asynchronous request handling times out.</span><br><span class="line">spring.mvc.date-format= # Date format to use. For instance `dd/MM/yyyy`.</span><br><span class="line">spring.mvc.dispatch-trace-request=false # Dispatch TRACE requests to the FrameworkServlet doService method.</span><br><span class="line">spring.mvc.dispatch-options-request=true # Dispatch OPTIONS requests to the FrameworkServlet doService method.</span><br><span class="line">spring.mvc.favicon.enabled=true # Enable resolution of favicon.ico.</span><br><span class="line">spring.mvc.formcontent.putfilter.enabled=true # Enable Spring&apos;s HttpPutFormContentFilter.</span><br><span class="line">spring.mvc.ignore-default-model-on-redirect=true # If the content of the &quot;default&quot; model should be ignored during redirect scenarios.</span><br><span class="line">spring.mvc.locale= # Locale to use. By default, this locale is overridden by the &quot;Accept-Language&quot; header.</span><br><span class="line">spring.mvc.locale-resolver=accept-header # Define how the locale should be resolved.</span><br><span class="line">spring.mvc.log-resolved-exception=false # Enable warn logging of exceptions resolved by a &quot;HandlerExceptionResolver&quot;.</span><br><span class="line">spring.mvc.media-types.*= # Maps file extensions to media types for content negotiation.</span><br><span class="line">spring.mvc.message-codes-resolver-format= # Formatting strategy for message codes. For instance `PREFIX_ERROR_CODE`.</span><br><span class="line">spring.mvc.servlet.load-on-startup=-1 # Load on startup priority of the Spring Web Services servlet.</span><br><span class="line">spring.mvc.static-path-pattern=/** # Path pattern used for static resources.</span><br><span class="line">spring.mvc.throw-exception-if-no-handler-found=false # If a &quot;NoHandlerFoundException&quot; should be thrown if no Handler was found to process a request.</span><br><span class="line">spring.mvc.view.prefix= # Spring MVC view prefix.</span><br><span class="line">spring.mvc.view.suffix= # Spring MVC view suffix.</span><br><span class="line"></span><br><span class="line"># SPRING RESOURCES HANDLING (ResourceProperties)</span><br><span class="line">spring.resources.add-mappings=true # Enable default resource handling.</span><br><span class="line">spring.resources.cache-period= # Cache period for the resources served by the resource handler, in seconds.</span><br><span class="line">spring.resources.chain.cache=true # Enable caching in the Resource chain.</span><br><span class="line">spring.resources.chain.enabled= # Enable the Spring Resource Handling chain. Disabled by default unless at least one strategy has been enabled.</span><br><span class="line">spring.resources.chain.gzipped=false # Enable resolution of already gzipped resources.</span><br><span class="line">spring.resources.chain.html-application-cache=false # Enable HTML5 application cache manifest rewriting.</span><br><span class="line">spring.resources.chain.strategy.content.enabled=false # Enable the content Version Strategy.</span><br><span class="line">spring.resources.chain.strategy.content.paths=/** # Comma-separated list of patterns to apply to the Version Strategy.</span><br><span class="line">spring.resources.chain.strategy.fixed.enabled=false # Enable the fixed Version Strategy.</span><br><span class="line">spring.resources.chain.strategy.fixed.paths=/** # Comma-separated list of patterns to apply to the Version Strategy.</span><br><span class="line">spring.resources.chain.strategy.fixed.version= # Version string to use for the Version Strategy.</span><br><span class="line">spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/ # Locations of static resources.</span><br><span class="line"></span><br><span class="line"># SPRING SESSION (SessionProperties)</span><br><span class="line">spring.session.hazelcast.flush-mode=on-save # Sessions flush mode.</span><br><span class="line">spring.session.hazelcast.map-name=spring:session:sessions # Name of the map used to store sessions.</span><br><span class="line">spring.session.jdbc.initializer.enabled= # Create the required session tables on startup if necessary. Enabled automatically if the default table name is set or a custom schema is configured.</span><br><span class="line">spring.session.jdbc.schema=classpath:org/springframework/session/jdbc/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.</span><br><span class="line">spring.session.jdbc.table-name=SPRING_SESSION # Name of database table used to store sessions.</span><br><span class="line">spring.session.mongo.collection-name=sessions # Collection name used to store sessions.</span><br><span class="line">spring.session.redis.flush-mode=on-save # Sessions flush mode.</span><br><span class="line">spring.session.redis.namespace= # Namespace for keys used to store sessions.</span><br><span class="line">spring.session.store-type= # Session store type.</span><br><span class="line"></span><br><span class="line"># SPRING SOCIAL (SocialWebAutoConfiguration)</span><br><span class="line">spring.social.auto-connection-views=false # Enable the connection status view for supported providers.</span><br><span class="line"></span><br><span class="line"># SPRING SOCIAL FACEBOOK (FacebookAutoConfiguration)</span><br><span class="line">spring.social.facebook.app-id= # your application&apos;s Facebook App ID</span><br><span class="line">spring.social.facebook.app-secret= # your application&apos;s Facebook App Secret</span><br><span class="line"></span><br><span class="line"># SPRING SOCIAL LINKEDIN (LinkedInAutoConfiguration)</span><br><span class="line">spring.social.linkedin.app-id= # your application&apos;s LinkedIn App ID</span><br><span class="line">spring.social.linkedin.app-secret= # your application&apos;s LinkedIn App Secret</span><br><span class="line"></span><br><span class="line"># SPRING SOCIAL TWITTER (TwitterAutoConfiguration)</span><br><span class="line">spring.social.twitter.app-id= # your application&apos;s Twitter App ID</span><br><span class="line">spring.social.twitter.app-secret= # your application&apos;s Twitter App Secret</span><br><span class="line"></span><br><span class="line"># THYMELEAF (ThymeleafAutoConfiguration)</span><br><span class="line">spring.thymeleaf.cache=true # Enable template caching.</span><br><span class="line">spring.thymeleaf.check-template=true # Check that the template exists before rendering it.</span><br><span class="line">spring.thymeleaf.check-template-location=true # Check that the templates location exists.</span><br><span class="line">spring.thymeleaf.content-type=text/html # Content-Type value.</span><br><span class="line">spring.thymeleaf.enabled=true # Enable MVC Thymeleaf view resolution.</span><br><span class="line">spring.thymeleaf.encoding=UTF-8 # Template encoding.</span><br><span class="line">spring.thymeleaf.excluded-view-names= # Comma-separated list of view names that should be excluded from resolution.</span><br><span class="line">spring.thymeleaf.mode=HTML5 # Template mode to be applied to templates. See also StandardTemplateModeHandlers.</span><br><span class="line">spring.thymeleaf.prefix=classpath:/templates/ # Prefix that gets prepended to view names when building a URL.</span><br><span class="line">spring.thymeleaf.suffix=.html # Suffix that gets appended to view names when building a URL.</span><br><span class="line">spring.thymeleaf.template-resolver-order= # Order of the template resolver in the chain.</span><br><span class="line">spring.thymeleaf.view-names= # Comma-separated list of view names that can be resolved.</span><br><span class="line"></span><br><span class="line"># SPRING WEB SERVICES (WebServicesProperties)</span><br><span class="line">spring.webservices.path=/services # Path that serves as the base URI for the services.</span><br><span class="line">spring.webservices.servlet.init= # Servlet init parameters to pass to Spring Web Services.</span><br><span class="line">spring.webservices.servlet.load-on-startup=-1 # Load on startup priority of the Spring Web Services servlet.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----------------------------------------</span><br><span class="line"># SECURITY PROPERTIES</span><br><span class="line"># ----------------------------------------</span><br><span class="line"># SECURITY (SecurityProperties)</span><br><span class="line">security.basic.authorize-mode=role # Security authorize mode to apply.</span><br><span class="line">security.basic.enabled=true # Enable basic authentication.</span><br><span class="line">security.basic.path=/** # Comma-separated list of paths to secure.</span><br><span class="line">security.basic.realm=Spring # HTTP basic realm name.</span><br><span class="line">security.enable-csrf=false # Enable Cross Site Request Forgery support.</span><br><span class="line">security.filter-order=0 # Security filter chain order.</span><br><span class="line">security.filter-dispatcher-types=ASYNC, FORWARD, INCLUDE, REQUEST # Security filter chain dispatcher types.</span><br><span class="line">security.headers.cache=true # Enable cache control HTTP headers.</span><br><span class="line">security.headers.content-security-policy= # Value for content security policy header.</span><br><span class="line">security.headers.content-security-policy-mode=default # Content security policy mode.</span><br><span class="line">security.headers.content-type=true # Enable &quot;X-Content-Type-Options&quot; header.</span><br><span class="line">security.headers.frame=true # Enable &quot;X-Frame-Options&quot; header.</span><br><span class="line">security.headers.hsts=all # HTTP Strict Transport Security (HSTS) mode (none, domain, all).</span><br><span class="line">security.headers.xss=true # Enable cross site scripting (XSS) protection.</span><br><span class="line">security.ignored= # Comma-separated list of paths to exclude from the default secured paths.</span><br><span class="line">security.require-ssl=false # Enable secure channel for all requests.</span><br><span class="line">security.sessions=stateless # Session creation policy (always, never, if_required, stateless).</span><br><span class="line">security.user.name=user # Default user name.</span><br><span class="line">security.user.password= # Password for the default user name. A random password is logged on startup by default.</span><br><span class="line">security.user.role=USER # Granted roles for the default user name.</span><br><span class="line"></span><br><span class="line"># SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)</span><br><span class="line">security.oauth2.client.client-id= # OAuth2 client id.</span><br><span class="line">security.oauth2.client.client-secret= # OAuth2 client secret. A random secret is generated by default</span><br><span class="line"></span><br><span class="line"># SECURITY OAUTH2 RESOURCES (ResourceServerProperties)</span><br><span class="line">security.oauth2.resource.filter-order= # The order of the filter chain used to authenticate tokens.</span><br><span class="line">security.oauth2.resource.id= # Identifier of the resource.</span><br><span class="line">security.oauth2.resource.jwt.key-uri= # The URI of the JWT token. Can be set if the value is not available and the key is public.</span><br><span class="line">security.oauth2.resource.jwt.key-value= # The verification key of the JWT token. Can either be a symmetric secret or PEM-encoded RSA public key.</span><br><span class="line">security.oauth2.resource.jwk.key-set-uri= # The URI for getting the set of keys that can be used to validate the token.</span><br><span class="line">security.oauth2.resource.prefer-token-info=true # Use the token info, can be set to false to use the user info.</span><br><span class="line">security.oauth2.resource.service-id=resource #</span><br><span class="line">security.oauth2.resource.token-info-uri= # URI of the token decoding endpoint.</span><br><span class="line">security.oauth2.resource.token-type= # The token type to send when using the userInfoUri.</span><br><span class="line">security.oauth2.resource.user-info-uri= # URI of the user endpoint.</span><br><span class="line"></span><br><span class="line"># SECURITY OAUTH2 SSO (OAuth2SsoProperties)</span><br><span class="line">security.oauth2.sso.filter-order= # Filter order to apply if not providing an explicit WebSecurityConfigurerAdapter</span><br><span class="line">security.oauth2.sso.login-path=/login # Path to the login page, i.e. the one that triggers the redirect to the OAuth2 Authorization Server</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----------------------------------------</span><br><span class="line"># DATA PROPERTIES</span><br><span class="line"># ----------------------------------------</span><br><span class="line"></span><br><span class="line"># FLYWAY (FlywayProperties)</span><br><span class="line">flyway.baseline-description= #</span><br><span class="line">flyway.baseline-version=1 # version to start migration</span><br><span class="line">flyway.baseline-on-migrate= #</span><br><span class="line">flyway.check-location=false # Check that migration scripts location exists.</span><br><span class="line">flyway.clean-on-validation-error= #</span><br><span class="line">flyway.enabled=true # Enable flyway.</span><br><span class="line">flyway.encoding= #</span><br><span class="line">flyway.ignore-failed-future-migration= #</span><br><span class="line">flyway.init-sqls= # SQL statements to execute to initialize a connection immediately after obtaining it.</span><br><span class="line">flyway.locations=classpath:db/migration # locations of migrations scripts</span><br><span class="line">flyway.out-of-order= #</span><br><span class="line">flyway.password= # JDBC password if you want Flyway to create its own DataSource</span><br><span class="line">flyway.placeholder-prefix= #</span><br><span class="line">flyway.placeholder-replacement= #</span><br><span class="line">flyway.placeholder-suffix= #</span><br><span class="line">flyway.placeholders.*= #</span><br><span class="line">flyway.schemas= # schemas to update</span><br><span class="line">flyway.sql-migration-prefix=V #</span><br><span class="line">flyway.sql-migration-separator= #</span><br><span class="line">flyway.sql-migration-suffix=.sql #</span><br><span class="line">flyway.table= #</span><br><span class="line">flyway.url= # JDBC url of the database to migrate. If not set, the primary configured data source is used.</span><br><span class="line">flyway.user= # Login user of the database to migrate.</span><br><span class="line">flyway.validate-on-migrate= #</span><br><span class="line"></span><br><span class="line"># LIQUIBASE (LiquibaseProperties)</span><br><span class="line">liquibase.change-log=classpath:/db/changelog/db.changelog-master.yaml # Change log configuration path.</span><br><span class="line">liquibase.check-change-log-location=true # Check the change log location exists.</span><br><span class="line">liquibase.contexts= # Comma-separated list of runtime contexts to use.</span><br><span class="line">liquibase.default-schema= # Default database schema.</span><br><span class="line">liquibase.drop-first=false # Drop the database schema first.</span><br><span class="line">liquibase.enabled=true # Enable liquibase support.</span><br><span class="line">liquibase.labels= # Comma-separated list of runtime labels to use.</span><br><span class="line">liquibase.parameters.*= # Change log parameters.</span><br><span class="line">liquibase.password= # Login password of the database to migrate.</span><br><span class="line">liquibase.rollback-file= # File to which rollback SQL will be written when an update is performed.</span><br><span class="line">liquibase.url= # JDBC url of the database to migrate. If not set, the primary configured data source is used.</span><br><span class="line">liquibase.user= # Login user of the database to migrate.</span><br><span class="line"></span><br><span class="line"># COUCHBASE (CouchbaseProperties)</span><br><span class="line">spring.couchbase.bootstrap-hosts= # Couchbase nodes (host or IP address) to bootstrap from.</span><br><span class="line">spring.couchbase.bucket.name=default # Name of the bucket to connect to.</span><br><span class="line">spring.couchbase.bucket.password=  # Password of the bucket.</span><br><span class="line">spring.couchbase.env.endpoints.key-value=1 # Number of sockets per node against the Key/value service.</span><br><span class="line">spring.couchbase.env.endpoints.query=1 # Number of sockets per node against the Query (N1QL) service.</span><br><span class="line">spring.couchbase.env.endpoints.view=1 # Number of sockets per node against the view service.</span><br><span class="line">spring.couchbase.env.ssl.enabled= # Enable SSL support. Enabled automatically if a &quot;keyStore&quot; is provided unless specified otherwise.</span><br><span class="line">spring.couchbase.env.ssl.key-store= # Path to the JVM key store that holds the certificates.</span><br><span class="line">spring.couchbase.env.ssl.key-store-password= # Password used to access the key store.</span><br><span class="line">spring.couchbase.env.timeouts.connect=5000 # Bucket connections timeout in milliseconds.</span><br><span class="line">spring.couchbase.env.timeouts.key-value=2500 # Blocking operations performed on a specific key timeout in milliseconds.</span><br><span class="line">spring.couchbase.env.timeouts.query=7500 # N1QL query operations timeout in milliseconds.</span><br><span class="line">spring.couchbase.env.timeouts.socket-connect=1000 # Socket connect connections timeout in milliseconds.</span><br><span class="line">spring.couchbase.env.timeouts.view=7500 # Regular and geospatial view operations timeout in milliseconds.</span><br><span class="line"></span><br><span class="line"># DAO (PersistenceExceptionTranslationAutoConfiguration)</span><br><span class="line">spring.dao.exceptiontranslation.enabled=true # Enable the PersistenceExceptionTranslationPostProcessor.</span><br><span class="line"></span><br><span class="line"># CASSANDRA (CassandraProperties)</span><br><span class="line">spring.data.cassandra.cluster-name= # Name of the Cassandra cluster.</span><br><span class="line">spring.data.cassandra.compression=none # Compression supported by the Cassandra binary protocol.</span><br><span class="line">spring.data.cassandra.connect-timeout-millis= # Socket option: connection time out.</span><br><span class="line">spring.data.cassandra.consistency-level= # Queries consistency level.</span><br><span class="line">spring.data.cassandra.contact-points=localhost # Comma-separated list of cluster node addresses.</span><br><span class="line">spring.data.cassandra.fetch-size= # Queries default fetch size.</span><br><span class="line">spring.data.cassandra.keyspace-name= # Keyspace name to use.</span><br><span class="line">spring.data.cassandra.load-balancing-policy= # Class name of the load balancing policy.</span><br><span class="line">spring.data.cassandra.port= # Port of the Cassandra server.</span><br><span class="line">spring.data.cassandra.password= # Login password of the server.</span><br><span class="line">spring.data.cassandra.read-timeout-millis= # Socket option: read time out.</span><br><span class="line">spring.data.cassandra.reconnection-policy= # Reconnection policy class.</span><br><span class="line">spring.data.cassandra.repositories.enabled= # Enable Cassandra repositories.</span><br><span class="line">spring.data.cassandra.retry-policy= # Class name of the retry policy.</span><br><span class="line">spring.data.cassandra.serial-consistency-level= # Queries serial consistency level.</span><br><span class="line">spring.data.cassandra.schema-action=none # Schema action to take at startup.</span><br><span class="line">spring.data.cassandra.ssl=false # Enable SSL support.</span><br><span class="line">spring.data.cassandra.username= # Login user of the server.</span><br><span class="line"></span><br><span class="line"># DATA COUCHBASE (CouchbaseDataProperties)</span><br><span class="line">spring.data.couchbase.auto-index=false # Automatically create views and indexes.</span><br><span class="line">spring.data.couchbase.consistency=read-your-own-writes # Consistency to apply by default on generated queries.</span><br><span class="line">spring.data.couchbase.repositories.enabled=true # Enable Couchbase repositories.</span><br><span class="line"></span><br><span class="line"># ELASTICSEARCH (ElasticsearchProperties)</span><br><span class="line">spring.data.elasticsearch.cluster-name=elasticsearch # Elasticsearch cluster name.</span><br><span class="line">spring.data.elasticsearch.cluster-nodes= # Comma-separated list of cluster node addresses. If not specified, starts a client node.</span><br><span class="line">spring.data.elasticsearch.properties.*= # Additional properties used to configure the client.</span><br><span class="line">spring.data.elasticsearch.repositories.enabled=true # Enable Elasticsearch repositories.</span><br><span class="line"></span><br><span class="line"># DATA LDAP</span><br><span class="line">spring.data.ldap.repositories.enabled=true # Enable LDAP repositories.</span><br><span class="line"></span><br><span class="line"># MONGODB (MongoProperties)</span><br><span class="line">spring.data.mongodb.authentication-database= # Authentication database name.</span><br><span class="line">spring.data.mongodb.database=test # Database name.</span><br><span class="line">spring.data.mongodb.field-naming-strategy= # Fully qualified name of the FieldNamingStrategy to use.</span><br><span class="line">spring.data.mongodb.grid-fs-database= # GridFS database name.</span><br><span class="line">spring.data.mongodb.host=localhost # Mongo server host. Cannot be set with uri.</span><br><span class="line">spring.data.mongodb.password= # Login password of the mongo server. Cannot be set with uri.</span><br><span class="line">spring.data.mongodb.port=27017 # Mongo server port. Cannot be set with uri.</span><br><span class="line">spring.data.mongodb.repositories.enabled=true # Enable Mongo repositories.</span><br><span class="line">spring.data.mongodb.uri=mongodb://localhost/test # Mongo database URI. Cannot be set with host, port and credentials.</span><br><span class="line">spring.data.mongodb.username= # Login user of the mongo server. Cannot be set with uri.</span><br><span class="line"></span><br><span class="line"># DATA REDIS</span><br><span class="line">spring.data.redis.repositories.enabled=true # Enable Redis repositories.</span><br><span class="line"></span><br><span class="line"># NEO4J (Neo4jProperties)</span><br><span class="line">spring.data.neo4j.compiler= # Compiler to use.</span><br><span class="line">spring.data.neo4j.embedded.enabled=true # Enable embedded mode if the embedded driver is available.</span><br><span class="line">spring.data.neo4j.open-in-view=true # Register OpenSessionInViewInterceptor. Binds a Neo4j Session to the thread for the entire processing of the request.</span><br><span class="line">spring.data.neo4j.password= # Login password of the server.</span><br><span class="line">spring.data.neo4j.repositories.enabled=true # Enable Neo4j repositories.</span><br><span class="line">spring.data.neo4j.uri= # URI used by the driver. Auto-detected by default.</span><br><span class="line">spring.data.neo4j.username= # Login user of the server.</span><br><span class="line"></span><br><span class="line"># DATA REST (RepositoryRestProperties)</span><br><span class="line">spring.data.rest.base-path= # Base path to be used by Spring Data REST to expose repository resources.</span><br><span class="line">spring.data.rest.default-page-size= # Default size of pages.</span><br><span class="line">spring.data.rest.detection-strategy=default # Strategy to use to determine which repositories get exposed.</span><br><span class="line">spring.data.rest.enable-enum-translation= # Enable enum value translation via the Spring Data REST default resource bundle.</span><br><span class="line">spring.data.rest.limit-param-name= # Name of the URL query string parameter that indicates how many results to return at once.</span><br><span class="line">spring.data.rest.max-page-size= # Maximum size of pages.</span><br><span class="line">spring.data.rest.page-param-name= # Name of the URL query string parameter that indicates what page to return.</span><br><span class="line">spring.data.rest.return-body-on-create= # Return a response body after creating an entity.</span><br><span class="line">spring.data.rest.return-body-on-update= # Return a response body after updating an entity.</span><br><span class="line">spring.data.rest.sort-param-name= # Name of the URL query string parameter that indicates what direction to sort results.</span><br><span class="line"></span><br><span class="line"># SOLR (SolrProperties)</span><br><span class="line">spring.data.solr.host=http://127.0.0.1:8983/solr # Solr host. Ignored if &quot;zk-host&quot; is set.</span><br><span class="line">spring.data.solr.repositories.enabled=true # Enable Solr repositories.</span><br><span class="line">spring.data.solr.zk-host= # ZooKeeper host address in the form HOST:PORT.</span><br><span class="line"></span><br><span class="line"># DATASOURCE (DataSourceAutoConfiguration &amp; DataSourceProperties)</span><br><span class="line">spring.datasource.continue-on-error=false # Do not stop if an error occurs while initializing the database.</span><br><span class="line">spring.datasource.data= # Data (DML) script resource references.</span><br><span class="line">spring.datasource.data-username= # User of the database to execute DML scripts (if different).</span><br><span class="line">spring.datasource.data-password= # Password of the database to execute DML scripts (if different).</span><br><span class="line">spring.datasource.dbcp2.*= # Commons DBCP2 specific settings</span><br><span class="line">spring.datasource.driver-class-name= # Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.</span><br><span class="line">spring.datasource.generate-unique-name=false # Generate a random datasource name.</span><br><span class="line">spring.datasource.hikari.*= # Hikari specific settings</span><br><span class="line">spring.datasource.initialize=true # Populate the database using &apos;data.sql&apos;.</span><br><span class="line">spring.datasource.jmx-enabled=false # Enable JMX support (if provided by the underlying pool).</span><br><span class="line">spring.datasource.jndi-name= # JNDI location of the datasource. Class, url, username &amp; password are ignored when set.</span><br><span class="line">spring.datasource.name=testdb # Name of the datasource.</span><br><span class="line">spring.datasource.password= # Login password of the database.</span><br><span class="line">spring.datasource.platform=all # Platform to use in the DDL or DML scripts (e.g. schema-$&#123;platform&#125;.sql or data-$&#123;platform&#125;.sql).</span><br><span class="line">spring.datasource.schema= # Schema (DDL) script resource references.</span><br><span class="line">spring.datasource.schema-username= # User of the database to execute DDL scripts (if different).</span><br><span class="line">spring.datasource.schema-password= # Password of the database to execute DDL scripts (if different).</span><br><span class="line">spring.datasource.separator=; # Statement separator in SQL initialization scripts.</span><br><span class="line">spring.datasource.sql-script-encoding= # SQL scripts encoding.</span><br><span class="line">spring.datasource.tomcat.*= # Tomcat datasource specific settings</span><br><span class="line">spring.datasource.type= # Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.</span><br><span class="line">spring.datasource.url= # JDBC url of the database.</span><br><span class="line">spring.datasource.username= # Login user of the database.</span><br><span class="line">spring.datasource.xa.data-source-class-name= # XA datasource fully qualified name.</span><br><span class="line">spring.datasource.xa.properties= # Properties to pass to the XA data source.</span><br><span class="line"></span><br><span class="line"># JEST (Elasticsearch HTTP client) (JestProperties)</span><br><span class="line">spring.elasticsearch.jest.connection-timeout=3000 # Connection timeout in milliseconds.</span><br><span class="line">spring.elasticsearch.jest.multi-threaded=true # Enable connection requests from multiple execution threads.</span><br><span class="line">spring.elasticsearch.jest.password= # Login password.</span><br><span class="line">spring.elasticsearch.jest.proxy.host= # Proxy host the HTTP client should use.</span><br><span class="line">spring.elasticsearch.jest.proxy.port= # Proxy port the HTTP client should use.</span><br><span class="line">spring.elasticsearch.jest.read-timeout=3000 # Read timeout in milliseconds.</span><br><span class="line">spring.elasticsearch.jest.uris=http://localhost:9200 # Comma-separated list of the Elasticsearch instances to use.</span><br><span class="line">spring.elasticsearch.jest.username= # Login user.</span><br><span class="line"></span><br><span class="line"># H2 Web Console (H2ConsoleProperties)</span><br><span class="line">spring.h2.console.enabled=false # Enable the console.</span><br><span class="line">spring.h2.console.path=/h2-console # Path at which the console will be available.</span><br><span class="line">spring.h2.console.settings.trace=false # Enable trace output.</span><br><span class="line">spring.h2.console.settings.web-allow-others=false # Enable remote access.</span><br><span class="line"></span><br><span class="line"># JOOQ (JooqAutoConfiguration)</span><br><span class="line">spring.jooq.sql-dialect= # SQLDialect JOOQ used when communicating with the configured datasource. For instance `POSTGRES`</span><br><span class="line"></span><br><span class="line"># JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)</span><br><span class="line">spring.data.jpa.repositories.enabled=true # Enable JPA repositories.</span><br><span class="line">spring.jpa.database= # Target database to operate on, auto-detected by default. Can be alternatively set using the &quot;databasePlatform&quot; property.</span><br><span class="line">spring.jpa.database-platform= # Name of the target database to operate on, auto-detected by default. Can be alternatively set using the &quot;Database&quot; enum.</span><br><span class="line">spring.jpa.generate-ddl=false # Initialize the schema on startup.</span><br><span class="line">spring.jpa.hibernate.ddl-auto= # DDL mode. This is actually a shortcut for the &quot;hibernate.hbm2ddl.auto&quot; property. Default to &quot;create-drop&quot; when using an embedded database, &quot;none&quot; otherwise.</span><br><span class="line">spring.jpa.hibernate.naming.implicit-strategy= # Hibernate 5 implicit naming strategy fully qualified name.</span><br><span class="line">spring.jpa.hibernate.naming.physical-strategy= # Hibernate 5 physical naming strategy fully qualified name.</span><br><span class="line">spring.jpa.hibernate.naming.strategy= # Hibernate 4 naming strategy fully qualified name. Not supported with Hibernate 5.</span><br><span class="line">spring.jpa.hibernate.use-new-id-generator-mappings= # Use Hibernate&apos;s newer IdentifierGenerator for AUTO, TABLE and SEQUENCE.</span><br><span class="line">spring.jpa.open-in-view=true # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.</span><br><span class="line">spring.jpa.properties.*= # Additional native properties to set on the JPA provider.</span><br><span class="line">spring.jpa.show-sql=false # Enable logging of SQL statements.</span><br><span class="line"></span><br><span class="line"># JTA (JtaAutoConfiguration)</span><br><span class="line">spring.jta.enabled=true # Enable JTA support.</span><br><span class="line">spring.jta.log-dir= # Transaction logs directory.</span><br><span class="line">spring.jta.transaction-manager-id= # Transaction manager unique identifier.</span><br><span class="line"></span><br><span class="line"># ATOMIKOS (AtomikosProperties)</span><br><span class="line">spring.jta.atomikos.connectionfactory.borrow-connection-timeout=30 # Timeout, in seconds, for borrowing connections from the pool.</span><br><span class="line">spring.jta.atomikos.connectionfactory.ignore-session-transacted-flag=true # Whether or not to ignore the transacted flag when creating session.</span><br><span class="line">spring.jta.atomikos.connectionfactory.local-transaction-mode=false # Whether or not local transactions are desired.</span><br><span class="line">spring.jta.atomikos.connectionfactory.maintenance-interval=60 # The time, in seconds, between runs of the pool&apos;s maintenance thread.</span><br><span class="line">spring.jta.atomikos.connectionfactory.max-idle-time=60 # The time, in seconds, after which connections are cleaned up from the pool.</span><br><span class="line">spring.jta.atomikos.connectionfactory.max-lifetime=0 # The time, in seconds, that a connection can be pooled for before being destroyed. 0 denotes no limit.</span><br><span class="line">spring.jta.atomikos.connectionfactory.max-pool-size=1 # The maximum size of the pool.</span><br><span class="line">spring.jta.atomikos.connectionfactory.min-pool-size=1 # The minimum size of the pool.</span><br><span class="line">spring.jta.atomikos.connectionfactory.reap-timeout=0 # The reap timeout, in seconds, for borrowed connections. 0 denotes no limit.</span><br><span class="line">spring.jta.atomikos.connectionfactory.unique-resource-name=jmsConnectionFactory # The unique name used to identify the resource during recovery.</span><br><span class="line">spring.jta.atomikos.datasource.borrow-connection-timeout=30 # Timeout, in seconds, for borrowing connections from the pool.</span><br><span class="line">spring.jta.atomikos.datasource.default-isolation-level= # Default isolation level of connections provided by the pool.</span><br><span class="line">spring.jta.atomikos.datasource.login-timeout= # Timeout, in seconds, for establishing a database connection.</span><br><span class="line">spring.jta.atomikos.datasource.maintenance-interval=60 # The time, in seconds, between runs of the pool&apos;s maintenance thread.</span><br><span class="line">spring.jta.atomikos.datasource.max-idle-time=60 # The time, in seconds, after which connections are cleaned up from the pool.</span><br><span class="line">spring.jta.atomikos.datasource.max-lifetime=0 # The time, in seconds, that a connection can be pooled for before being destroyed. 0 denotes no limit.</span><br><span class="line">spring.jta.atomikos.datasource.max-pool-size=1 # The maximum size of the pool.</span><br><span class="line">spring.jta.atomikos.datasource.min-pool-size=1 # The minimum size of the pool.</span><br><span class="line">spring.jta.atomikos.datasource.reap-timeout=0 # The reap timeout, in seconds, for borrowed connections. 0 denotes no limit.</span><br><span class="line">spring.jta.atomikos.datasource.test-query= # SQL query or statement used to validate a connection before returning it.</span><br><span class="line">spring.jta.atomikos.datasource.unique-resource-name=dataSource # The unique name used to identify the resource during recovery.</span><br><span class="line">spring.jta.atomikos.properties.checkpoint-interval=500 # Interval between checkpoints.</span><br><span class="line">spring.jta.atomikos.properties.default-jta-timeout=10000 # Default timeout for JTA transactions.</span><br><span class="line">spring.jta.atomikos.properties.enable-logging=true # Enable disk logging.</span><br><span class="line">spring.jta.atomikos.properties.force-shutdown-on-vm-exit=false # Specify if a VM shutdown should trigger forced shutdown of the transaction core.</span><br><span class="line">spring.jta.atomikos.properties.log-base-dir= # Directory in which the log files should be stored.</span><br><span class="line">spring.jta.atomikos.properties.log-base-name=tmlog # Transactions log file base name.</span><br><span class="line">spring.jta.atomikos.properties.max-actives=50 # Maximum number of active transactions.</span><br><span class="line">spring.jta.atomikos.properties.max-timeout=300000 # Maximum timeout (in milliseconds) that can be allowed for transactions.</span><br><span class="line">spring.jta.atomikos.properties.serial-jta-transactions=true # Specify if sub-transactions should be joined when possible.</span><br><span class="line">spring.jta.atomikos.properties.service= # Transaction manager implementation that should be started.</span><br><span class="line">spring.jta.atomikos.properties.threaded-two-phase-commit=false # Use different (and concurrent) threads for two-phase commit on the participating resources.</span><br><span class="line">spring.jta.atomikos.properties.transaction-manager-unique-name= # Transaction manager&apos;s unique name.</span><br><span class="line"></span><br><span class="line"># BITRONIX</span><br><span class="line">spring.jta.bitronix.connectionfactory.acquire-increment=1 # Number of connections to create when growing the pool.</span><br><span class="line">spring.jta.bitronix.connectionfactory.acquisition-interval=1 # Time, in seconds, to wait before trying to acquire a connection again after an invalid connection was acquired.</span><br><span class="line">spring.jta.bitronix.connectionfactory.acquisition-timeout=30 # Timeout, in seconds, for acquiring connections from the pool.</span><br><span class="line">spring.jta.bitronix.connectionfactory.allow-local-transactions=true # Whether or not the transaction manager should allow mixing XA and non-XA transactions.</span><br><span class="line">spring.jta.bitronix.connectionfactory.apply-transaction-timeout=false # Whether or not the transaction timeout should be set on the XAResource when it is enlisted.</span><br><span class="line">spring.jta.bitronix.connectionfactory.automatic-enlisting-enabled=true # Whether or not resources should be enlisted and delisted automatically.</span><br><span class="line">spring.jta.bitronix.connectionfactory.cache-producers-consumers=true # Whether or not produces and consumers should be cached.</span><br><span class="line">spring.jta.bitronix.connectionfactory.defer-connection-release=true # Whether or not the provider can run many transactions on the same connection and supports transaction interleaving.</span><br><span class="line">spring.jta.bitronix.connectionfactory.ignore-recovery-failures=false # Whether or not recovery failures should be ignored.</span><br><span class="line">spring.jta.bitronix.connectionfactory.max-idle-time=60 # The time, in seconds, after which connections are cleaned up from the pool.</span><br><span class="line">spring.jta.bitronix.connectionfactory.max-pool-size=10 # The maximum size of the pool. 0 denotes no limit.</span><br><span class="line">spring.jta.bitronix.connectionfactory.min-pool-size=0 # The minimum size of the pool.</span><br><span class="line">spring.jta.bitronix.connectionfactory.password= # The password to use to connect to the JMS provider.</span><br><span class="line">spring.jta.bitronix.connectionfactory.share-transaction-connections=false #  Whether or not connections in the ACCESSIBLE state can be shared within the context of a transaction.</span><br><span class="line">spring.jta.bitronix.connectionfactory.test-connections=true # Whether or not connections should be tested when acquired from the pool.</span><br><span class="line">spring.jta.bitronix.connectionfactory.two-pc-ordering-position=1 # The position that this resource should take during two-phase commit (always first is Integer.MIN_VALUE, always last is Integer.MAX_VALUE).</span><br><span class="line">spring.jta.bitronix.connectionfactory.unique-name=jmsConnectionFactory # The unique name used to identify the resource during recovery.</span><br><span class="line">spring.jta.bitronix.connectionfactory.use-tm-join=true Whether or not TMJOIN should be used when starting XAResources.</span><br><span class="line">spring.jta.bitronix.connectionfactory.user= # The user to use to connect to the JMS provider.</span><br><span class="line">spring.jta.bitronix.datasource.acquire-increment=1 # Number of connections to create when growing the pool.</span><br><span class="line">spring.jta.bitronix.datasource.acquisition-interval=1 # Time, in seconds, to wait before trying to acquire a connection again after an invalid connection was acquired.</span><br><span class="line">spring.jta.bitronix.datasource.acquisition-timeout=30 # Timeout, in seconds, for acquiring connections from the pool.</span><br><span class="line">spring.jta.bitronix.datasource.allow-local-transactions=true # Whether or not the transaction manager should allow mixing XA and non-XA transactions.</span><br><span class="line">spring.jta.bitronix.datasource.apply-transaction-timeout=false # Whether or not the transaction timeout should be set on the XAResource when it is enlisted.</span><br><span class="line">spring.jta.bitronix.datasource.automatic-enlisting-enabled=true # Whether or not resources should be enlisted and delisted automatically.</span><br><span class="line">spring.jta.bitronix.datasource.cursor-holdability= # The default cursor holdability for connections.</span><br><span class="line">spring.jta.bitronix.datasource.defer-connection-release=true # Whether or not the database can run many transactions on the same connection and supports transaction interleaving.</span><br><span class="line">spring.jta.bitronix.datasource.enable-jdbc4-connection-test= # Whether or not Connection.isValid() is called when acquiring a connection from the pool.</span><br><span class="line">spring.jta.bitronix.datasource.ignore-recovery-failures=false # Whether or not recovery failures should be ignored.</span><br><span class="line">spring.jta.bitronix.datasource.isolation-level= # The default isolation level for connections.</span><br><span class="line">spring.jta.bitronix.datasource.local-auto-commit= # The default auto-commit mode for local transactions.</span><br><span class="line">spring.jta.bitronix.datasource.login-timeout= # Timeout, in seconds, for establishing a database connection.</span><br><span class="line">spring.jta.bitronix.datasource.max-idle-time=60 # The time, in seconds, after which connections are cleaned up from the pool.</span><br><span class="line">spring.jta.bitronix.datasource.max-pool-size=10 # The maximum size of the pool. 0 denotes no limit.</span><br><span class="line">spring.jta.bitronix.datasource.min-pool-size=0 # The minimum size of the pool.</span><br><span class="line">spring.jta.bitronix.datasource.prepared-statement-cache-size=0 # The target size of the prepared statement cache. 0 disables the cache.</span><br><span class="line">spring.jta.bitronix.datasource.share-transaction-connections=false #  Whether or not connections in the ACCESSIBLE state can be shared within the context of a transaction.</span><br><span class="line">spring.jta.bitronix.datasource.test-query= # SQL query or statement used to validate a connection before returning it.</span><br><span class="line">spring.jta.bitronix.datasource.two-pc-ordering-position=1 # The position that this resource should take during two-phase commit (always first is Integer.MIN_VALUE, always last is Integer.MAX_VALUE).</span><br><span class="line">spring.jta.bitronix.datasource.unique-name=dataSource # The unique name used to identify the resource during recovery.</span><br><span class="line">spring.jta.bitronix.datasource.use-tm-join=true Whether or not TMJOIN should be used when starting XAResources.</span><br><span class="line">spring.jta.bitronix.properties.allow-multiple-lrc=false # Allow multiple LRC resources to be enlisted into the same transaction.</span><br><span class="line">spring.jta.bitronix.properties.asynchronous2-pc=false # Enable asynchronously execution of two phase commit.</span><br><span class="line">spring.jta.bitronix.properties.background-recovery-interval-seconds=60 # Interval in seconds at which to run the recovery process in the background.</span><br><span class="line">spring.jta.bitronix.properties.current-node-only-recovery=true # Recover only the current node.</span><br><span class="line">spring.jta.bitronix.properties.debug-zero-resource-transaction=false # Log the creation and commit call stacks of transactions executed without a single enlisted resource.</span><br><span class="line">spring.jta.bitronix.properties.default-transaction-timeout=60 # Default transaction timeout in seconds.</span><br><span class="line">spring.jta.bitronix.properties.disable-jmx=false # Enable JMX support.</span><br><span class="line">spring.jta.bitronix.properties.exception-analyzer= # Set the fully qualified name of the exception analyzer implementation to use.</span><br><span class="line">spring.jta.bitronix.properties.filter-log-status=false # Enable filtering of logs so that only mandatory logs are written.</span><br><span class="line">spring.jta.bitronix.properties.force-batching-enabled=true #  Set if disk forces are batched.</span><br><span class="line">spring.jta.bitronix.properties.forced-write-enabled=true # Set if logs are forced to disk.</span><br><span class="line">spring.jta.bitronix.properties.graceful-shutdown-interval=60 # Maximum amount of seconds the TM will wait for transactions to get done before aborting them at shutdown time.</span><br><span class="line">spring.jta.bitronix.properties.jndi-transaction-synchronization-registry-name= # JNDI name of the TransactionSynchronizationRegistry.</span><br><span class="line">spring.jta.bitronix.properties.jndi-user-transaction-name= # JNDI name of the UserTransaction.</span><br><span class="line">spring.jta.bitronix.properties.journal=disk # Name of the journal. Can be &apos;disk&apos;, &apos;null&apos; or a class name.</span><br><span class="line">spring.jta.bitronix.properties.log-part1-filename=btm1.tlog # Name of the first fragment of the journal.</span><br><span class="line">spring.jta.bitronix.properties.log-part2-filename=btm2.tlog # Name of the second fragment of the journal.</span><br><span class="line">spring.jta.bitronix.properties.max-log-size-in-mb=2 # Maximum size in megabytes of the journal fragments.</span><br><span class="line">spring.jta.bitronix.properties.resource-configuration-filename= # ResourceLoader configuration file name.</span><br><span class="line">spring.jta.bitronix.properties.server-id= # ASCII ID that must uniquely identify this TM instance. Default to the machine&apos;s IP address.</span><br><span class="line">spring.jta.bitronix.properties.skip-corrupted-logs=false # Skip corrupted transactions log entries.</span><br><span class="line">spring.jta.bitronix.properties.warn-about-zero-resource-transaction=true # Log a warning for transactions executed without a single enlisted resource.</span><br><span class="line"></span><br><span class="line"># NARAYANA (NarayanaProperties)</span><br><span class="line">spring.jta.narayana.default-timeout=60 # Transaction timeout in seconds.</span><br><span class="line">spring.jta.narayana.expiry-scanners=com.arjuna.ats.internal.arjuna.recovery.ExpiredTransactionStatusManagerScanner # Comma-separated list of expiry scanners.</span><br><span class="line">spring.jta.narayana.log-dir= # Transaction object store directory.</span><br><span class="line">spring.jta.narayana.one-phase-commit=true # Enable one phase commit optimisation.</span><br><span class="line">spring.jta.narayana.periodic-recovery-period=120 # Interval in which periodic recovery scans are performed in seconds.</span><br><span class="line">spring.jta.narayana.recovery-backoff-period=10 # Back off period between first and second phases of the recovery scan in seconds.</span><br><span class="line">spring.jta.narayana.recovery-db-pass= # Database password to be used by recovery manager.</span><br><span class="line">spring.jta.narayana.recovery-db-user= # Database username to be used by recovery manager.</span><br><span class="line">spring.jta.narayana.recovery-jms-pass= # JMS password to be used by recovery manager.</span><br><span class="line">spring.jta.narayana.recovery-jms-user= # JMS username to be used by recovery manager.</span><br><span class="line">spring.jta.narayana.recovery-modules= # Comma-separated list of recovery modules.</span><br><span class="line">spring.jta.narayana.transaction-manager-id=1 # Unique transaction manager id.</span><br><span class="line">spring.jta.narayana.xa-resource-orphan-filters= # Comma-separated list of orphan filters.</span><br><span class="line"></span><br><span class="line"># EMBEDDED MONGODB (EmbeddedMongoProperties)</span><br><span class="line">spring.mongodb.embedded.features=SYNC_DELAY # Comma-separated list of features to enable.</span><br><span class="line">spring.mongodb.embedded.storage.database-dir= # Directory used for data storage.</span><br><span class="line">spring.mongodb.embedded.storage.oplog-size= # Maximum size of the oplog in megabytes.</span><br><span class="line">spring.mongodb.embedded.storage.repl-set-name= # Name of the replica set.</span><br><span class="line">spring.mongodb.embedded.version=2.6.10 # Version of Mongo to use.</span><br><span class="line"></span><br><span class="line"># REDIS (RedisProperties)</span><br><span class="line">spring.redis.cluster.max-redirects= # Maximum number of redirects to follow when executing commands across the cluster.</span><br><span class="line">spring.redis.cluster.nodes= # Comma-separated list of &quot;host:port&quot; pairs to bootstrap from.</span><br><span class="line">spring.redis.database=0 # Database index used by the connection factory.</span><br><span class="line">spring.redis.url= # Connection URL, will override host, port and password (user will be ignored), e.g. redis://user:password@example.com:6379</span><br><span class="line">spring.redis.host=localhost # Redis server host.</span><br><span class="line">spring.redis.password= # Login password of the redis server.</span><br><span class="line">spring.redis.ssl=false # Enable SSL support.</span><br><span class="line">spring.redis.pool.max-active=8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.</span><br><span class="line">spring.redis.pool.max-idle=8 # Max number of &quot;idle&quot; connections in the pool. Use a negative value to indicate an unlimited number of idle connections.</span><br><span class="line">spring.redis.pool.max-wait=-1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.</span><br><span class="line">spring.redis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.</span><br><span class="line">spring.redis.port=6379 # Redis server port.</span><br><span class="line">spring.redis.sentinel.master= # Name of Redis server.</span><br><span class="line">spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.</span><br><span class="line">spring.redis.timeout=0 # Connection timeout in milliseconds.</span><br><span class="line"></span><br><span class="line"># TRANSACTION (TransactionProperties)</span><br><span class="line">spring.transaction.default-timeout= # Default transaction timeout in seconds.</span><br><span class="line">spring.transaction.rollback-on-commit-failure= # Perform the rollback on commit failures.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----------------------------------------</span><br><span class="line"># INTEGRATION PROPERTIES</span><br><span class="line"># ----------------------------------------</span><br><span class="line"></span><br><span class="line"># ACTIVEMQ (ActiveMQProperties)</span><br><span class="line">spring.activemq.broker-url= # URL of the ActiveMQ broker. Auto-generated by default.</span><br><span class="line">spring.activemq.close-timeout=15000 # Time to wait, in milliseconds, before considering a close complete.</span><br><span class="line">spring.activemq.in-memory=true # Specify if the default broker URL should be in memory. Ignored if an explicit broker has been specified.</span><br><span class="line">spring.activemq.non-blocking-redelivery=false # Do not stop message delivery before re-delivering messages from a rolled back transaction. This implies that message order will not be preserved when this is enabled.</span><br><span class="line">spring.activemq.password= # Login password of the broker.</span><br><span class="line">spring.activemq.send-timeout=0 # Time to wait, in milliseconds, on Message sends for a response. Set it to 0 to indicate to wait forever.</span><br><span class="line">spring.activemq.user= # Login user of the broker.</span><br><span class="line">spring.activemq.packages.trust-all= # Trust all packages.</span><br><span class="line">spring.activemq.packages.trusted= # Comma-separated list of specific packages to trust (when not trusting all packages).</span><br><span class="line">spring.activemq.pool.block-if-full=true # Block when a connection is requested and the pool is full. Set it to false to throw a &quot;JMSException&quot; instead.</span><br><span class="line">spring.activemq.pool.block-if-full-timeout=-1 # Blocking period, in milliseconds, before throwing an exception if the pool is still full.</span><br><span class="line">spring.activemq.pool.create-connection-on-startup=true # Create a connection on startup. Can be used to warm-up the pool on startup.</span><br><span class="line">spring.activemq.pool.enabled=false # Whether a PooledConnectionFactory should be created instead of a regular ConnectionFactory.</span><br><span class="line">spring.activemq.pool.expiry-timeout=0 # Connection expiration timeout in milliseconds.</span><br><span class="line">spring.activemq.pool.idle-timeout=30000 # Connection idle timeout in milliseconds.</span><br><span class="line">spring.activemq.pool.max-connections=1 # Maximum number of pooled connections.</span><br><span class="line">spring.activemq.pool.maximum-active-session-per-connection=500 # Maximum number of active sessions per connection.</span><br><span class="line">spring.activemq.pool.reconnect-on-exception=true # Reset the connection when a &quot;JMXException&quot; occurs.</span><br><span class="line">spring.activemq.pool.time-between-expiration-check=-1 # Time to sleep, in milliseconds, between runs of the idle connection eviction thread. When negative, no idle connection eviction thread runs.</span><br><span class="line">spring.activemq.pool.use-anonymous-producers=true # Use only one anonymous &quot;MessageProducer&quot; instance. Set it to false to create one &quot;MessageProducer&quot; every time one is required.</span><br><span class="line"></span><br><span class="line"># ARTEMIS (ArtemisProperties)</span><br><span class="line">spring.artemis.embedded.cluster-password= # Cluster password. Randomly generated on startup by default.</span><br><span class="line">spring.artemis.embedded.data-directory= # Journal file directory. Not necessary if persistence is turned off.</span><br><span class="line">spring.artemis.embedded.enabled=true # Enable embedded mode if the Artemis server APIs are available.</span><br><span class="line">spring.artemis.embedded.persistent=false # Enable persistent store.</span><br><span class="line">spring.artemis.embedded.queues= # Comma-separated list of queues to create on startup.</span><br><span class="line">spring.artemis.embedded.server-id= # Server id. By default, an auto-incremented counter is used.</span><br><span class="line">spring.artemis.embedded.topics= # Comma-separated list of topics to create on startup.</span><br><span class="line">spring.artemis.host=localhost # Artemis broker host.</span><br><span class="line">spring.artemis.mode= # Artemis deployment mode, auto-detected by default.</span><br><span class="line">spring.artemis.password= # Login password of the broker.</span><br><span class="line">spring.artemis.port=61616 # Artemis broker port.</span><br><span class="line">spring.artemis.user= # Login user of the broker.</span><br><span class="line"></span><br><span class="line"># SPRING BATCH (BatchProperties)</span><br><span class="line">spring.batch.initializer.enabled= # Create the required batch tables on startup if necessary. Enabled automatically if no custom table prefix is set or if a custom schema is configured.</span><br><span class="line">spring.batch.job.enabled=true # Execute all Spring Batch jobs in the context on startup.</span><br><span class="line">spring.batch.job.names= # Comma-separated list of job names to execute on startup (For instance `job1,job2`). By default, all Jobs found in the context are executed.</span><br><span class="line">spring.batch.schema=classpath:org/springframework/batch/core/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.</span><br><span class="line">spring.batch.table-prefix= # Table prefix for all the batch meta-data tables.</span><br><span class="line"></span><br><span class="line"># JMS (JmsProperties)</span><br><span class="line">spring.jms.jndi-name= # Connection factory JNDI name. When set, takes precedence to others connection factory auto-configurations.</span><br><span class="line">spring.jms.listener.acknowledge-mode= # Acknowledge mode of the container. By default, the listener is transacted with automatic acknowledgment.</span><br><span class="line">spring.jms.listener.auto-startup=true # Start the container automatically on startup.</span><br><span class="line">spring.jms.listener.concurrency= # Minimum number of concurrent consumers.</span><br><span class="line">spring.jms.listener.max-concurrency= # Maximum number of concurrent consumers.</span><br><span class="line">spring.jms.pub-sub-domain=false # Specify if the default destination type is topic.</span><br><span class="line">spring.jms.template.default-destination= # Default destination to use on send/receive operations that do not have a destination parameter.</span><br><span class="line">spring.jms.template.delivery-delay= # Delivery delay to use for send calls in milliseconds.</span><br><span class="line">spring.jms.template.delivery-mode= # Delivery mode. Enable QoS when set.</span><br><span class="line">spring.jms.template.priority= # Priority of a message when sending. Enable QoS when set.</span><br><span class="line">spring.jms.template.qos-enabled= # Enable explicit QoS when sending a message.</span><br><span class="line">spring.jms.template.receive-timeout= # Timeout to use for receive calls in milliseconds.</span><br><span class="line">spring.jms.template.time-to-live= # Time-to-live of a message when sending in milliseconds. Enable QoS when set.</span><br><span class="line"></span><br><span class="line"># APACHE KAFKA (KafkaProperties)</span><br><span class="line">spring.kafka.bootstrap-servers= # Comma-delimited list of host:port pairs to use for establishing the initial connection to the Kafka cluster.</span><br><span class="line">spring.kafka.client-id= # Id to pass to the server when making requests; used for server-side logging.</span><br><span class="line">spring.kafka.consumer.auto-commit-interval= # Frequency in milliseconds that the consumer offsets are auto-committed to Kafka if &apos;enable.auto.commit&apos; true.</span><br><span class="line">spring.kafka.consumer.auto-offset-reset= # What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server.</span><br><span class="line">spring.kafka.consumer.bootstrap-servers= # Comma-delimited list of host:port pairs to use for establishing the initial connection to the Kafka cluster.</span><br><span class="line">spring.kafka.consumer.client-id= # Id to pass to the server when making requests; used for server-side logging.</span><br><span class="line">spring.kafka.consumer.enable-auto-commit= # If true the consumer&apos;s offset will be periodically committed in the background.</span><br><span class="line">spring.kafka.consumer.fetch-max-wait= # Maximum amount of time in milliseconds the server will block before answering the fetch request if there isn&apos;t sufficient data to immediately satisfy the requirement given by &quot;fetch.min.bytes&quot;.</span><br><span class="line">spring.kafka.consumer.fetch-min-size= # Minimum amount of data the server should return for a fetch request in bytes.</span><br><span class="line">spring.kafka.consumer.group-id= # Unique string that identifies the consumer group this consumer belongs to.</span><br><span class="line">spring.kafka.consumer.heartbeat-interval= # Expected time in milliseconds between heartbeats to the consumer coordinator.</span><br><span class="line">spring.kafka.consumer.key-deserializer= # Deserializer class for keys.</span><br><span class="line">spring.kafka.consumer.max-poll-records= # Maximum number of records returned in a single call to poll().</span><br><span class="line">spring.kafka.consumer.value-deserializer= # Deserializer class for values.</span><br><span class="line">spring.kafka.listener.ack-count= # Number of records between offset commits when ackMode is &quot;COUNT&quot; or &quot;COUNT_TIME&quot;.</span><br><span class="line">spring.kafka.listener.ack-mode= # Listener AckMode; see the spring-kafka documentation.</span><br><span class="line">spring.kafka.listener.ack-time= # Time in milliseconds between offset commits when ackMode is &quot;TIME&quot; or &quot;COUNT_TIME&quot;.</span><br><span class="line">spring.kafka.listener.concurrency= # Number of threads to run in the listener containers.</span><br><span class="line">spring.kafka.listener.poll-timeout= # Timeout in milliseconds to use when polling the consumer.</span><br><span class="line">spring.kafka.producer.acks= # Number of acknowledgments the producer requires the leader to have received before considering a request complete.</span><br><span class="line">spring.kafka.producer.batch-size= # Number of records to batch before sending.</span><br><span class="line">spring.kafka.producer.bootstrap-servers= # Comma-delimited list of host:port pairs to use for establishing the initial connection to the Kafka cluster.</span><br><span class="line">spring.kafka.producer.buffer-memory= # Total bytes of memory the producer can use to buffer records waiting to be sent to the server.</span><br><span class="line">spring.kafka.producer.client-id= # Id to pass to the server when making requests; used for server-side logging.</span><br><span class="line">spring.kafka.producer.compression-type= # Compression type for all data generated by the producer.</span><br><span class="line">spring.kafka.producer.key-serializer= # Serializer class for keys.</span><br><span class="line">spring.kafka.producer.retries= # When greater than zero, enables retrying of failed sends.</span><br><span class="line">spring.kafka.producer.value-serializer= # Serializer class for values.</span><br><span class="line">spring.kafka.properties.*= # Additional properties used to configure the client.</span><br><span class="line">spring.kafka.ssl.key-password= # Password of the private key in the key store file.</span><br><span class="line">spring.kafka.ssl.keystore-location= # Location of the key store file.</span><br><span class="line">spring.kafka.ssl.keystore-password= # Store password for the key store file.</span><br><span class="line">spring.kafka.ssl.truststore-location= # Location of the trust store file.</span><br><span class="line">spring.kafka.ssl.truststore-password= # Store password for the trust store file.</span><br><span class="line">spring.kafka.template.default-topic= # Default topic to which messages will be sent.</span><br><span class="line"></span><br><span class="line"># RABBIT (RabbitProperties)</span><br><span class="line">spring.rabbitmq.addresses= # Comma-separated list of addresses to which the client should connect.</span><br><span class="line">spring.rabbitmq.cache.channel.checkout-timeout= # Number of milliseconds to wait to obtain a channel if the cache size has been reached.</span><br><span class="line">spring.rabbitmq.cache.channel.size= # Number of channels to retain in the cache.</span><br><span class="line">spring.rabbitmq.cache.connection.mode=channel # Connection factory cache mode.</span><br><span class="line">spring.rabbitmq.cache.connection.size= # Number of connections to cache.</span><br><span class="line">spring.rabbitmq.connection-timeout= # Connection timeout, in milliseconds; zero for infinite.</span><br><span class="line">spring.rabbitmq.dynamic=true # Create an AmqpAdmin bean.</span><br><span class="line">spring.rabbitmq.host=localhost # RabbitMQ host.</span><br><span class="line">spring.rabbitmq.listener.simple.acknowledge-mode= # Acknowledge mode of container.</span><br><span class="line">spring.rabbitmq.listener.simple.auto-startup=true # Start the container automatically on startup.</span><br><span class="line">spring.rabbitmq.listener.simple.concurrency= # Minimum number of consumers.</span><br><span class="line">spring.rabbitmq.listener.simple.default-requeue-rejected= # Whether or not to requeue delivery failures; default `true`.</span><br><span class="line">spring.rabbitmq.listener.simple.idle-event-interval= # How often idle container events should be published in milliseconds.</span><br><span class="line">spring.rabbitmq.listener.simple.max-concurrency= # Maximum number of consumers.</span><br><span class="line">spring.rabbitmq.listener.simple.prefetch= # Number of messages to be handled in a single request. It should be greater than or equal to the transaction size (if used).</span><br><span class="line">spring.rabbitmq.listener.simple.retry.enabled=false # Whether or not publishing retries are enabled.</span><br><span class="line">spring.rabbitmq.listener.simple.retry.initial-interval=1000 # Interval between the first and second attempt to deliver a message.</span><br><span class="line">spring.rabbitmq.listener.simple.retry.max-attempts=3 # Maximum number of attempts to deliver a message.</span><br><span class="line">spring.rabbitmq.listener.simple.retry.max-interval=10000 # Maximum interval between attempts.</span><br><span class="line">spring.rabbitmq.listener.simple.retry.multiplier=1.0 # A multiplier to apply to the previous delivery retry interval.</span><br><span class="line">spring.rabbitmq.listener.simple.retry.stateless=true # Whether or not retry is stateless or stateful.</span><br><span class="line">spring.rabbitmq.listener.simple.transaction-size= # Number of messages to be processed in a transaction. For best results it should be less than or equal to the prefetch count.</span><br><span class="line">spring.rabbitmq.password= # Login to authenticate against the broker.</span><br><span class="line">spring.rabbitmq.port=5672 # RabbitMQ port.</span><br><span class="line">spring.rabbitmq.publisher-confirms=false # Enable publisher confirms.</span><br><span class="line">spring.rabbitmq.publisher-returns=false # Enable publisher returns.</span><br><span class="line">spring.rabbitmq.requested-heartbeat= # Requested heartbeat timeout, in seconds; zero for none.</span><br><span class="line">spring.rabbitmq.ssl.enabled=false # Enable SSL support.</span><br><span class="line">spring.rabbitmq.ssl.key-store= # Path to the key store that holds the SSL certificate.</span><br><span class="line">spring.rabbitmq.ssl.key-store-password= # Password used to access the key store.</span><br><span class="line">spring.rabbitmq.ssl.trust-store= # Trust store that holds SSL certificates.</span><br><span class="line">spring.rabbitmq.ssl.trust-store-password= # Password used to access the trust store.</span><br><span class="line">spring.rabbitmq.ssl.algorithm= # SSL algorithm to use. By default configure by the rabbit client library.</span><br><span class="line">spring.rabbitmq.template.mandatory=false # Enable mandatory messages.</span><br><span class="line">spring.rabbitmq.template.receive-timeout=0 # Timeout for `receive()` methods.</span><br><span class="line">spring.rabbitmq.template.reply-timeout=5000 # Timeout for `sendAndReceive()` methods.</span><br><span class="line">spring.rabbitmq.template.retry.enabled=false # Set to true to enable retries in the `RabbitTemplate`.</span><br><span class="line">spring.rabbitmq.template.retry.initial-interval=1000 # Interval between the first and second attempt to publish a message.</span><br><span class="line">spring.rabbitmq.template.retry.max-attempts=3 # Maximum number of attempts to publish a message.</span><br><span class="line">spring.rabbitmq.template.retry.max-interval=10000 # Maximum number of attempts to publish a message.</span><br><span class="line">spring.rabbitmq.template.retry.multiplier=1.0 # A multiplier to apply to the previous publishing retry interval.</span><br><span class="line">spring.rabbitmq.username= # Login user to authenticate to the broker.</span><br><span class="line">spring.rabbitmq.virtual-host= # Virtual host to use when connecting to the broker.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----------------------------------------</span><br><span class="line"># ACTUATOR PROPERTIES</span><br><span class="line"># ----------------------------------------</span><br><span class="line"></span><br><span class="line"># ENDPOINTS (AbstractEndpoint subclasses)</span><br><span class="line">endpoints.enabled=true # Enable endpoints.</span><br><span class="line">endpoints.sensitive= # Default endpoint sensitive setting.</span><br><span class="line">endpoints.actuator.enabled=true # Enable the endpoint.</span><br><span class="line">endpoints.actuator.path= # Endpoint URL path.</span><br><span class="line">endpoints.actuator.sensitive=false # Enable security on the endpoint.</span><br><span class="line">endpoints.auditevents.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.auditevents.path= # Endpoint path.</span><br><span class="line">endpoints.auditevents.sensitive=false # Enable security on the endpoint.</span><br><span class="line">endpoints.autoconfig.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.autoconfig.id= # Endpoint identifier.</span><br><span class="line">endpoints.autoconfig.path= # Endpoint path.</span><br><span class="line">endpoints.autoconfig.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.beans.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.beans.id= # Endpoint identifier.</span><br><span class="line">endpoints.beans.path= # Endpoint path.</span><br><span class="line">endpoints.beans.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.configprops.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.configprops.id= # Endpoint identifier.</span><br><span class="line">endpoints.configprops.keys-to-sanitize=password,secret,key,token,.*credentials.*,vcap_services # Keys that should be sanitized. Keys can be simple strings that the property ends with or regex expressions.</span><br><span class="line">endpoints.configprops.path= # Endpoint path.</span><br><span class="line">endpoints.configprops.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.docs.curies.enabled=false # Enable the curie generation.</span><br><span class="line">endpoints.docs.enabled=true # Enable actuator docs endpoint.</span><br><span class="line">endpoints.docs.path=/docs #</span><br><span class="line">endpoints.docs.sensitive=false #</span><br><span class="line">endpoints.dump.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.dump.id= # Endpoint identifier.</span><br><span class="line">endpoints.dump.path= # Endpoint path.</span><br><span class="line">endpoints.dump.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.env.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.env.id= # Endpoint identifier.</span><br><span class="line">endpoints.env.keys-to-sanitize=password,secret,key,token,.*credentials.*,vcap_services # Keys that should be sanitized. Keys can be simple strings that the property ends with or regex expressions.</span><br><span class="line">endpoints.env.path= # Endpoint path.</span><br><span class="line">endpoints.env.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.flyway.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.flyway.id= # Endpoint identifier.</span><br><span class="line">endpoints.flyway.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.health.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.health.id= # Endpoint identifier.</span><br><span class="line">endpoints.health.mapping.*= # Mapping of health statuses to HTTP status codes. By default, registered health statuses map to sensible defaults (i.e. UP maps to 200).</span><br><span class="line">endpoints.health.path= # Endpoint path.</span><br><span class="line">endpoints.health.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.health.time-to-live=1000 # Time to live for cached result, in milliseconds.</span><br><span class="line">endpoints.heapdump.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.heapdump.path= # Endpoint path.</span><br><span class="line">endpoints.heapdump.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.hypermedia.enabled=false # Enable hypermedia support for endpoints.</span><br><span class="line">endpoints.info.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.info.id= # Endpoint identifier.</span><br><span class="line">endpoints.info.path= # Endpoint path.</span><br><span class="line">endpoints.info.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.jolokia.enabled=true # Enable Jolokia endpoint.</span><br><span class="line">endpoints.jolokia.path=/jolokia # Endpoint URL path.</span><br><span class="line">endpoints.jolokia.sensitive=true # Enable security on the endpoint.</span><br><span class="line">endpoints.liquibase.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.liquibase.id= # Endpoint identifier.</span><br><span class="line">endpoints.liquibase.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.logfile.enabled=true # Enable the endpoint.</span><br><span class="line">endpoints.logfile.external-file= # External Logfile to be accessed.</span><br><span class="line">endpoints.logfile.path=/logfile # Endpoint URL path.</span><br><span class="line">endpoints.logfile.sensitive=true # Enable security on the endpoint.</span><br><span class="line">endpoints.loggers.enabled=true # Enable the endpoint.</span><br><span class="line">endpoints.loggers.id= # Endpoint identifier.</span><br><span class="line">endpoints.loggers.path=/logfile # Endpoint path.</span><br><span class="line">endpoints.loggers.sensitive=true # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.mappings.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.mappings.id= # Endpoint identifier.</span><br><span class="line">endpoints.mappings.path= # Endpoint path.</span><br><span class="line">endpoints.mappings.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.metrics.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.metrics.filter.enabled=true # Enable the metrics servlet filter.</span><br><span class="line">endpoints.metrics.filter.gauge-submissions=merged # Http filter gauge submissions (merged, per-http-method)</span><br><span class="line">endpoints.metrics.filter.counter-submissions=merged # Http filter counter submissions (merged, per-http-method)</span><br><span class="line">endpoints.metrics.id= # Endpoint identifier.</span><br><span class="line">endpoints.metrics.path= # Endpoint path.</span><br><span class="line">endpoints.metrics.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.shutdown.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.shutdown.id= # Endpoint identifier.</span><br><span class="line">endpoints.shutdown.path= # Endpoint path.</span><br><span class="line">endpoints.shutdown.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line">endpoints.trace.enabled= # Enable the endpoint.</span><br><span class="line">endpoints.trace.filter.enabled=true # Enable the trace servlet filter.</span><br><span class="line">endpoints.trace.id= # Endpoint identifier.</span><br><span class="line">endpoints.trace.path= # Endpoint path.</span><br><span class="line">endpoints.trace.sensitive= # Mark if the endpoint exposes sensitive information.</span><br><span class="line"></span><br><span class="line"># ENDPOINTS CORS CONFIGURATION (EndpointCorsProperties)</span><br><span class="line">endpoints.cors.allow-credentials= # Set whether credentials are supported. When not set, credentials are not supported.</span><br><span class="line">endpoints.cors.allowed-headers= # Comma-separated list of headers to allow in a request. &apos;*&apos; allows all headers.</span><br><span class="line">endpoints.cors.allowed-methods=GET # Comma-separated list of methods to allow. &apos;*&apos; allows all methods.</span><br><span class="line">endpoints.cors.allowed-origins= # Comma-separated list of origins to allow. &apos;*&apos; allows all origins. When not set, CORS support is disabled.</span><br><span class="line">endpoints.cors.exposed-headers= # Comma-separated list of headers to include in a response.</span><br><span class="line">endpoints.cors.max-age=1800 # How long, in seconds, the response from a pre-flight request can be cached by clients.</span><br><span class="line"></span><br><span class="line"># JMX ENDPOINT (EndpointMBeanExportProperties)</span><br><span class="line">endpoints.jmx.domain= # JMX domain name. Initialized with the value of &apos;spring.jmx.default-domain&apos; if set.</span><br><span class="line">endpoints.jmx.enabled=true # Enable JMX export of all endpoints.</span><br><span class="line">endpoints.jmx.static-names= # Additional static properties to append to all ObjectNames of MBeans representing Endpoints.</span><br><span class="line">endpoints.jmx.unique-names=false # Ensure that ObjectNames are modified in case of conflict.</span><br><span class="line"></span><br><span class="line"># JOLOKIA (JolokiaProperties)</span><br><span class="line">jolokia.config.*= # See Jolokia manual</span><br><span class="line"></span><br><span class="line"># MANAGEMENT HTTP SERVER (ManagementServerProperties)</span><br><span class="line">management.add-application-context-header=true # Add the &quot;X-Application-Context&quot; HTTP header in each response.</span><br><span class="line">management.address= # Network address that the management endpoints should bind to.</span><br><span class="line">management.context-path= # Management endpoint context-path. For instance `/actuator`</span><br><span class="line">management.cloudfoundry.enabled= # Enable extended Cloud Foundry actuator endpoints</span><br><span class="line">management.cloudfoundry.skip-ssl-validation= # Skip SSL verification for Cloud Foundry actuator endpoint security calls</span><br><span class="line">management.port= # Management endpoint HTTP port. Uses the same port as the application by default. Configure a different port to use management-specific SSL.</span><br><span class="line">management.security.enabled=true # Enable security.</span><br><span class="line">management.security.roles=ACTUATOR # Comma-separated list of roles that can access the management endpoint.</span><br><span class="line">management.security.sessions=stateless # Session creating policy to use (always, never, if_required, stateless).</span><br><span class="line">management.ssl.ciphers= # Supported SSL ciphers. Requires a custom management.port.</span><br><span class="line">management.ssl.client-auth= # Whether client authentication is wanted (&quot;want&quot;) or needed (&quot;need&quot;). Requires a trust store. Requires a custom management.port.</span><br><span class="line">management.ssl.enabled= # Enable SSL support. Requires a custom management.port.</span><br><span class="line">management.ssl.enabled-protocols= # Enabled SSL protocols. Requires a custom management.port.</span><br><span class="line">management.ssl.key-alias= # Alias that identifies the key in the key store. Requires a custom management.port.</span><br><span class="line">management.ssl.key-password= # Password used to access the key in the key store. Requires a custom management.port.</span><br><span class="line">management.ssl.key-store= # Path to the key store that holds the SSL certificate (typically a jks file). Requires a custom management.port.</span><br><span class="line">management.ssl.key-store-password= # Password used to access the key store. Requires a custom management.port.</span><br><span class="line">management.ssl.key-store-provider= # Provider for the key store. Requires a custom management.port.</span><br><span class="line">management.ssl.key-store-type= # Type of the key store. Requires a custom management.port.</span><br><span class="line">management.ssl.protocol=TLS # SSL protocol to use. Requires a custom management.port.</span><br><span class="line">management.ssl.trust-store= # Trust store that holds SSL certificates. Requires a custom management.port.</span><br><span class="line">management.ssl.trust-store-password= # Password used to access the trust store. Requires a custom management.port.</span><br><span class="line">management.ssl.trust-store-provider= # Provider for the trust store. Requires a custom management.port.</span><br><span class="line">management.ssl.trust-store-type= # Type of the trust store. Requires a custom management.port.</span><br><span class="line"></span><br><span class="line"># HEALTH INDICATORS</span><br><span class="line">management.health.db.enabled=true # Enable database health check.</span><br><span class="line">management.health.cassandra.enabled=true # Enable cassandra health check.</span><br><span class="line">management.health.couchbase.enabled=true # Enable couchbase health check.</span><br><span class="line">management.health.defaults.enabled=true # Enable default health indicators.</span><br><span class="line">management.health.diskspace.enabled=true # Enable disk space health check.</span><br><span class="line">management.health.diskspace.path= # Path used to compute the available disk space.</span><br><span class="line">management.health.diskspace.threshold=0 # Minimum disk space that should be available, in bytes.</span><br><span class="line">management.health.elasticsearch.enabled=true # Enable elasticsearch health check.</span><br><span class="line">management.health.elasticsearch.indices= # Comma-separated index names.</span><br><span class="line">management.health.elasticsearch.response-timeout=100 # The time, in milliseconds, to wait for a response from the cluster.</span><br><span class="line">management.health.jms.enabled=true # Enable JMS health check.</span><br><span class="line">management.health.ldap.enabled=true # Enable LDAP health check.</span><br><span class="line">management.health.mail.enabled=true # Enable Mail health check.</span><br><span class="line">management.health.mongo.enabled=true # Enable MongoDB health check.</span><br><span class="line">management.health.rabbit.enabled=true # Enable RabbitMQ health check.</span><br><span class="line">management.health.redis.enabled=true # Enable Redis health check.</span><br><span class="line">management.health.solr.enabled=true # Enable Solr health check.</span><br><span class="line">management.health.status.order=DOWN, OUT_OF_SERVICE, UP, UNKNOWN # Comma-separated list of health statuses in order of severity.</span><br><span class="line"></span><br><span class="line"># INFO CONTRIBUTORS (InfoContributorProperties)</span><br><span class="line">management.info.build.enabled=true # Enable build info.</span><br><span class="line">management.info.defaults.enabled=true # Enable default info contributors.</span><br><span class="line">management.info.env.enabled=true # Enable environment info.</span><br><span class="line">management.info.git.enabled=true # Enable git info.</span><br><span class="line">management.info.git.mode=simple # Mode to use to expose git information.</span><br><span class="line"></span><br><span class="line"># REMOTE SHELL (ShellProperties)</span><br><span class="line">management.shell.auth.type=simple # Authentication type. Auto-detected according to the environment.</span><br><span class="line">management.shell.auth.jaas.domain=my-domain # JAAS domain.</span><br><span class="line">management.shell.auth.key.path= # Path to the authentication key. This should point to a valid &quot;.pem&quot; file.</span><br><span class="line">management.shell.auth.simple.user.name=user # Login user.</span><br><span class="line">management.shell.auth.simple.user.password= # Login password.</span><br><span class="line">management.shell.auth.spring.roles=ACTUATOR # Comma-separated list of required roles to login to the CRaSH console.</span><br><span class="line">management.shell.command-path-patterns=classpath*:/commands/**,classpath*:/crash/commands/** # Patterns to use to look for commands.</span><br><span class="line">management.shell.command-refresh-interval=-1 # Scan for changes and update the command if necessary (in seconds).</span><br><span class="line">management.shell.config-path-patterns=classpath*:/crash/* # Patterns to use to look for configurations.</span><br><span class="line">management.shell.disabled-commands=jpa*,jdbc*,jndi* # Comma-separated list of commands to disable.</span><br><span class="line">management.shell.disabled-plugins= # Comma-separated list of plugins to disable. Certain plugins are disabled by default based on the environment.</span><br><span class="line">management.shell.ssh.auth-timeout = # Number of milliseconds after user will be prompted to login again.</span><br><span class="line">management.shell.ssh.enabled=true # Enable CRaSH SSH support.</span><br><span class="line">management.shell.ssh.idle-timeout = # Number of milliseconds after which unused connections are closed.</span><br><span class="line">management.shell.ssh.key-path= # Path to the SSH server key.</span><br><span class="line">management.shell.ssh.port=2000 # SSH port.</span><br><span class="line">management.shell.telnet.enabled=false # Enable CRaSH telnet support. Enabled by default if the TelnetPlugin is available.</span><br><span class="line">management.shell.telnet.port=5000 # Telnet port.</span><br><span class="line"></span><br><span class="line"># TRACING (TraceProperties)</span><br><span class="line">management.trace.include=request-headers,response-headers,cookies,errors # Items to be included in the trace.</span><br><span class="line"></span><br><span class="line"># METRICS EXPORT (MetricExportProperties)</span><br><span class="line">spring.metrics.export.aggregate.key-pattern= # Pattern that tells the aggregator what to do with the keys from the source repository.</span><br><span class="line">spring.metrics.export.aggregate.prefix= # Prefix for global repository if active.</span><br><span class="line">spring.metrics.export.delay-millis=5000 # Delay in milliseconds between export ticks. Metrics are exported to external sources on a schedule with this delay.</span><br><span class="line">spring.metrics.export.enabled=true # Flag to enable metric export (assuming a MetricWriter is available).</span><br><span class="line">spring.metrics.export.excludes= # List of patterns for metric names to exclude. Applied after the includes.</span><br><span class="line">spring.metrics.export.includes= # List of patterns for metric names to include.</span><br><span class="line">spring.metrics.export.redis.key=keys.spring.metrics # Key for redis repository export (if active).</span><br><span class="line">spring.metrics.export.redis.prefix=spring.metrics # Prefix for redis repository if active.</span><br><span class="line">spring.metrics.export.send-latest= # Flag to switch off any available optimizations based on not exporting unchanged metric values.</span><br><span class="line">spring.metrics.export.statsd.host= # Host of a statsd server to receive exported metrics.</span><br><span class="line">spring.metrics.export.statsd.port=8125 # Port of a statsd server to receive exported metrics.</span><br><span class="line">spring.metrics.export.statsd.prefix= # Prefix for statsd exported metrics.</span><br><span class="line">spring.metrics.export.triggers.*= # Specific trigger properties per MetricWriter bean name.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----------------------------------------</span><br><span class="line"># DEVTOOLS PROPERTIES</span><br><span class="line"># ----------------------------------------</span><br><span class="line"></span><br><span class="line"># DEVTOOLS (DevToolsProperties)</span><br><span class="line">spring.devtools.livereload.enabled=true # Enable a livereload.com compatible server.</span><br><span class="line">spring.devtools.livereload.port=35729 # Server port.</span><br><span class="line">spring.devtools.restart.additional-exclude= # Additional patterns that should be excluded from triggering a full restart.</span><br><span class="line">spring.devtools.restart.additional-paths= # Additional paths to watch for changes.</span><br><span class="line">spring.devtools.restart.enabled=true # Enable automatic restart.</span><br><span class="line">spring.devtools.restart.exclude=META-INF/maven/**,META-INF/resources/**,resources/**,static/**,public/**,templates/**,**/*Test.class,**/*Tests.class,git.properties # Patterns that should be excluded from triggering a full restart.</span><br><span class="line">spring.devtools.restart.poll-interval=1000 # Amount of time (in milliseconds) to wait between polling for classpath changes.</span><br><span class="line">spring.devtools.restart.quiet-period=400 # Amount of quiet time (in milliseconds) required without any classpath changes before a restart is triggered.</span><br><span class="line">spring.devtools.restart.trigger-file= # Name of a specific file that when changed will trigger the restart check. If not specified any classpath file change will trigger the restart.</span><br><span class="line"></span><br><span class="line"># REMOTE DEVTOOLS (RemoteDevToolsProperties)</span><br><span class="line">spring.devtools.remote.context-path=/.~~spring-boot!~ # Context path used to handle the remote connection.</span><br><span class="line">spring.devtools.remote.debug.enabled=true # Enable remote debug support.</span><br><span class="line">spring.devtools.remote.debug.local-port=8000 # Local remote debug server port.</span><br><span class="line">spring.devtools.remote.proxy.host= # The host of the proxy to use to connect to the remote application.</span><br><span class="line">spring.devtools.remote.proxy.port= # The port of the proxy to use to connect to the remote application.</span><br><span class="line">spring.devtools.remote.restart.enabled=true # Enable remote restart.</span><br><span class="line">spring.devtools.remote.secret= # A shared secret required to establish a connection (required to enable remote support).</span><br><span class="line">spring.devtools.remote.secret-header-name=X-AUTH-TOKEN # HTTP header used to transfer the shared secret.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ----------------------------------------</span><br><span class="line"># TESTING PROPERTIES</span><br><span class="line"># ----------------------------------------</span><br><span class="line"></span><br><span class="line">spring.test.database.replace=any # Type of existing DataSource to replace.</span><br><span class="line">spring.test.mockmvc.print=default # MVC Print option.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;可以在application.properties/application.yml文件中指定各种属性，也可以在命令行开关中指定。&lt;/p&gt;
&lt;p&gt;记录一下，方便查看，来源（&lt;a href=&quot;https://docs.spring.io/spring-boot/docs/1.5
      
    
    </summary>
    
      <category term="spring" scheme="http://wuyuzhao666.github.io/categories/spring/"/>
    
    
      <category term="spring boot" scheme="http://wuyuzhao666.github.io/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>idea常用快捷键</title>
    <link href="http://wuyuzhao666.github.io/2019/06/11/idea%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/idea%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://wuyuzhao666.github.io/2019/06/11/idea常用快捷键/idea常用快捷键/</id>
    <published>2019-06-11T07:03:19.000Z</published>
    <updated>2019-07-01T12:50:42.746Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Idea必备快捷键"><a href="#Idea必备快捷键" class="headerlink" title="Idea必备快捷键"></a>Idea必备快捷键</h4><p>记录一下自己常用的快捷键</p><ul><li><p>全局查找</p><blockquote><p>Ctrl + Shift + F</p></blockquote></li><li><p>全局替换</p><blockquote><p>Ctrl + Shift + R</p></blockquote></li><li><p>查看方法的具体实现</p><blockquote><p>Ctrl + Alt + 鼠标</p></blockquote></li><li><p>查看类的继承实现图</p><blockquote><p>Ctrl + Alt + u</p></blockquote></li><li><p>生成构造方法、getter等</p><blockquote><p>Alt +  insert</p></blockquote></li><li><p>对选中的代码弹出环绕选项弹出层</p><blockquote><p>Ctrl + Alt + t</p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Idea必备快捷键&quot;&gt;&lt;a href=&quot;#Idea必备快捷键&quot; class=&quot;headerlink&quot; title=&quot;Idea必备快捷键&quot;&gt;&lt;/a&gt;Idea必备快捷键&lt;/h4&gt;&lt;p&gt;记录一下自己常用的快捷键&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;全局查找&lt;/p&gt;
&lt;blo
      
    
    </summary>
    
      <category term="工具" scheme="http://wuyuzhao666.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="idea" scheme="http://wuyuzhao666.github.io/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>Nio之零拷贝</title>
    <link href="http://wuyuzhao666.github.io/2019/06/04/Nio%E4%B9%8B%E9%9B%B6%E6%8B%B7%E8%B4%9D/Nio%E4%B9%8B%E9%9B%B6%E6%8B%B7%E8%B4%9D/"/>
    <id>http://wuyuzhao666.github.io/2019/06/04/Nio之零拷贝/Nio之零拷贝/</id>
    <published>2019-06-04T00:36:01.000Z</published>
    <updated>2019-06-10T06:21:08.200Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Linux中的内核态与用户态"><a href="#Linux中的内核态与用户态" class="headerlink" title="Linux中的内核态与用户态"></a>Linux中的内核态与用户态</h4><center><img src="http://res.cloudinary.com/cafebabe/zc-1"></center><p>如上图所示，<code>Unix/Linux</code>的体系架构分为内核空间（kernal space）与用户空间(application space)，内核控制着计算机的硬件资源，为上层应用程序提供运行环境。用户空间就是应用程序的活动空间，而内核为应用程序的执行提供着必要的cpu、存储、IO资源等。为了使应用程序访问使用到这些资源，内核就提供了资源访问的接口：系统调用。</p><h4 id="传统IO的拷贝"><a href="#传统IO的拷贝" class="headerlink" title="传统IO的拷贝"></a>传统IO的拷贝</h4><center><img src="http://res.cloudinary.com/cafebabe/zc-2"></center><ul><li>数据先从硬件资源被<strong>拷贝</strong>到<strong>内核空间</strong>的缓冲区中(<code>kernel buffer</code>)。</li><li>然后再从<strong>内核空间</strong>的缓冲区中拷贝到<strong>用户空间</strong>的缓冲区（<code>application buffer</code>）中。</li><li>接着从<strong>用户空间</strong>再拷贝到<strong>内核空间</strong>中的<code>Socket buffer</code>/<code>Write buffer</code>中。</li><li>最后再从<code>Socket buffer</code>中拷贝到<strong>网卡缓冲区</strong>/<strong>硬件资源</strong>中。</li></ul><blockquote><p>这个过程经过了<strong>4次</strong>的数据拷贝，其中有<strong>2次</strong>（1和4）是<code>DMA</code>拷贝（直接内存拷贝，不需要<code>cpu</code>的参与），2和3是<code>cpu</code>拷贝。</p></blockquote><p>应用程序发起了<code>read</code>和<code>write</code>系统调用，会经过<strong>4次</strong>的上下文切换。</p><center><img src="http://res.cloudinary.com/cafebabe/zc-3"></center><h4 id="Nio中的零拷贝"><a href="#Nio中的零拷贝" class="headerlink" title="Nio中的零拷贝"></a>Nio中的零拷贝</h4><h5 id="sendFile零拷贝"><a href="#sendFile零拷贝" class="headerlink" title="sendFile零拷贝"></a>sendFile零拷贝</h5><p>在<code>Java</code>的<code>Nio</code>中有个<code>transferTo()</code>方法，可以将一个<code>channel</code>里面的字节直接复制到另一个可以写入字节的<code>channel</code>中，此方法比从通道读取并写入目标通道的简单循环更有效。操作系统可以直接从文件系统缓存向目标通道传输字节，而无需实际复制它们。<code>transferTo()</code>最后内部封装的是<code>sendFile</code>这个系统调用。</p><p>基本代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewClient</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        SocketChannel socketChannel = SocketChannel.open();</span><br><span class="line">        socketChannel.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">"localhost"</span>,<span class="number">8898</span>));</span><br><span class="line">        String fileName = <span class="string">"/home/Desktop/pycharm-professional-2019.1.2.tar.gz"</span>;</span><br><span class="line">        FileInputStream fileInputStream = <span class="keyword">new</span> FileInputStream(fileName);</span><br><span class="line">        FileChannel channel = fileInputStream.getChannel();</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">long</span> transfer = channel.transferTo(<span class="number">0</span>, channel.size(), socketChannel);</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>它的流程如下：</p><center><img src="http://res.cloudinary.com/cafebabe/zc-4"></center><ul><li>应用程序调用<code>transferTo</code>方法，即<code>JVM</code>发起<code>sendFile</code>系统调用，从用户态切换到内核态（<strong>第一次上下文切换</strong>）。</li><li>内核将数据从硬件资源里<strong>DMA拷贝</strong>到内核空间的缓冲区中。</li><li>然后经过<strong>CPU拷贝</strong>到<code>Socket buffer</code>中。</li><li>接着<code>sendFile</code>系统调用返回，将数据<strong>DMA拷贝</strong>到<strong>网卡缓冲区</strong>/<strong>硬件资源</strong>中（<strong>第二次上下文切换</strong>）。</li></ul><blockquote><p>虽然在内核态时，经过了一次cpu拷贝，但并没有从内核态切换到用户态，对于操作系统来说，这已经是零拷贝了（DMA拷贝需要连续的内存空间，所以需要缓冲区）。如果底层操作系统支持分散与收集（scatter and gather）的话，就可以实现真正意义上的零拷贝。</p></blockquote><h5 id="收集拷贝功能的零拷贝"><a href="#收集拷贝功能的零拷贝" class="headerlink" title="收集拷贝功能的零拷贝"></a>收集拷贝功能的零拷贝</h5><center><img src="http://res.cloudinary.com/cafebabe/zc-7"></center><ul><li>应用程序调用<code>transferTo</code>方法，即<code>JVM</code>发起<code>sendFile</code>系统调用，从用户态切换到内核态（<strong>第一次上下文切换</strong>）。</li><li>内核将数据从硬件资源里<strong>DMA拷贝</strong>到内核空间的缓冲区中。</li><li>现在并没有数据会拷贝到<code>Socket buffer</code>，而是<code>Read buffer</code>中数据的相关描述信息（<code>Read buffer</code>缓冲区的内存地址以及偏移量，即长度）会被拷贝到<code>Socket buffer</code>中（即图中的<code>Descriptor</code>）。</li><li>接着<code>sendFile</code>系统调用返回，<strong>DMA gather copy</strong>根据<code>Socket buffer</code>中的描述信息（<strong>第二次上下文切换</strong>）直接将数据从内核空间拷贝<strong>网卡缓冲区</strong>/<strong>硬件资源</strong>中。</li></ul><h4 id="直接内存"><a href="#直接内存" class="headerlink" title="直接内存"></a>直接内存</h4><p>零拷贝提升了文件读写的速度，但是因为没有经过<strong>用户态</strong>，用户程序无法对文件进行操作，所以零拷贝应应用于不需要对文件进行操作的读写场景，但又想提高速度，但又需要对数据进行操作怎么办？那就应该使用<strong>NIO的直接内存</strong>。它的具体实现是通过<code>mmap</code><strong>内存映射</strong>系统调用完成的，它是一个优于传统IO但比<code>sendFile</code>昂贵的IO方法。</p><center><img src="http://res.cloudinary.com/cafebabe/zc-9"></center><ul><li>应用程序调发起<code>mmap</code>系统调用，从用户态切换到内核态（<strong>第一次上下文切换</strong>）。</li><li>通过<strong>DMA引擎</strong>将数据从硬件拷贝到内核空间缓冲区。</li><li><code>mmap</code>系统调用返回，内核态切换为用户态（<strong>第二次上下文切换</strong>）。用户空间和内核空间就共享这一片缓冲区，而不需要将数据从内核空间拷贝到用户空间。因为用户空间和内核空间共享了这个缓冲区数据，所以用户空间就可以像在操作自己缓冲区中数据一般操作这个由内核空间共享的缓冲区数据。</li><li>应用程序发起<code>write</code>系统调用，用户态切换到内核态（<strong>第三次上下文切换</strong>）。</li><li>数据经过<strong>CPU拷贝</strong>到<code>Socket buffer</code>中。</li><li><code>write</code>系统调用返回，内核态切换为用户态（<strong>第四次上下文切换</strong>）。 </li><li>数据通过<strong>DMA引擎</strong>拷贝到<strong>网卡缓冲区</strong>/<strong>硬件资源</strong>中。</li></ul><h5 id="NIO中的直接内存"><a href="#NIO中的直接内存" class="headerlink" title="NIO中的直接内存"></a>NIO中的直接内存</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">FileChannel channel = <span class="keyword">new</span> FileInputStream(<span class="string">""</span>).getChannel();</span><br><span class="line"><span class="comment">//map方法接受3个参数</span></span><br><span class="line"><span class="comment">//FileChannel.MapMode mode：</span></span><br><span class="line"><span class="comment">//Read-only:只读</span></span><br><span class="line"><span class="comment">//Read_write:对结果缓冲区所做的更改最终会传播到文件中;它们可能会或可能不会被映射到同一文件的其他程序看到。 </span></span><br><span class="line"><span class="comment">//privarte:对结果缓冲区所做的更改不会传播到文件，并且对于映射了同一文件的其他程序不可见;相反，它将导致被修改部分缓冲区独自拷贝一份到用户空间。</span></span><br><span class="line"><span class="comment">//position:映射区域的起始位置。</span></span><br><span class="line"><span class="comment">//size:要映射区域的大小。</span></span><br><span class="line">MappedByteBuffer map = channel.map(FileChanne.MapMode.READ_ONLY, <span class="number">0</span>, <span class="number">2</span>);</span><br></pre></td></tr></table></figure><blockquote><p><code>NIO</code>的直接内存是由<code>MappedByteBuffer</code>实现的。核心即是<code>map()</code>方法，该方法把文件映射到内存中，获得内存地址<code>addr</code>，然后通过这个<code>addr</code>构造<code>MappedByteBuffer</code>类，以暴露各种文件操作<code>API</code>。</p><p>由于<code>MappedByteBuffer</code>申请的是堆外内存，因此<strong>不受Minor GC控制</strong>，只能在发生<code>Full GC</code>时才能被回收。而<code>DirectByteBuffer</code>改善了这一情况，它是<code>MappedByteBuffer</code>类的子类，同时它实现了<code>DirectBuffer</code>接口，维护一个<code>Cleaner</code>对象来完成内存回收。因此它既可以通过<strong>Full GC</strong>来回收内存，也可以调用<code>clean()</code>方法来进行回收。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Linux中的内核态与用户态&quot;&gt;&lt;a href=&quot;#Linux中的内核态与用户态&quot; class=&quot;headerlink&quot; title=&quot;Linux中的内核态与用户态&quot;&gt;&lt;/a&gt;Linux中的内核态与用户态&lt;/h4&gt;&lt;center&gt;&lt;img src=&quot;http://
      
    
    </summary>
    
      <category term="Java基础" scheme="http://wuyuzhao666.github.io/categories/Java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="nio" scheme="http://wuyuzhao666.github.io/tags/nio/"/>
    
  </entry>
  
  <entry>
    <title>解决Gradle、Maven项目buildg后没有mybatis的mapper.xml文件问题</title>
    <link href="http://wuyuzhao666.github.io/2019/05/31/%E8%A7%A3%E5%86%B3Gradle%E5%92%8CMaven%E9%A1%B9%E7%9B%AEbuildg%E5%90%8E%E6%B2%A1%E6%9C%89mybatis%E7%9A%84mapper-xml%E6%96%87%E4%BB%B6%E9%97%AE%E9%A2%98/%E8%A7%A3%E5%86%B3Gradle%E5%92%8CMaven%E9%A1%B9%E7%9B%AEbuildg%E5%90%8E%E6%B2%A1%E6%9C%89mybatis%E7%9A%84mapper-xml%E6%96%87%E4%BB%B6%E9%97%AE%E9%A2%98/"/>
    <id>http://wuyuzhao666.github.io/2019/05/31/解决Gradle和Maven项目buildg后没有mybatis的mapper-xml文件问题/解决Gradle和Maven项目buildg后没有mybatis的mapper-xml文件问题/</id>
    <published>2019-05-31T13:09:59.000Z</published>
    <updated>2019-05-31T13:19:26.326Z</updated>
    
    <content type="html"><![CDATA[<p><code>Gradle</code>、<code>Maven</code>都默认只把<code>resources</code>目录当作资源目录，所以在编译时就不会把<code>java</code>目录下的<code>mapper.xml</code>文件编译到输出目录，所以需要在相关文件中修改默认资源目录。</p><ul><li><p>Maven</p><p>在<code>pom</code>文件中加入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Gradle</p><p>在build.gradle文件中加入</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sourceSets.main.resources.srcDirs = [<span class="string">"src/main/java"</span>,<span class="string">"src/main/resources"</span>]</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;Gradle&lt;/code&gt;、&lt;code&gt;Maven&lt;/code&gt;都默认只把&lt;code&gt;resources&lt;/code&gt;目录当作资源目录，所以在编译时就不会把&lt;code&gt;java&lt;/code&gt;目录下的&lt;code&gt;mapper.xml&lt;/code&gt;文件编译到输出目录
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>nio：Selector示例解析</title>
    <link href="http://wuyuzhao666.github.io/2019/05/30/nio%EF%BC%9ASelector%E7%A4%BA%E4%BE%8B%E8%A7%A3%E6%9E%90/nio%EF%BC%9ASelector%E7%A4%BA%E4%BE%8B%E8%A7%A3%E6%9E%90/"/>
    <id>http://wuyuzhao666.github.io/2019/05/30/nio：Selector示例解析/nio：Selector示例解析/</id>
    <published>2019-05-30T02:45:09.000Z</published>
    <updated>2019-05-30T06:16:12.665Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Nio三大核心概念"><a href="#Nio三大核心概念" class="headerlink" title="Nio三大核心概念"></a>Nio三大核心概念</h4><p><code>Nio</code>中有三大核心概念：<code>Buffer</code>、<code>Channel</code>、<code>Selector</code>。</p><ul><li><p><code>Buffer</code>本身是一块内存，底层实现上，是一个数组。数据的读写都是通过<code>Buffer</code>实现的。所有的数据的读写都是通过<code>Buffer</code>来进行的，永远不会出现直接向<code>Channel</code>读写的情况。</p><p>具体原理与<code>API</code>：<a href="https://www.cnblogs.com/chenpi/p/6475510.html" target="_blank" rel="noopener">https://www.cnblogs.com/chenpi/p/6475510.html</a></p></li><li><p><code>Channel</code>指的是可以向其读写数据的对象，类似于<code>java.io</code>中的<code>Stream</code>。<code>Stream</code>只能是<code>InputStream</code>或者<code>OutputStream</code>，<code>Channel</code>所不同的是，<code>Channel</code>是双向的，<code>Channel</code>打开后，则可以进行读取、写入。</p></li><li><p><code>Selector</code>可以管理着多条<code>Channel</code>通道，并且可以知晓这些通道是否为<code>Accept</code>、<code>Connect</code>、<code>Read</code>、<code>Write</code>做好了准备。通过<code>Selector</code>可以管理多个网络连接，也就是说，在一个线程中就可以管理多个<code>Channel</code>，这也是跟传统<code>io</code>的区别，这样单线程的话，减少了线程上下文切换的开销。</p></li></ul><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p>服务端程序：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NioServer</span> </span>&#123;</span><br><span class="line">    <span class="comment">//保存通道的map，以通道的地址作为key</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;String,SocketChannel&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="comment">//创建ServerSocketChannel实例，并绑定端口</span></span><br><span class="line">        ServerSocketChannel serverSocketChannel = ServerSocketChannel.open();</span><br><span class="line">        <span class="comment">//使用Selector，必须处于非阻塞模式</span></span><br><span class="line">        serverSocketChannel.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line">        ServerSocket serverSocket = serverSocketChannel.socket();</span><br><span class="line">        serverSocket.bind(<span class="keyword">new</span> InetSocketAddress(<span class="number">8899</span>));</span><br><span class="line">        <span class="comment">//创建一个Selector</span></span><br><span class="line">        Selector selector = Selector.open();</span><br><span class="line">        <span class="comment">//将channel注册到selector上，并绑定selector对于此通道的感兴趣的事件，当此通道`接受就绪`时，selector就可以知道此通道`接受就绪`。这样就实现了通道和Selector的关联关系。共有四种常量状态</span></span><br><span class="line">        <span class="comment">//SelectionKey.OP_CONNECT</span></span><br><span class="line"><span class="comment">//SelectionKey.OP_ACCEPT</span></span><br><span class="line"><span class="comment">//SelectionKey.OP_READ</span></span><br><span class="line"><span class="comment">//SelectionKey.OP_WRITE</span></span><br><span class="line">        serverSocketChannel.register(selector, SelectionKey.OP_ACCEPT);</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="comment">//返回keys的数量，若没有，在阻塞一段时间后，返回0</span></span><br><span class="line">            <span class="keyword">int</span> select = selector.select();</span><br><span class="line">            <span class="keyword">if</span> (select == <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="comment">//获取SelectionKey集合，通过这些SelectionKey可以获取到相应的就绪通道</span></span><br><span class="line">            Set&lt;SelectionKey&gt; selectionKeys = selector.selectedKeys();</span><br><span class="line">            <span class="comment">//这个循环遍历已选择键集中的每个键，并检测各个键所对应的通道的就绪事件。</span></span><br><span class="line">            selectionKeys.forEach(selectionKey -&gt; &#123;</span><br><span class="line">                <span class="keyword">final</span> SocketChannel client;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span>(selectionKey.isAcceptable()) &#123;</span><br><span class="line">                        <span class="comment">//如果有客户端连接服务，触发accept事件</span></span><br><span class="line">                        ServerSocketChannel channel = (ServerSocketChannel) selectionKey.channel();</span><br><span class="line">                        client = channel.accept();</span><br><span class="line">                        client.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line">                        String s = client.getRemoteAddress().toString();</span><br><span class="line">                        System.out.println(s);</span><br><span class="line">                        <span class="comment">//在selector上注册socketChannel的OP_READ事件。</span></span><br><span class="line">                        client.register(selector,SelectionKey.OP_READ);</span><br><span class="line">                        <span class="comment">//将通道放入map中保存</span></span><br><span class="line">                        map.put(s,client);</span><br><span class="line">                        <span class="comment">//从 selectionKeys删除掉已处理的selectionKey，不然会一直循环</span></span><br><span class="line">                        selectionKeys.remove(selectionKey);</span><br><span class="line">                    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(selectionKey.isReadable())&#123;</span><br><span class="line">                        <span class="comment">//如果有客户端发送数据，触发read事件</span></span><br><span class="line">                        SocketChannel socketChannel = (SocketChannel) selectionKey.channel();</span><br><span class="line">                        ByteBuffer byteBuffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line">                        <span class="comment">//将数据读到Buffer中</span></span><br><span class="line">                        <span class="keyword">int</span> write = socketChannel.read(byteBuffer);</span><br><span class="line">                        <span class="keyword">if</span> (write &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="comment">//将position移到0处</span></span><br><span class="line">                            byteBuffer.flip();</span><br><span class="line">                            Charset charset = Charset.forName(<span class="string">"utf-8"</span>);</span><br><span class="line">                            <span class="comment">//解码出字符串</span></span><br><span class="line">                            String valueOf = String.valueOf(charset.decode(byteBuffer));</span><br><span class="line">                            System.out.println(valueOf);</span><br><span class="line">                            SocketAddress remoteAddress = socketChannel.getRemoteAddress();</span><br><span class="line">                            <span class="comment">//将服务端接收到的数据，发送给其他的客户端，通过保存在map中CHannel</span></span><br><span class="line">                            <span class="comment">//比较</span></span><br><span class="line">                            <span class="keyword">for</span> (Map.Entry&lt;String,SocketChannel&gt; entry:</span><br><span class="line">                                 map.entrySet()) &#123;</span><br><span class="line">                                SocketChannel value = entry.getValue();</span><br><span class="line">                                <span class="comment">//如果map中的Channel等于当前Channel，就不发送给这个Channel，这样就只有别的客户端嫩收到消息</span></span><br><span class="line">                                    <span class="keyword">if</span> (value != socketChannel) &#123;</span><br><span class="line">                                        byteBuffer.clear();</span><br><span class="line">                                        byteBuffer.put( valueOf.getBytes());</span><br><span class="line">                                        byteBuffer.flip();</span><br><span class="line">                                        value.write(byteBuffer);</span><br><span class="line">                                    &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    selectionKeys.remove(selectionKey);</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>客户端程序：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NioClient</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        SocketChannel socketChannel = SocketChannel.open();</span><br><span class="line">        socketChannel.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line">        socketChannel.connect(<span class="keyword">new</span> InetSocketAddress(<span class="string">"localhost"</span>,<span class="number">8899</span>));</span><br><span class="line">        Selector selector = Selector.open();</span><br><span class="line">         <span class="comment">//将channel注册到selector上，并绑定selector对于此通道的感兴趣的事件，当此通道`接收连接`时，selector就可以知道此通道`接受连接`。这样就实现了通道和Selector的关联关系。</span></span><br><span class="line">        socketChannel.register(selector, SelectionKey.OP_CONNECT);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> select = selector.select();</span><br><span class="line">         <span class="keyword">if</span>(select == <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            Set&lt;SelectionKey&gt; selectionKeys = selector.selectedKeys();</span><br><span class="line">            selectionKeys.forEach(selectionKey -&gt; </span><br><span class="line">                <span class="keyword">if</span>(selectionKey.isConnectable())&#123;</span><br><span class="line">                    SocketChannel channel = (SocketChannel) selectionKey.channel();</span><br><span class="line">                    <span class="comment">//判断连接是否完成</span></span><br><span class="line">                    <span class="keyword">if</span>(channel.isConnectionPending())&#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            channel.finishConnect();</span><br><span class="line">                            ByteBuffer byteBuffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line">                            byteBuffer.put((LocalDateTime.now() + <span class="string">" connect successed!"</span>).getBytes());</span><br><span class="line">                            byteBuffer.flip();</span><br><span class="line">                            channel.write(byteBuffer);</span><br><span class="line">                            <span class="comment">//通过单线程池创建获取键盘输入的线程</span></span><br><span class="line">                            ExecutorService executorService = Executors.newSingleThreadExecutor(Executors.defaultThreadFactory());</span><br><span class="line">                            executorService.submit(() -&gt; &#123;</span><br><span class="line">                                <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">                                    byteBuffer.clear();</span><br><span class="line">                                    InputStreamReader inputStreamReader = <span class="keyword">new</span> InputStreamReader(System.in);</span><br><span class="line">                                    BufferedReader bufferedReader = <span class="keyword">new</span> BufferedReader(inputStreamReader);</span><br><span class="line">                                    String s = bufferedReader.readLine();</span><br><span class="line">                                    byteBuffer.put((channel.getLocalAddress().toString() + <span class="string">" : "</span>+ s).getBytes());</span><br><span class="line">                                    byteBuffer.flip();</span><br><span class="line">                                    channel.write(byteBuffer);</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="comment">//将通道绑定为读事件</span></span><br><span class="line">                        channel.register(selector,SelectionKey.OP_READ);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (ClosedChannelException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(selectionKey.isReadable())&#123;</span><br><span class="line">                    SocketChannel channel = (SocketChannel) selectionKey.channel();</span><br><span class="line">                    ByteBuffer byteBuffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line">                    <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">                        byteBuffer.clear();</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            <span class="keyword">int</span> read = channel.read(byteBuffer);</span><br><span class="line">                            <span class="keyword">if</span>(read &lt;= <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">                            String s = <span class="keyword">new</span> String(byteBuffer.array(), <span class="number">0</span>, read);</span><br><span class="line">                            System.out.println(s);</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    selectionKeys.remove(selectionKey);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Nio三大核心概念&quot;&gt;&lt;a href=&quot;#Nio三大核心概念&quot; class=&quot;headerlink&quot; title=&quot;Nio三大核心概念&quot;&gt;&lt;/a&gt;Nio三大核心概念&lt;/h4&gt;&lt;p&gt;&lt;code&gt;Nio&lt;/code&gt;中有三大核心概念：&lt;code&gt;Buffer&lt;/cod
      
    
    </summary>
    
      <category term="Java基础" scheme="http://wuyuzhao666.github.io/categories/Java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="nio" scheme="http://wuyuzhao666.github.io/tags/nio/"/>
    
  </entry>
  
  <entry>
    <title>linux下安装thrift填坑记</title>
    <link href="http://wuyuzhao666.github.io/2019/05/22/linux%E4%B8%8B%E5%AE%89%E8%A3%85thrift%E5%A1%AB%E5%9D%91%E8%AE%B0/linux%E4%B8%8B%E5%AE%89%E8%A3%85thrift%E5%A1%AB%E5%9D%91%E8%AE%B0/"/>
    <id>http://wuyuzhao666.github.io/2019/05/22/linux下安装thrift填坑记/linux下安装thrift填坑记/</id>
    <published>2019-05-22T11:19:40.000Z</published>
    <updated>2019-05-22T11:44:39.090Z</updated>
    
    <content type="html"><![CDATA[<h5 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h5><p>（基于centos6）最近想安装个<code>thrift</code>来玩玩，看了网上的一些安装教程，报了一大堆的错，查了无数的资料，搞了一天，终于安装好了。。。</p><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>依赖安装</span><br><span class="line">yum -y update</span><br><span class="line">yum install wget</span><br><span class="line">yum install git</span><br><span class="line">yum install gcc gcc-c++</span><br><span class="line">yum install libevent-devel zlib-devel openssl-devel</span><br><span class="line">yum install m4</span><br><span class="line">yum install glibc-devel glibc glib2 glib2-devel</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>autoconf</span><br><span class="line">yum install autoconf-2.69</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>libtool</span><br><span class="line">wget http://mirrors.ustc.edu.cn/gnu/libtool/libtool-2.4.6.tar.gz</span><br><span class="line">tar -xvf libtool-2.4.6.tar.gz</span><br><span class="line">cd libtool-2.4.6</span><br><span class="line">./bootstrap</span><br><span class="line">./configure</span><br><span class="line">make &amp;make install</span><br><span class="line">cd ..</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>bison</span><br><span class="line">wget http://ftp.gnu.org/gnu/bison/bison-3.0.4.tar.gz</span><br><span class="line">tar -xvf bison-3.0.4.tar.gz</span><br><span class="line">cd bison-3.0.4</span><br><span class="line">./configure --prefix=/usr/soft/bison</span><br><span class="line">make &amp;make install</span><br><span class="line">cd ..</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>bootstrap</span><br><span class="line">wget http://sourceforge.net/projects/boost/files/boost/1.64.0/boost_1_64_0.tar.gz</span><br><span class="line">tar -xvf boost_1_64_0.tar.gz</span><br><span class="line">cd boost_1_64_0</span><br><span class="line">./bootstrap.sh</span><br><span class="line">./b2 install</span><br><span class="line">cd ..</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>thrift，若时间很久，直接去官网下载吧 </span><br><span class="line"><span class="meta">#</span>http://www.apache.org/dyn/closer.cgi?path=/thrift/0.12.0/thrift-0.12.0.tar.gz</span><br><span class="line">git clone https://github.com/apache/thrift.git</span><br><span class="line">cd thrift</span><br><span class="line">./bootstrap.sh</span><br><span class="line">./configure --prefix=/usr/soft/thrift --with-boost=/usr/soft/bootstrap/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>若出现如下错误，NO.1--------------------------------------------------------------------1</span><br><span class="line">./configure: line 3802: PKG_PROG_PKG_CONFIG: command not found</span><br><span class="line">./configure: line 18272: syntax error near unexpected token `QT,'</span><br><span class="line">./configure: line 18272: `    PKG_CHECK_MODULES(QT, QtCore &gt;= 4.3, QtNetwork &gt;= 4.3, have_qt=yes, have_qt=no)'</span><br><span class="line"><span class="meta">#</span>运行如下命令</span><br><span class="line">find /usr -name "pkg.m4"   返回  /usr/share/aclocal/pkg.m4</span><br><span class="line">aclocal --print-ac-dir     返回  /usr/local/share/aclocal</span><br><span class="line"><span class="meta">#</span>这两个地址不一样，再加上 bootstrap.sh 里面定义了  aclocal -I ./aclocal</span><br><span class="line"><span class="meta">#</span>这导致定义在 pkg.m4里全局变量 PKG_PROG_PKG_CONFIG  与 PKG_CHECK_MODULES 找不到，所以报错</span><br><span class="line"><span class="meta">#</span>做如下修改解决这个问题, 在bootstrap.sh 里面修改 </span><br><span class="line">aclocal -I ./aclocal -I /usr/share/aclocal/</span><br><span class="line"><span class="meta">#</span>保存 重新从 ./bootstrap.sh 就可以了！</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>然后继续</span><br><span class="line">make &amp;make install</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>若出现如下错误，NO.2-------------------------------------------------------------------2</span><br><span class="line"><span class="meta">#</span>搞忘了，反正错误就是你的gcc版本太低了，需要升级</span><br><span class="line"><span class="meta">#</span>下载gcc-4.8</span><br><span class="line">wget http://ftp.gnu.org/gnu/gcc/gcc-4.8.0/gcc-4.8.0.tar.bz2</span><br><span class="line">tar jxvf gcc-4.8.0.tar.bz2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>下载编译所需依赖库</span><br><span class="line">cd gcc-4.8.0</span><br><span class="line">./contrib/download_prerequisites</span><br><span class="line">cd ..</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>编译安装</span><br><span class="line">mkdir gcc-build-4.8.0</span><br><span class="line">cd  gcc-build-4.8.0</span><br><span class="line">../gcc-4.8.0/configure --enable-checking=release --enable-languages=c,c++ --disable-multilib</span><br><span class="line">make -j 8</span><br><span class="line">make install</span><br><span class="line">gcc -v</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>若出现如下错误，NO.3-------------------------------------------------------------------3</span><br><span class="line">./src/thrift/server/TNonblockingServer.h:41:33: error: event2/event_compat.h: No such file or directory</span><br><span class="line"><span class="meta">#</span>找不到event2的头文件</span><br><span class="line"><span class="meta">#</span>直接去官网下载</span><br><span class="line"><span class="meta">#</span>https://github.com/libevent/libevent/releases/download/release-2.1.8-stable/libevent-2.1.8-stable.tar.gz</span><br><span class="line"><span class="meta">#</span>安装编译</span><br><span class="line">./configure --prefix=/usr/local</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>若出现如下错误，NO.4-------------------------------------------------------------------4</span><br><span class="line">/usr/lib/libstdc++.so.6: version `GLIBCXX_3.4.18' not found </span><br><span class="line"><span class="meta">#</span>这是因为升级gcc时，生成的动态库没有替换老版本gcc的动态库，将gcc最新版本的动态库替换掉老版本的动态库即可</span><br><span class="line"><span class="meta">#</span>查看GLBCXX版本</span><br><span class="line">strings /usr/lib/libstdc++.so.6 | grep GLIBCXX</span><br><span class="line"><span class="meta">#</span>输出</span><br><span class="line">GLIBCXX_3.4</span><br><span class="line">GLIBCXX_3.4.1</span><br><span class="line">...</span><br><span class="line">GLIBCXX_3.4.11</span><br><span class="line">GLIBCXX_3.4.12</span><br><span class="line">GLIBCXX_3.4.13</span><br><span class="line">GLIBCXX_FORCE_NEW</span><br><span class="line">GLIBCXX_DEBUG_MESSAGE_LENGTH</span><br><span class="line"><span class="meta">#</span>可以看到，最高版本为3.4.13，没有对应的3.4.18</span><br><span class="line"><span class="meta">#</span>查看libstdc++.so.6链接的库</span><br><span class="line">ll /usr/lib/libstdc++.so.6</span><br><span class="line"><span class="meta">#</span>输出，这是libstdc++.so.6现在链接的库</span><br><span class="line">/usr/lib/libstdc++.so.6 -&gt; libstdc++.so.6.0.13 </span><br><span class="line"><span class="meta">#</span>查看系统更高版本的lib库</span><br><span class="line">find / -name libstdc++.so.6*</span><br><span class="line"><span class="meta">#</span>输出，这里有一个6.0.18版本，比libstdc++.so.6.0.13版本更高  </span><br><span class="line">/usr/lib64/libstdc++.so.6.bak</span><br><span class="line">/usr/lib64/libstdc++.so.6.0.13</span><br><span class="line">/usr/lib64/libstdc++.so.6</span><br><span class="line">/usr/lib64/libstdc++.so.6.0.20</span><br><span class="line">/usr/local/lib64/libstdc++.so.6</span><br><span class="line">/usr/local/lib64/libstdc++.so.6.0.18-gdb.py</span><br><span class="line">/usr/local/lib64/libstdc++.so.6.0.18  </span><br><span class="line"><span class="meta">#</span>查看lib库的信息</span><br><span class="line">strings /usr/local/lib/libstdc++.so.6.0.18 | grep GLIBCXX</span><br><span class="line"><span class="meta">#</span>输出，18这个版本满足我们的需求</span><br><span class="line">GLIBCXX_3.4</span><br><span class="line">GLIBCXX_3.4.1</span><br><span class="line">GLIBCXX_3.4.2</span><br><span class="line">...</span><br><span class="line">GLIBCXX_3.4.17</span><br><span class="line">GLIBCXX_3.4.18 </span><br><span class="line">GLIBCXX_FORCE_NEW</span><br><span class="line">GLIBCXX_DEBUG_MESSAGE_LENGTH</span><br><span class="line"><span class="meta">#</span>重新链接</span><br><span class="line">cp /usr/local/lib/libstdc++.so.6.0.20 /usr/lib64/libstdc++.so.6.0.18</span><br><span class="line">rm -f /usr/lib/libstdc++.so.6</span><br><span class="line">ln -s /usr/lib/libstdc++.so.6.0.20 /usr/lib64/libstdc++.so.6</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>若出现如下错误，NO.5-------------------------------------------------------------------5</span><br><span class="line">g++: error: /usr/lib/libboost_unit_test_framework.a: No such file or directory</span><br><span class="line"><span class="meta">#</span>查找文件</span><br><span class="line">find / -name libboost_unit_test_framework.a</span><br><span class="line"><span class="meta">#</span>输出</span><br><span class="line">/usr/local/lib/libboost_unit_test_framework.a</span><br><span class="line"><span class="meta">#</span>解决</span><br><span class="line">sudo ln -s /usr/local/lib/libboost_unit_test_framework.a /usr/lib/libboost_unit_test_framework.a</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>编译</span><br><span class="line">make &amp;make install</span><br><span class="line">成功</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h5&gt;&lt;p&gt;（基于centos6）最近想安装个&lt;code&gt;thrift&lt;/code&gt;来玩玩，看了网上的一些安装教程，报了一大堆的错，查了无数的资料，搞了
      
    
    </summary>
    
      <category term="thrift" scheme="http://wuyuzhao666.github.io/categories/thrift/"/>
    
    
  </entry>
  
  <entry>
    <title>protobuf集成netty实现多协议消息传递</title>
    <link href="http://wuyuzhao666.github.io/2019/05/21/protobuf%E9%9B%86%E6%88%90netty%E5%AE%9E%E7%8E%B0%E5%A4%9A%E5%8D%8F%E8%AE%AE%E6%B6%88%E6%81%AF%E4%BC%A0%E9%80%92/protobuf%E9%9B%86%E6%88%90netty%E5%AE%9E%E7%8E%B0%E5%A4%9A%E5%8D%8F%E8%AE%AE%E6%B6%88%E6%81%AF%E4%BC%A0%E9%80%92/"/>
    <id>http://wuyuzhao666.github.io/2019/05/21/protobuf集成netty实现多协议消息传递/protobuf集成netty实现多协议消息传递/</id>
    <published>2019-05-21T11:37:28.000Z</published>
    <updated>2019-05-21T12:14:34.520Z</updated>
    
    <content type="html"><![CDATA[<h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>当使用<code>socket</code>传输数据时，客户端服务端进行交互时，必须要知道数据类型，才能将数据序列化，在使用<code>protobuf</code>进行序列化时，可以使用官方推荐的方式实现多数据类型的传输。</p><h5 id="proto文件"><a href="#proto文件" class="headerlink" title="proto文件"></a>proto文件</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">message MyMessage&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">enum</span> DataType&#123;</span><br><span class="line">        StudentType = <span class="number">1</span>;</span><br><span class="line">        DogType = <span class="number">2</span>;</span><br><span class="line">        TeacherType =<span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    required DataType data_type = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    oneof dataBody&#123;</span><br><span class="line">        Student student = <span class="number">2</span>;</span><br><span class="line">        Teacher teacher = <span class="number">3</span>;</span><br><span class="line">        Dog dog = <span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">message Student &#123;</span><br><span class="line">    required string name = <span class="number">1</span>;</span><br><span class="line">    optional int32 id = <span class="number">2</span>;</span><br><span class="line">    optional string email = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message Dog &#123;</span><br><span class="line">    required string name = <span class="number">1</span>;</span><br><span class="line">    optional string type = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message Teacher &#123;</span><br><span class="line">    required string name = <span class="number">1</span>;</span><br><span class="line">    optional string address = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>.proto</code>文件中定义一个“外部”的类来进行包装所想要传递的一些数据类型，用枚举类型来表示包装在其中的数据类型是什么，<code>data_type</code>就来指明数据类型，<code>dataBody</code>就是所要传输的数据。</p><blockquote><p><code>oneof</code>官方解释：如果有一个包含许多字段的消息，并且最多只能同时设置一个字段，则可以使用<code>oneof</code>功能强制执行此行为并节省内存。</p></blockquote><p><code>oneof</code>里面可以包含许多数据类型，但是只会被设置一个数据类型，且设置了一个<code>oneof</code>字段后会清空掉前面所设置的其他<code>oneof</code>成员，所有这样可以节省许多内存。</p><h5 id="集成netty"><a href="#集成netty" class="headerlink" title="集成netty"></a>集成netty</h5><h6 id="Initializer"><a href="#Initializer" class="headerlink" title="Initializer"></a>Initializer</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyProtoInitializer</span> <span class="keyword">extends</span> <span class="title">ChannelInitializer</span>&lt;<span class="title">SocketChannel</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initChannel</span><span class="params">(SocketChannel ch)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ChannelPipeline pipeline = ch.pipeline();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//解码器，通过Google Protocol Buffers序列化框架动态的切割接收到的ByteBuf</span></span><br><span class="line">        pipeline.addLast(<span class="keyword">new</span> ProtobufVarint32FrameDecoder());</span><br><span class="line">        <span class="comment">//服务端\客户端接收的是DataInfo对象，所以这边将接收对象进行解码生产实列</span></span><br><span class="line">        pipeline.addLast(<span class="keyword">new</span> ProtobufDecoder(DataInfo.MyMessage.getDefaultInstance()));</span><br><span class="line">        <span class="comment">//Google Protocol Buffers编码器</span></span><br><span class="line">        pipeline.addLast(<span class="keyword">new</span> ProtobufVarint32LengthFieldPrepender());</span><br><span class="line">        <span class="comment">//Google Protocol Buffers编码器</span></span><br><span class="line">        pipeline.addLast(<span class="keyword">new</span> ProtobufEncoder());</span><br><span class="line"></span><br><span class="line">        pipeline.addLast(<span class="keyword">new</span> MyProtoServerHandler());</span><br><span class="line">        <span class="comment">//pipeline.addLast(new MyProtoClientHandler());</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="Serverhandler"><a href="#Serverhandler" class="headerlink" title="Serverhandler"></a>Serverhandler</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyProtoServerHandler</span> <span class="keyword">extends</span> <span class="title">SimpleChannelInboundHandler</span>&lt;<span class="title">DataInfo</span>.<span class="title">MyMessage</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">channelRead0</span><span class="params">(ChannelHandlerContext ctx, DataInfo.MyMessage msg)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">//服务端随机的发送Student、Teacher、Dog到客户端</span></span><br><span class="line">        <span class="keyword">int</span> v = <span class="keyword">new</span> Random().nextInt(<span class="number">3</span>);</span><br><span class="line">        DataInfo.MyMessage myMessage = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(v == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//创建一个包装了Student的MyMessage的实例</span></span><br><span class="line">            myMessage = DataInfo.MyMessage.newBuilder().</span><br><span class="line">                    setDataType(DataInfo.MyMessage.DataType.StudentType)</span><br><span class="line">                    .setStudent(DataInfo.Student.newBuilder().</span><br><span class="line">                            setName(<span class="string">"student"</span>).setEmail(<span class="string">"qq@qqq"</span>).build()).</span><br><span class="line">                            build();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(v == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">//创建一个包装了Teacher的MyMessage的实例</span></span><br><span class="line">            myMessage = DataInfo.MyMessage.newBuilder().</span><br><span class="line">                    setDataType(DataInfo.MyMessage.DataType.TeacherType)</span><br><span class="line">                    .setTeacher(DataInfo.Teacher.newBuilder().</span><br><span class="line">                            setName(<span class="string">"teacher"</span>).setAddress(<span class="string">"chengdu"</span>).build()).</span><br><span class="line">                            build();</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//创建一个包装了Dog的MyMessage的实例</span></span><br><span class="line">            myMessage = DataInfo.MyMessage.newBuilder().</span><br><span class="line">                    setDataType(DataInfo.MyMessage.DataType.DogType)</span><br><span class="line">                    .setDog(DataInfo.Dog.newBuilder().</span><br><span class="line">                            setName(<span class="string">"dog"</span>).setType(<span class="string">"erha"</span>).build()).</span><br><span class="line">                            build();</span><br><span class="line">        &#125;</span><br><span class="line">        ctx.channel().writeAndFlush(myMessage);</span><br><span class="line"><span class="comment">//打印出客户端发送到服务端的数据</span></span><br><span class="line">        DataInfo.MyMessage.DataType dataType = msg.getDataType();</span><br><span class="line">        <span class="keyword">if</span> (dataType == DataInfo.MyMessage.DataType.StudentType)&#123;</span><br><span class="line">            DataInfo.Student student = msg.getStudent();</span><br><span class="line">            System.out.println(student.getName());</span><br><span class="line">            System.out.println(student.getEmail());</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(dataType == DataInfo.MyMessage.DataType.TeacherType)&#123;</span><br><span class="line">            DataInfo.Teacher teacher = msg.getTeacher();</span><br><span class="line">            System.out.println(teacher.getName());</span><br><span class="line">            System.out.println(teacher.getAddress());</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            DataInfo.Dog dog = msg.getDog();</span><br><span class="line">            System.out.println(dog.getName());</span><br><span class="line">            System.out.println(dog.getType());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="ClientHandler"><a href="#ClientHandler" class="headerlink" title="ClientHandler"></a>ClientHandler</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyProtoClientHandler</span> <span class="keyword">extends</span> <span class="title">SimpleChannelInboundHandler</span>&lt;<span class="title">DataInfo</span>.<span class="title">MyMessage</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">channelRead0</span><span class="params">(ChannelHandlerContext ctx, DataInfo.MyMessage msg)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//打印服务端传输过来的数据</span></span><br><span class="line">        DataInfo.MyMessage.DataType dataType = msg.getDataType();</span><br><span class="line">        <span class="keyword">if</span> (dataType == DataInfo.MyMessage.DataType.StudentType)&#123;</span><br><span class="line">            DataInfo.Student student = msg.getStudent();</span><br><span class="line">            System.out.println(student.getName());</span><br><span class="line">            System.out.println(student.getEmail());</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(dataType == DataInfo.MyMessage.DataType.TeacherType)&#123;</span><br><span class="line">            DataInfo.Teacher teacher = msg.getTeacher();</span><br><span class="line">            System.out.println(teacher.getName());</span><br><span class="line">            System.out.println(teacher.getAddress());</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            DataInfo.Dog dog = msg.getDog();</span><br><span class="line">            System.out.println(dog.getName());</span><br><span class="line">            System.out.println(dog.getType());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelActive</span><span class="params">(ChannelHandlerContext ctx)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//先服务端发送数据</span></span><br><span class="line">        <span class="keyword">int</span> v = <span class="keyword">new</span> Random().nextInt(<span class="number">3</span>);</span><br><span class="line">        DataInfo.MyMessage myMessage = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(v == <span class="number">0</span>)&#123;</span><br><span class="line">            myMessage = DataInfo.MyMessage.newBuilder().</span><br><span class="line">                    setDataType(DataInfo.MyMessage.DataType.StudentType)</span><br><span class="line">                    .setStudent(DataInfo.Student.newBuilder().</span><br><span class="line">                            setName(<span class="string">"student"</span>).setEmail(<span class="string">"qq@qqq"</span>).build()).</span><br><span class="line">                            build();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(v == <span class="number">1</span>)&#123;</span><br><span class="line">            myMessage = DataInfo.MyMessage.newBuilder().</span><br><span class="line">                    setDataType(DataInfo.MyMessage.DataType.TeacherType)</span><br><span class="line">                    .setTeacher(DataInfo.Teacher.newBuilder().</span><br><span class="line">                            setName(<span class="string">"teacher"</span>).setAddress(<span class="string">"chengdu"</span>).build()).</span><br><span class="line">                            build();</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            myMessage = DataInfo.MyMessage.newBuilder().</span><br><span class="line">                    setDataType(DataInfo.MyMessage.DataType.DogType)</span><br><span class="line">                    .setDog(DataInfo.Dog.newBuilder().</span><br><span class="line">                            setName(<span class="string">"dog"</span>).setType(<span class="string">"erha"</span>).build()).</span><br><span class="line">                            build();</span><br><span class="line">        &#125;</span><br><span class="line">        ctx.channel().writeAndFlush(myMessage);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h4&gt;&lt;p&gt;当使用&lt;code&gt;socket&lt;/code&gt;传输数据时，客户端服务端进行交互时，必须要知道数据类型，才能将数据序列化，在使用&lt;code&gt;pr
      
    
    </summary>
    
      <category term="netty" scheme="http://wuyuzhao666.github.io/categories/netty/"/>
    
    
      <category term="protobuf集成netty" scheme="http://wuyuzhao666.github.io/tags/protobuf%E9%9B%86%E6%88%90netty/"/>
    
  </entry>
  
  <entry>
    <title>jenkins自动化构建部署到多个服务器</title>
    <link href="http://wuyuzhao666.github.io/2019/05/12/jenkins%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%84%E5%BB%BA%E9%83%A8%E7%BD%B2%E5%88%B0%E5%A4%9A%E4%B8%AA%E6%9C%8D%E5%8A%A1%E5%99%A8/jenkins%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%84%E5%BB%BA%E9%83%A8%E7%BD%B2%E5%88%B0%E5%A4%9A%E4%B8%AA%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://wuyuzhao666.github.io/2019/05/12/jenkins自动化构建部署到多个服务器/jenkins自动化构建部署到多个服务器/</id>
    <published>2019-05-12T07:12:42.000Z</published>
    <updated>2019-05-12T09:43:11.054Z</updated>
    
    <content type="html"><![CDATA[<h2 id="jenkins下载与安装"><a href="#jenkins下载与安装" class="headerlink" title="jenkins下载与安装"></a>jenkins下载与安装</h2><p><code>jenkins</code>是一款持续集成的软件，最开始想用这个软件进行项目的自动化构建部署，是由实验室的项目有三个版本，本地需要一套，测试要一套，交付维护需要一套，每次修改了代码后，都需要打成<code>war</code>包，然后通过一些<code>ftp</code>工具传过去，这样一次还好，次数多了就受不了了，所以就花了一天，学习了下<code>jenkins</code>，以后就方便多了。</p><h5 id="引言与建议"><a href="#引言与建议" class="headerlink" title="引言与建议"></a>引言与建议</h5><p>如果要先集群服务器部署，不免每台有些配置信息不一样，比如数据库连接、<code>rest</code>接口、检索地址、文件服务器地址等，此时最好，将配置文件从<code>jar</code>包里抽取出来，放置在一个固定的目录下，且命名都相同，比如，我是使用<code>/usr/test.properties</code>等。然后写代码读取、或者直接<code>Spring</code>读取就行。</p><p><code>Spring</code>读取外部文件的配置。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean id=<span class="string">"ConfigurerProperty"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"</span>&gt;</span><br><span class="line">&lt;property name=<span class="string">"order"</span> value=<span class="string">"1"</span>/&gt;</span><br><span class="line">&lt;property name=<span class="string">"ignoreResourceNotFound"</span> value=<span class="string">"true"</span>/&gt;</span><br><span class="line">&lt;property name=<span class="string">"ignoreUnresolvablePlaceholders"</span> value=<span class="string">"true"</span> /&gt;</span><br><span class="line">&lt;property name=<span class="string">"location"</span> value=<span class="string">"file:/usr/resources.properties"</span>/&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure><h5 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h5><p><a href="https://jenkins.io/" target="_blank" rel="noopener">https://jenkins.io/</a></p><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><p>下载安装好后，找到<code>jenkins</code>的<code>war</code>包<code>jenkins.war</code>，因为它是自带<code>Jetty</code>服务器的，所以直接命令运行就行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar jenkins.war</span><br></pre></td></tr></table></figure><blockquote><p>windows下在jenkins目录下打开命令窗口执行就好了。</p></blockquote><p>也可以，把这个<code>war</code>包放置在一个<code>Web</code>容器中。</p><p>然后，就可以通过<code>http://localhost:8080</code>访问。</p><p>按提示，注册账号，按提示登陆，默认安装插件就<code>OK</code>。</p><h5 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h5><ul><li><p>点击左侧的系统管理</p><center><img src="http://res.cloudinary.com/cafebabe/jks-1"></center></li><li><p>主要对系统设置、全局工具配置、插件管理来进行配置</p><center><img src="http://res.cloudinary.com/cafebabe/jks-2"></center><ul><li><p>插件管理</p><center><img src="http://res.cloudinary.com/cafebabe/jks-3"></center><p>点击可选插件，搜索安装：</p><p><code>Publish Over SSH</code>用于连接远程服务器。</p><p><code>Deploy to container</code>插件用于把打包的应用发布到远程服务器。</p></li><li><p>全局工具设置</p><blockquote><p>不要使用自动安装</p></blockquote><p><code>JDK</code>配置，<code>JAVA_HOME</code>就是自己的<code>jdk</code>目录。</p><center><img src="http://res.cloudinary.com/cafebabe/jks-4"></center><p><code>Maven</code>配置，<code>MAVEN_HOME</code>就是自己的<code>Maven</code>目录。</p><center><img src="http://res.cloudinary.com/cafebabe/jks-5"></center><p><code>git</code>，默认就行。</p><center><img src="http://res.cloudinary.com/cafebabe/jks-7"></center></li><li><p>系统设置，设置远程服务器</p><p>可设置多个节点，点击<code>add</code>。</p><center><img src="http://res.cloudinary.com/cafebabe/jks-6"></center></li></ul></li></ul><h2 id="构建与部署"><a href="#构建与部署" class="headerlink" title="构建与部署"></a>构建与部署</h2><p>配置好后，就可以进行新建任务了。</p><ul><li><p>新建任务</p><center><img src="http://res.cloudinary.com/cafebabe/jks-8"></center></li><li><p>配置</p><ul><li><p>仓库配置</p><center><img src="http://res.cloudinary.com/cafebabe/jks-9"></center><p>若仓库地址有错，会报错。</p></li><li><p>触发器构建</p><p>选择了定时构建和轮询<code>SCM</code>，就可以实现我们的自动化构建了。</p><p>一、定时构建：不管<code>SVN</code>或<code>Git</code>中数据有无变化，均执行定时化的构建任务 ；</p><p>二、轮询<code>SCM</code>：只要<code>SVN</code>或<code>Git</code>中数据有更新，则执行构建任务；</p><p>三、构建语法说明：</p><ul><li>首先格式为：<em> </em> <em> </em> *（五个星）；</li><li>第一个<em>表示分钟，取值0~59 第二个</em>表示小时，取值0~23<br> 第三个<em>表示一个月的第几天，取值1~31 第四个</em>表示第几月，取值1~12<br> 第五个*表示一周中的第几天，取值0~7，其中0和7代表的都是周日</li><li>使用举例：<br> 每隔10分钟构建一次：H/5 <em> </em> <em> </em><br> 每隔1小时构建一次：  H H/1 <em> </em> <em><br> 每月30号构建一次：    H H 30 </em> <em><br> 每两小时一次，每个工作日上午9点到下午5点(也许是上午10:38，下午12:38，下午2:38，下午4:38)<br> H H(9-16)/2 </em> * 1-5</li></ul><p>四、定时构建和轮询<code>SCM</code>使用互不冲突，具体如何组合，需要根据项目情况合理配置；</p><center><img src="http://res.cloudinary.com/cafebabe/jks-10"></center></li><li><p>部署</p><center><img src="http://res.cloudinary.com/cafebabe/jks-11"></center><p>在构建后操作处添加要部署的远程服务器，我这里添加了两个节点。</p><blockquote><p>Name : 在系统设置里配置的服务器，直接选择就行。</p><p>Source files：项目构建后的目录</p><p>Remove prefix ： 去前缀</p><p>Remote directoty ： 发布的目录，这个目录是接着你在远程服务器中配置的目录</p><p>Exec command ： 发布完执行的命令，一般会写个重启Tomcat的脚本，这里是直接执行这个脚本</p></blockquote></li><li><p>构建部署</p><center><img src="http://res.cloudinary.com/cafebabe/jks-12"></center><p>点击立即构建测试，点击控制台输出，可以查看日志输出。</p><center><img src="http://res.cloudinary.com/cafebabe/jks-13"></center><p>以下为三台服务器都部署成功，且成功执行脚本。</p><center><img src="http://res.cloudinary.com/cafebabe/jks-14"></center><p>restart.sh脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>! /bin/bash</span><br><span class="line">export JAVA_HOME=/usr/jdk1.8.0_191 </span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH </span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line"></span><br><span class="line">tomcat_home=/home/admin/apache-tomcat-8.5.35</span><br><span class="line">SHUTDOWN=$tomcat_home/bin/shutdown.sh</span><br><span class="line">STARTTOMCAT=$tomcat_home/bin/startup.sh</span><br><span class="line">echo "关闭$tomcat_home"</span><br><span class="line"><span class="meta">$</span>SHUTDOWN</span><br><span class="line"><span class="meta">#</span>杀死tomcat进程</span><br><span class="line">ps -ef|grep tomcat|grep -v grep|awk '&#123;print $2&#125;'|xargs kill -9</span><br><span class="line"><span class="meta">#</span>删除日志文件，如果你不先删除可以不要下面一行</span><br><span class="line">rm  $tomcat_home/logs/* -rf</span><br><span class="line"><span class="meta">#</span>删除tomcat的临时目录</span><br><span class="line">rm  $tomcat_home/work/* -rf</span><br><span class="line">sleep 5</span><br><span class="line"></span><br><span class="line">echo "启动$tomcat_home"</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span>STARTTOMCAT</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>看启动日志</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>tail -f $tomcat_home/logs/catalina.out</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;jenkins下载与安装&quot;&gt;&lt;a href=&quot;#jenkins下载与安装&quot; class=&quot;headerlink&quot; title=&quot;jenkins下载与安装&quot;&gt;&lt;/a&gt;jenkins下载与安装&lt;/h2&gt;&lt;p&gt;&lt;code&gt;jenkins&lt;/code&gt;是一款持续集成的软件
      
    
    </summary>
    
      <category term="工具" scheme="http://wuyuzhao666.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="jenkins" scheme="http://wuyuzhao666.github.io/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>深度分析ConcurrentLinkedQueue原理</title>
    <link href="http://wuyuzhao666.github.io/2019/04/23/%E6%B7%B1%E5%BA%A6%E5%88%86%E6%9E%90ConcurrentLinkedQueue%E5%8E%9F%E7%90%86/%E6%B7%B1%E5%BA%A6%E5%88%86%E6%9E%90ConcurrentLinkedQueue%E5%8E%9F%E7%90%86/"/>
    <id>http://wuyuzhao666.github.io/2019/04/23/深度分析ConcurrentLinkedQueue原理/深度分析ConcurrentLinkedQueue原理/</id>
    <published>2019-04-23T12:19:04.000Z</published>
    <updated>2019-04-24T02:18:55.244Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>在<code>JUC</code>包中提供了许多线程安全的并发容器，使用这些容器，无需我们再去手动的设置锁，就能实现线程安全。在这些并发容器中，又分为阻塞与非阻塞（简单来说线程进行元素的放置与取出操作时，可以将线程阻塞）。<code>ConcurrentLinkedQueue</code>就是以非阻塞方式来实现的，这个并发容器类通过循环<code>CAS</code>操作来实现线程安全队列，它不会导致当前线程被暂停，因此也避免了线程上下文切换的开销。</p><blockquote><p>阻塞容器可以通过锁来实现线程安全的，而非阻塞则通过<code>CAS</code>来实现。</p></blockquote><h3 id="CAS的原理"><a href="#CAS的原理" class="headerlink" title="CAS的原理"></a>CAS的原理</h3><p><code>CAS</code>(Compare and Swap)：比较并交换。它是对一种处理器指令的称呼，在<code>Java</code>中，<code>CAS</code>通过调用<code>JNI</code>的代码实现的。<code>CAS</code>操作顾名思义，先比较再交换（或者说更新），通过一段伪代码来看：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(;;)&#123;</span><br><span class="line">    ...</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">cas</span><span class="params">(V a, V b ,V c)</span></span>&#123;</span><br><span class="line">        <span class="comment">//a为想要修改的变量，b为当前线程调用CAS操作时a的值（即a的旧值），c为新值</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(b == a)&#123; <span class="comment">//检查其他线程是否已经对a进行了修改</span></span><br><span class="line">            b = c; <span class="comment">//更新</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>; <span class="comment">//更新成功</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>; <span class="comment">//更新操作</span></span><br><span class="line">    &#125;  </span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>当某个线程要执行<code>CAS</code>操作时，如果想要修改的值与调用<code>CAS</code>操作的线程所提供的旧值相同时，说明其他线程并未对其进行修改，则这个线程可以对其进行修改。而其他的线程则更新失败，然后继续进行尝试，直至成功。</p></blockquote><h3 id="ConcurrentLinkedQueue原理"><a href="#ConcurrentLinkedQueue原理" class="headerlink" title="ConcurrentLinkedQueue原理"></a>ConcurrentLinkedQueue原理</h3><p>简单来说，<code>ConcurrentLinkedQueue</code>就相当于<code>LinkedList</code>的线程安全版，即是一个单向链表，在其内部有个私有静态类<code>Node&lt;E&gt;</code>，通过这个类，将元素封装在其中，并保存下一个节点（<code>next</code>）,<code>Node&lt;E&gt;</code>内部通过一个<code>UNSAFE</code>类来完成<code>CAS</code>操作。</p><p>Node类的主要代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">        <span class="keyword">volatile</span> E item; <span class="comment">// volatile声明</span></span><br><span class="line">        <span class="keyword">volatile</span> Node&lt;E&gt; next; <span class="comment">// volatile声明</span></span><br><span class="line">        <span class="comment">// 构造方法  在地址itemOffset处， 值替换为item</span></span><br><span class="line">        Node(E item) &#123;</span><br><span class="line">            UNSAFE.putObject(<span class="keyword">this</span>, itemOffset, item);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// CAS操作：比较并交换，原子的更改itemOffset地址的变量。如果变量的值为cmp，并成功替换为val 返回true  </span></span><br><span class="line">        <span class="function"><span class="keyword">boolean</span> <span class="title">casItem</span><span class="params">(E cmp, E val)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> UNSAFE.compareAndSwapObject(<span class="keyword">this</span>, itemOffset, cmp, val);</span><br><span class="line">        &#125;</span><br><span class="line">       <span class="comment">// 将nextOffset地址的值替换为x</span></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">lazySetNext</span><span class="params">(Node&lt;E&gt; val)</span> </span>&#123;</span><br><span class="line">            UNSAFE.putOrderedObject(<span class="keyword">this</span>, nextOffset, val);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// CAS操作：比较并交换，原子的更改nextOffset地址的变量。如果变量的值为cmp，并成功替换为val 返回true</span></span><br><span class="line">        <span class="function"><span class="keyword">boolean</span> <span class="title">casNext</span><span class="params">(Node&lt;E&gt; cmp, Node&lt;E&gt; val)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> UNSAFE.compareAndSwapObject(<span class="keyword">this</span>, nextOffset, cmp, val);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Unsafe mechanics</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> sun.misc.Unsafe UNSAFE;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> itemOffset;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> nextOffset;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">          * 静态代码块，获取itemOffset和nextOffset</span></span><br><span class="line"><span class="comment">          */</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">static</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                UNSAFE = sun.misc.Unsafe.getUnsafe();</span><br><span class="line">                Class k = Node.class;</span><br><span class="line">                itemOffset = UNSAFE.objectFieldOffset</span><br><span class="line">                    (k.getDeclaredField(<span class="string">"item"</span>));</span><br><span class="line">                nextOffset = UNSAFE.objectFieldOffset</span><br><span class="line">                    (k.getDeclaredField(<span class="string">"next"</span>));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> Error(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><code>tail</code>节点与<code>head</code>节点的<code>CAS</code>操作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// CAS操作：比较并交换，原子的更改tailOffset地址的变量。如果变量的值为cmp，并成功替换为val 返回true</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">casTail</span><span class="params">(Node&lt;E&gt; cmp, Node&lt;E&gt; val)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> UNSAFE.compareAndSwapObject(<span class="keyword">this</span>, tailOffset, cmp, val);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">// CAS操作：比较并交换，原子的更改headOffset地址的变量。如果变量的值为cmp，并成功替换为val 返回true</span></span><br><span class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">casHead</span><span class="params">(Node&lt;E&gt; cmp, Node&lt;E&gt; val)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> UNSAFE.compareAndSwapObject(<span class="keyword">this</span>, headOffset, cmp, val);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>用到的<code>UNSAFE</code>类方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取f在堆内存的偏移地址</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">long</span> <span class="title">objectFieldOffset</span><span class="params">(Field f)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取静态f在堆内存的偏移地址</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">long</span> <span class="title">staticFieldOffset</span><span class="params">(Field f)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 原子的更改offset地址的变量。如果变量的值为expected，并成功替换为x 返回true  CAS操作</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">native</span> <span class="keyword">boolean</span> <span class="title">compareAndSwapObject</span><span class="params">(Object o, <span class="keyword">long</span> offset, Object expected,Object x)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将offset地址的值替换为x，并且通知其他线程。因为有Volatile，与putObject类似</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title">putObjectVolatile</span><span class="params">(Object o, <span class="keyword">long</span> offset, Object x)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取地址为offset 的值</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">native</span> Object <span class="title">getObjectVolatile</span><span class="params">(Object o, <span class="keyword">long</span> offset)</span></span></span><br></pre></td></tr></table></figure><p>在<code>ConcurrentLinkedQueue</code>中维护了两个变量<code>tail</code>和<code>head</code>，并且在创建<code>ConcurrentLinkedQueue</code>实例时，创建一个空节点，并将其赋值于<code>tail</code>和<code>head</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">transient</span> <span class="keyword">volatile</span> Node&lt;E&gt; head;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">transient</span> <span class="keyword">volatile</span> Node&lt;E&gt; tail;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ConcurrentLinkedQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    head = tail = <span class="keyword">new</span> Node&lt;E&gt;(<span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="入队列-add"><a href="#入队列-add" class="headerlink" title="入队列(add)"></a>入队列(add)</h4><p>入队列就是将新创建的<code>Node</code>节点添加到队列尾部，它的添加过程如下（图片来自<a href="http://www.ifeve.com）。" target="_blank" rel="noopener">www.ifeve.com）。</a></p><center><img src="http://res.cloudinary.com/cafebabe/clq-1"></center><ul><li>第一步，将元素<code>1</code>节点添加到<code>head</code>节点后面，即<code>head</code>节点的<code>next</code>节点为元素<code>1</code>，因为初始化<code>ConcurrentLinkedQueue</code>时，<code>tail</code>节点和<code>head</code>节点是同一个节点。</li><li>第二步，将元素<code>2</code>节点设置为元素<code>1</code>节点的<code>next</code>节点，将<code>tail</code>节点设置为元素<code>2</code>节点。</li><li>~~</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">offer</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">        checkNotNull(e);</span><br><span class="line">    <span class="comment">//创建一个新的入队节点</span></span><br><span class="line">        <span class="keyword">final</span> Node&lt;E&gt; newNode = <span class="keyword">new</span> Node&lt;E&gt;(e);</span><br><span class="line"><span class="comment">//创建一个指向尾节点的引用t，相当于一个中间变量，用于和p比较的</span></span><br><span class="line">    <span class="comment">//p表示尾节点</span></span><br><span class="line">    <span class="comment">//死循环，一直进行CAS操作的尝试，值至成功，返回true</span></span><br><span class="line">        <span class="keyword">for</span> (Node&lt;E&gt; t = tail, p = t;;) &#123;</span><br><span class="line">         <span class="comment">//获取p节点的下一节点</span></span><br><span class="line">            Node&lt;E&gt; q = p.next;</span><br><span class="line">            <span class="comment">//如果q为空，则p为尾节点</span></span><br><span class="line">            <span class="keyword">if</span> (q == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="comment">//p为尾节点，将新节点添加到p节点之后，CAS操作：比较并交换，如果nextOffset的值等于null的话，说明别的线程还未对其进行修改，则此次CAS操作成功，则跳出循环</span></span><br><span class="line">                <span class="keyword">if</span> (p.casNext(<span class="keyword">null</span>, newNode)) &#123;</span><br><span class="line">                    <span class="comment">//如果p不等于t，相当于tail不是尾节点，则通过CAS操作将新节点设置为尾节点，如果失败  了，则说明其他线程已将其进行了修改</span></span><br><span class="line">                    <span class="keyword">if</span> (p != t) </span><br><span class="line">                        <span class="comment">//如果tailOffset的值为t，则尝试将新节点设置为尾节点</span></span><br><span class="line">                        casTail(t, newNode);  </span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果，p等于q，说明p和q都为空，即ConcurrentLinkedQueue刚刚初始化</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (p == q)</span><br><span class="line">            </span><br><span class="line">                p = (t != (t = tail)) ? t : head;</span><br><span class="line">            <span class="comment">//p有next节点，表示p的next节点是尾节点，则需要重新更新p后将它指向next节点</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                </span><br><span class="line">                p = (p != t &amp;&amp; t != (t = tail)) ? t : q;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li><p>首先获取尾节点。</p></li><li><p>然后判断尾节点的<code>next</code>节点是否为空。</p><ul><li><p>如果为空，就尝试使用<code>CAS</code>操作添加节点</p><ul><li>如果成功，返回<code>true</code>。</li><li>如果失败，表示其他线程已经添加了新节点，则需要重新获取尾节点。</li></ul></li><li><p>如果不为空，表明其他线程已经添加了新节点进来。</p><ul><li>刚初始化。</li><li>更新尾节点。</li></ul></li></ul></li></ul><p>通过分析可知，每次入队时，都会先定位尾节点，定位成功后，通过<code>p.casNext(null, newNode)</code>这个<code>CAS</code>操作来进行入队操作，因为<code>p</code>和<code>t</code>不是每次都相同，即不是每次入队都会重新设置<code>tail</code>节点，这样减少了<code>casTail(t, newNode)</code>这个设置尾节点的<code>CAS</code>操作的数量，减少了开销，提高了入队的效率。</p></blockquote><h4 id="出队列（poll）"><a href="#出队列（poll）" class="headerlink" title="出队列（poll）"></a>出队列（poll）</h4><p>出队列就是从队列中弹出<code>head</code>节点，将其引用清空，并返回节点中的元素。</p><center><img src="http://res.cloudinary.com/cafebabe/clq-2"></center><p>出队列同入队列一样，不是每次进行出队列操作，都会更新<code>head</code>节点，只有当<code>head</code>节点的元素为空时，才会进行更新<code>head</code>节点的操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">poll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//死循环，进行出队列操作，直到成功，才返回，要么返回一个item，要么返回null。</span></span><br><span class="line">    restartFromHead:</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">       <span class="comment">//创建一个指向头节点的引用h，相当于一个中间变量，用于和p比较的</span></span><br><span class="line"><span class="comment">//p表示头节点</span></span><br><span class="line">        <span class="keyword">for</span> (Node&lt;E&gt; h = head, p = h, q;;) &#123;</span><br><span class="line">            <span class="comment">//item为头节点的元素</span></span><br><span class="line">            E item = p.item;</span><br><span class="line"><span class="comment">//如果p节点元素不为空，则使用CAS操作：如果当前线程的item地址的值等于itemOffset地址的值，就将p节点的元素值设置为空，并返回item</span></span><br><span class="line">            <span class="keyword">if</span> (item != <span class="keyword">null</span> &amp;&amp; p.casItem(item, <span class="keyword">null</span>)) &#123;</span><br><span class="line">              <span class="comment">//如果p不等于h，即head不是头节点，将p的next节点设置为头节点</span></span><br><span class="line">                <span class="keyword">if</span> (p != h) </span><br><span class="line">                    updateHead(h, ((q = p.next) != <span class="keyword">null</span>) ? q : p);</span><br><span class="line">                <span class="keyword">return</span> item;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//表明已是最后一个节点，跳出循环</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ((q = p.next) == <span class="keyword">null</span>) &#123;</span><br><span class="line">                updateHead(h, p);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//p与q相同，q和p都为空，跳到外层循环，重新开始</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (p == q)</span><br><span class="line">                <span class="keyword">continue</span> restartFromHead;</span><br><span class="line">            <span class="comment">//p有next节点，设置p指向它的next节点</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                p = q;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>首先获取头节点的元素。</li><li>然后判断头节点元素是否为空。<ul><li>如果为空，表示另外一个线程已经进行了一次出队操作将该节点的元素取走。</li><li>如果非空，则使用<code>CAS</code>操作将头节点的引用设置成<code>null</code>。<ul><li>如果<code>CAS</code>成功，则直接返回头节点的元素。</li><li>如果不成功，表示另外一个线程已经进行了一次出队操作更新了<code>head</code>节点，导致元素发生了变化，需要重新获取头节点。</li></ul></li></ul></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h3&gt;&lt;p&gt;在&lt;code&gt;JUC&lt;/code&gt;包中提供了许多线程安全的并发容器，使用这些容器，无需我们再去手动的设置锁，就能实现线程安全。在这些并发容器
      
    
    </summary>
    
      <category term="Java并发" scheme="http://wuyuzhao666.github.io/categories/Java%E5%B9%B6%E5%8F%91/"/>
    
    
      <category term="并发容器" scheme="http://wuyuzhao666.github.io/tags/%E5%B9%B6%E5%8F%91%E5%AE%B9%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>linux下搭建shdowsocks服务端</title>
    <link href="http://wuyuzhao666.github.io/2019/04/18/linux%E4%B8%8B%E6%90%AD%E5%BB%BAshdowsocks%E6%9C%8D%E5%8A%A1%E7%AB%AF/linux%E4%B8%8B%E6%90%AD%E5%BB%BAshdowsocks%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    <id>http://wuyuzhao666.github.io/2019/04/18/linux下搭建shdowsocks服务端/linux下搭建shdowsocks服务端/</id>
    <published>2019-04-18T05:48:38.000Z</published>
    <updated>2019-04-21T13:33:59.467Z</updated>
    
    <content type="html"><![CDATA[<p>作为中国的IT从业人员，有时需要翻越长城，浏览一下国外的网站，这时就可以购买一台位于国外节点的云服务器搭建<code>shdowsocks</code>服务端，然后自己的多终端设备都可以连接这个服务端，跨过长城。</p><h3 id="连接云服务器"><a href="#连接云服务器" class="headerlink" title="连接云服务器"></a>连接云服务器</h3><ul><li><p>首先，购买一台云服务器，任意平台的云服务器都可以，AWS、阿里云、腾讯云皆可，不过国内的相对便宜些，有些会有学生优惠，这里以阿里云为例。</p><blockquote><p>按需购买好云服务器后，会有一个密钥对文件，阿里云可以创建实例时绑定密钥，也可以创建好后再绑定。</p><center><img src="http://res.cloudinary.com/cafebabe/ss-1"></center></blockquote></li><li><p>然后，使用这个<code>.pem</code>文件连接云服务器，此处以<code>Xshell</code>连接为例。</p><blockquote><p>用户名默认为<code>root</code>，密码选择<code>Public Key</code>导入你的密钥文件，即可连接。</p><center><img src="http://res.cloudinary.com/cafebabe/ss-2"></center></blockquote></li></ul><h3 id="安装Shadowsocks服务端"><a href="#安装Shadowsocks服务端" class="headerlink" title="安装Shadowsocks服务端"></a>安装Shadowsocks服务端</h3><h4 id="安装pip"><a href="#安装pip" class="headerlink" title="安装pip"></a>安装pip</h4><p>使用包管理工具<code>pip</code>安装<code>python</code>版本的<code>Shadowsocks</code>，先安装<code>pip</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@iZt4n2suiu81ljhwj0y8ppZ ~]<span class="comment"># curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"</span></span><br><span class="line">[root@iZt4n2suiu81ljhwj0y8ppZ ~]<span class="comment"># python get-pip.py</span></span><br></pre></td></tr></table></figure><h4 id="安装配置Shadowsocks服务端"><a href="#安装配置Shadowsocks服务端" class="headerlink" title="安装配置Shadowsocks服务端"></a>安装配置Shadowsocks服务端</h4><p>安装<code>Shadowsocks</code>，此版本的 <code>shadowsocks</code> 已发布到<code>pip</code>上，直接使用<code>pip</code>安装。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@iZt4n2suiu81ljhwj0y8ppZ ~]<span class="comment"># pip install --upgrade pip</span></span><br><span class="line">[root@iZt4n2suiu81ljhwj0y8ppZ ~]<span class="comment"># pip install shadowsocks</span></span><br></pre></td></tr></table></figure><p>安装完成后，再创建一个<code>shadowsocks.json</code>文件，通过读取这个文件的配置来启动，就不用每次启动都输入所有的配置信息。</p><ul><li><p>多端口配置</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@iZt4n2suiu81ljhwj0y8ppZ ~]<span class="comment"># vim /etc/shadowsocks.json</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"server"</span>: <span class="string">"0.0.0.0"</span>,</span><br><span class="line">  <span class="string">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">  <span class="string">"local_port"</span>: <span class="number">1080</span>,</span><br><span class="line">  <span class="string">"port_password"</span>: &#123;</span><br><span class="line">    <span class="string">"123456"</span>: <span class="string">"填写密码"</span>,</span><br><span class="line">    <span class="string">"123457"</span>: <span class="string">"填写密码"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"timeout"</span>: <span class="number">600</span>,</span><br><span class="line">  <span class="string">"method"</span>: <span class="string">"rc4-md5"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>其中<code>server</code>为你的云服务器的<code>私有地址</code>、<code>私有地址</code>、<code>私有地址</code>(说三遍)</li><li><code>method</code>为加密方法，有多种选择，推荐使用<code>rc4-md5</code>，这种方式，加密开销小些。</li></ul></blockquote></li><li><p>单端口配置</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"server"</span>: <span class="string">"0.0.0.0"</span>,</span><br><span class="line">    <span class="string">"server_port"</span>: <span class="number">12345</span>,</span><br><span class="line">    <span class="string">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="string">"local_port"</span>: <span class="number">1080</span>,</span><br><span class="line">    <span class="string">"password"</span>: <span class="string">"cowbeer"</span>,</span><br><span class="line">    <span class="string">"timeout"</span>: <span class="number">300</span>,</span><br><span class="line">    <span class="string">"method"</span>: <span class="string">"rc4-md5"</span>,</span><br><span class="line">    <span class="string">"fast_open"</span>: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置自启动"><a href="#配置自启动" class="headerlink" title="配置自启动"></a>配置自启动</h3><p>编辑<code>shadowsocks</code>服务的启动脚本文件，内容如下：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@iZt4n2suiu81ljhwj0y8ppZ ~]<span class="comment"># vim /etc/systemd/system/shadowsocks.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Shadowsocks</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">TimeoutStartSec=<span class="number">0</span></span><br><span class="line">ExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>执行以下命令启动 <code>shadowsocks</code>服务：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@iZt4n2suiu81ljhwj0y8ppZ ~]<span class="comment"># systemctl enable shadowsocks</span></span><br><span class="line">[root@iZt4n2suiu81ljhwj0y8ppZ ~]<span class="comment"># systemctl start shadowsocks</span></span><br></pre></td></tr></table></figure><p>检查 <code>shadowsocks</code> 服务是否已成功启动，可以执行以下命令查看服务的状态：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@iZt4n2suiu81ljhwj0y8ppZ ~]<span class="comment"># systemctl status shadowsocks -l</span></span><br></pre></td></tr></table></figure><center><img src="http://res.cloudinary.com/cafebabe/ss-3"></center><br>### 检查防火墙<br><br>安装无误后，若开启了防火墙，配置防火墙规则，开放你配置的端口：<br><br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@iZt4n2suiu81ljhwj0y8ppZ ~]<span class="comment"># firewall-cmd --zone=public --add-port=123456/tcp --permanent</span></span><br><span class="line">[root@iZt4n2suiu81ljhwj0y8ppZ ~]<span class="comment"># firewall-cmd --zone=public --add-port=123457/tcp --permanent</span></span><br><span class="line">[root@iZt4n2suiu81ljhwj0y8ppZ ~]<span class="comment"># firewall-cmd --reload</span></span><br></pre></td></tr></table></figure><br><br>以下为未开启防火墙的输出结果：<br><br><center><img src="http://res.cloudinary.com/cafebabe/ss-5"></center></li></ul><h3 id="云服务器配置安全组"><a href="#云服务器配置安全组" class="headerlink" title="云服务器配置安全组"></a>云服务器配置安全组</h3><p><code>shdowsocks</code>安装配置完后，还需要配置安全组。</p><blockquote><p>安全组是一种虚拟防火墙，具备状态检测和数据包过滤功能，用于在云端划分安全域。可以通过配置安全组规则，允许或禁止安全组内的ECS实例对公网或私网的访问。</p></blockquote><p>点开相应实例的左侧的网络与安全的安全组，配置安全组规则：</p><center><img src="http://res.cloudinary.com/cafebabe/ss-6"></center><blockquote><ul><li>安全组出方向默认允许所有访问，即从安全组内ECS访问外部都是放行的。</li><li>端口范围：刚刚配置的<code>shdowsocks</code>的端口，1/12345表示1到12345.</li><li>授权对象：0.0.0.0/0，本机就行。</li></ul></blockquote><h3 id="配置客户端"><a href="#配置客户端" class="headerlink" title="配置客户端"></a>配置客户端</h3><p>安装配置完后，就可以用<code>shdowsocks</code>客户端进行连接了。</p><p>Windows版本的客户端下载地址：</p><p><a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="noopener">https://github.com/shadowsocks/shadowsocks-windows/releases</a></p><p>无需安装，点开后，添加一个你刚刚配置的服务端的信息，就可以使用了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;作为中国的IT从业人员，有时需要翻越长城，浏览一下国外的网站，这时就可以购买一台位于国外节点的云服务器搭建&lt;code&gt;shdowsocks&lt;/code&gt;服务端，然后自己的多终端设备都可以连接这个服务端，跨过长城。&lt;/p&gt;
&lt;h3 id=&quot;连接云服务器&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="Linux" scheme="http://wuyuzhao666.github.io/categories/Linux/"/>
    
    
      <category term="shdowsocks" scheme="http://wuyuzhao666.github.io/tags/shdowsocks/"/>
    
  </entry>
  
  <entry>
    <title>部署Web应用到Tomcat根目录</title>
    <link href="http://wuyuzhao666.github.io/2019/04/15/%E9%83%A8%E7%BD%B2Web%E5%BA%94%E7%94%A8%E5%88%B0Tomcat%E6%A0%B9%E7%9B%AE%E5%BD%95/%E9%83%A8%E7%BD%B2Web%E5%BA%94%E7%94%A8%E5%88%B0Tomcat%E6%A0%B9%E7%9B%AE%E5%BD%95/"/>
    <id>http://wuyuzhao666.github.io/2019/04/15/部署Web应用到Tomcat根目录/部署Web应用到Tomcat根目录/</id>
    <published>2019-04-15T02:17:50.000Z</published>
    <updated>2019-04-15T02:40:17.467Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p><code>Tomcat</code>安装后，默认目录是<code>/webapps/ROOT</code>，我们自己的<code>Web</code>应用就需要以<code>localhost:8080/test</code>这种方式来访问，有时需要将Web应用部署到<code>Tomcat</code>根目录下，就可以<code>localhost:8080</code>这种方式访问。</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li><p>首先，进入<code>Tomcat</code>的<code>conf</code>文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 conf]# cd /home/apache-tomcat-8.5.35/conf</span><br></pre></td></tr></table></figure></li><li><p>然后，打开<code>server.xml</code>配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 conf]# vi server.xml</span><br></pre></td></tr></table></figure></li><li><p>在<code>&lt;Host&gt;&lt;/Host&gt;</code>区域的末尾添加</p><blockquote><context path docbase="/home/apache-tomcat-8.5.35/webapps/test" debug="0" reloadable="true"></context></blockquote><p><code>docBase</code>中为在<code>webapps</code>中的<code>Web</code>应用的地址。</p><blockquote><p>使用/pattern：从光标开始处向文件尾搜索pattern</p><p>/&lt;Host</p></blockquote><center><img src="http://res.cloudinary.com/cafebabe/tomcat-0"></center></li></ul><p>在浏览器键入<code>Tomcat</code>地址加端口，即可访问。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Tomcat&lt;/code&gt;安装后，默认目录是&lt;code&gt;/webapps/ROOT&lt;/code&gt;，我们自己的&lt;code&gt;Web&lt;
      
    
    </summary>
    
      <category term="Linux" scheme="http://wuyuzhao666.github.io/categories/Linux/"/>
    
    
      <category term="Tomcat#" scheme="http://wuyuzhao666.github.io/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>idea配置jvm参数</title>
    <link href="http://wuyuzhao666.github.io/2019/04/12/idea%E9%85%8D%E7%BD%AEjvm%E5%8F%82%E6%95%B0/idea%E9%85%8D%E7%BD%AEjvm%E5%8F%82%E6%95%B0/"/>
    <id>http://wuyuzhao666.github.io/2019/04/12/idea配置jvm参数/idea配置jvm参数/</id>
    <published>2019-04-12T01:41:02.000Z</published>
    <updated>2019-04-12T01:41:02.341Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>常用JVM配置参数</title>
    <link href="http://wuyuzhao666.github.io/2019/04/08/%E5%B8%B8%E7%94%A8JVM%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0/%E5%B8%B8%E7%94%A8JVM%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0/"/>
    <id>http://wuyuzhao666.github.io/2019/04/08/常用JVM配置参数/常用JVM配置参数/</id>
    <published>2019-04-08T00:42:03.000Z</published>
    <updated>2019-04-08T01:19:13.974Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Trace跟踪参数"><a href="#Trace跟踪参数" class="headerlink" title="Trace跟踪参数"></a>Trace跟踪参数</h2><ul><li><p>-verbose:gc</p><p>-XX:+printGC</p></li></ul><blockquote><p>可以打印GC的简要信息</p></blockquote><ul><li>-XX:+PrintGCDetails</li></ul><blockquote><p>打印GC详细信息</p></blockquote><ul><li>-XX:+PrintGCTimeStamps</li></ul><blockquote><p>打印CG发生的时间戳</p></blockquote><ul><li>-Xloggc:log/gc.log</li></ul><blockquote><p>指定GC log的位置，以文件输出</p><p>帮助开发人员分析问题</p></blockquote><ul><li>-XX:+PrintHeapAtGC</li></ul><blockquote><p>每次一次GC后，都打印堆信息</p></blockquote><ul><li>-XX:+TraceClassLoading</li></ul><blockquote><p>监控类的加载</p></blockquote><h2 id="堆的分配参数"><a href="#堆的分配参数" class="headerlink" title="堆的分配参数"></a>堆的分配参数</h2><ul><li>-Xmx –Xms</li></ul><blockquote><p>指定最大堆和最小堆</p></blockquote><ul><li>-Xmn</li></ul><blockquote><p>设置新生代大小</p></blockquote><ul><li>-XX:NewRatio</li></ul><blockquote><p>新生代（eden+2*s）和老年代（不包含永久区）的比值</p><p>=4 表示 新生代:老年代=1:4，即年轻代占堆的1/5</p></blockquote><ul><li>-XX:SurvivorRatio</li></ul><blockquote><p>设置两个Survivor区和eden的比</p><p>=8表示 两个Survivor :eden=2:8，即一个Survivor占年轻代的1/10</p><p>在HotSpot虚拟机中，默认Eden区与一个Survivor区比例为8：1</p></blockquote><ul><li>-XX:+HeapDumpOnOutOfMemoryError</li></ul><blockquote><p>OOM时导出堆到文件</p></blockquote><ul><li>-XX:+HeapDumpPath</li></ul><blockquote><p>导出OOM的路径</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Xmx20m -Xms5m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=d:/a.dump</span><br></pre></td></tr></table></figure><ul><li>-XX:OnOutOfMemoryError</li></ul><blockquote><p>在OOM时，执行一个脚本</p><p>“-XX:OnOutOfMemoryError=D:/tools/jdk1.7_40/bin/printstack.bat %p“</p><p>当程序OOM时，在D:/a.txt中将会生成线程的dump</p><p>可以在OOM时，发送邮件，甚至是重启程序</p></blockquote><h2 id="永久区分配参数"><a href="#永久区分配参数" class="headerlink" title="永久区分配参数"></a>永久区分配参数</h2><ul><li>-XX:PermSize  -XX:MaxPermSize</li></ul><blockquote><p>设置永久区的初始空间和最大空间</p></blockquote><h2 id="栈大小分配"><a href="#栈大小分配" class="headerlink" title="栈大小分配"></a>栈大小分配</h2><ul><li>-Xss</li></ul><blockquote><p>-Xss256k</p><p>通常只有几百K</p><p>决定了函数调用的深度</p><p>每个线程都有独立的栈空间</p><p>局部变量、参数 分配在栈上</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Trace跟踪参数&quot;&gt;&lt;a href=&quot;#Trace跟踪参数&quot; class=&quot;headerlink&quot; title=&quot;Trace跟踪参数&quot;&gt;&lt;/a&gt;Trace跟踪参数&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;-verbose:gc&lt;/p&gt;
&lt;p&gt;-XX:+printGC&lt;/
      
    
    </summary>
    
      <category term="Java虚拟机" scheme="http://wuyuzhao666.github.io/categories/Java%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    
      <category term="JVM参数" scheme="http://wuyuzhao666.github.io/tags/JVM%E5%8F%82%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Linux下Apache服务器的安装与配置</title>
    <link href="http://wuyuzhao666.github.io/2019/04/07/Linux%E4%B8%8BApache%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/Linux%E4%B8%8BApache%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>http://wuyuzhao666.github.io/2019/04/07/Linux下Apache服务器的安装与配置/Linux下Apache服务器的安装与配置/</id>
    <published>2019-04-07T12:39:17.000Z</published>
    <updated>2019-04-29T09:51:42.458Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在<code>linux</code>中，<code>Apache</code>服务器叫做<code>httpd</code>。</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>首先下载<code>httpd</code>与<code>httpd</code>的依赖软件。</p><ul><li><p>Apache HTTP Server</p><p><a href="http://httpd.apache.org/download.cgi#apache24" target="_blank" rel="noopener">http://httpd.apache.org/download.cgi#apache24</a></p></li><li><p>APR和APR-Util</p><p><a href="http://apr.apache.org/download.cgi" target="_blank" rel="noopener">http://apr.apache.org/download.cgi</a></p></li><li><p>PCRE</p><p><a href="https://sourceforge.net/projects/pcre/files/pcre/" target="_blank" rel="noopener">https://sourceforge.net/projects/pcre/files/pcre/</a></p></li></ul><p>没有<code>gcc/gcc-c++</code>的话，先安装<code>gcc/gcc-c++</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]# yum install gcc-c++</span><br></pre></td></tr></table></figure><blockquote><p>基于centos，其余系统相应变化。</p><p>先确定服务器是否联网，若安装过程出现错误，可能是缺某些依赖包，谷歌百度下，会有结果的。</p></blockquote><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><h4 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -zxf apr-1.6.5.tar.gz</span><br><span class="line">tar -zxf apr-util-1.6.1.tar.gz</span><br><span class="line">tar -zxf pcre-8.38.tar.gz</span><br><span class="line">tar -zxf httpd-2.4.37.tar.gz</span><br></pre></td></tr></table></figure><blockquote><p>默认解压到当前目录</p></blockquote><h4 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h4><p>直接复制粘贴，修改成刚刚解压的相应目录。</p><ul><li>apr的安装</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd apr-1.6.5</span><br><span class="line"></span><br><span class="line">./configure --prefix=/home/apr-1.6.5</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line">make install</span><br></pre></td></tr></table></figure><ul><li>apr-util的安装</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd ../apr-util-1.6.1</span><br><span class="line"></span><br><span class="line">./configure --prefix=/home/apr-util --with-apr=/home/apr-1.6.5/bin/apr-1-config</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line">make install</span><br></pre></td></tr></table></figure><ul><li>pcre的安装</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd ../pcre-8.38</span><br><span class="line"></span><br><span class="line">./configure --prefix=/home/pcre-8.38 --with-apr=/home/apr-1.6.5/bin/apr-1-config</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line">make install</span><br></pre></td></tr></table></figure><ul><li>httpd的安装</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd ../httpd-2.4.18</span><br><span class="line"></span><br><span class="line">./configure --prefix=/home/httpd-2.4.37 --with-pcre=/home/pcre-8.38 --with-apr=/home/apr-1.6.5 --with-apr-util=/home/apr-util-1.6.1</span><br><span class="line"></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h4 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h4><center><img src="http://res.cloudinary.com/cafebabe/linux-1"></center><p>安装成功。</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>想要将<code>httpd</code>作为文件服务器，需要更改一些配置。</p><ul><li>进入<code>httpd</code>的<code>conf</code>文件夹。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/httpd-2.4.37/conf</span><br></pre></td></tr></table></figure><ul><li>打开<code>httpd.conf</code>配置文件。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi httpd.conf</span><br></pre></td></tr></table></figure><ul><li>更改端口号</li></ul><center><img src="http://res.cloudinary.com/cafebabe/linux-2"></center><ul><li>更改主机号</li></ul><center><img src="http://res.cloudinary.com/cafebabe/linux-3"></center><ul><li>更改文件目录</li></ul><center><img src="http://res.cloudinary.com/cafebabe/linux-4"></center><ul><li><p>启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@hmaster bin]# ./apachectl start</span><br><span class="line">[root@hmaster bin]# ./apachectl stop</span><br><span class="line">[root@hmaster bin]# ./apachectl restart</span><br></pre></td></tr></table></figure></li></ul><ul><li>检查</li></ul><p>出现此页面，则安装成功。</p><center><img src="http://res.cloudinary.com/cafebabe/linux-5"></center><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>遇到的问题：</p><ul><li><p>启动时遇到的问题</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">httpd: Could not open configuration file /xxx/conf/httpd.conf: No such file or directory</span><br></pre></td></tr></table></figure><p>解决办法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./apachectl -f /xxx/httpd/conf/httpd.conf -k start</span><br></pre></td></tr></table></figure><p>以<code>httpd.conf</code>配置文件启动。</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;在&lt;code&gt;linux&lt;/code&gt;中，&lt;code&gt;Apache&lt;/code&gt;服务器叫做&lt;code&gt;httpd&lt;/code&gt;。&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="Linux" scheme="http://wuyuzhao666.github.io/categories/Linux/"/>
    
    
      <category term="Apache" scheme="http://wuyuzhao666.github.io/tags/Apache/"/>
    
  </entry>
  
</feed>
